{
  "id": "32d549147c099a871b54316a30b1edc8",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/ICO.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; \n\ncontract ChainSphereTokenICO is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // --- New Token Variables for multi-standard USDT ---\n    IERC20 public usdtERC20;\n    IERC20 public usdtBEP20;\n    \n    // (Optional fallback variable if needed, but not used in buyToken)\n    // IERC20 public usdt;\n\n    uint256 public icoStart;\n    uint256 public icoEnd;\n    bool public manualPause;\n    uint256 public soldTokens;\n    uint256 public tokenPrice;\n\n    // vesting part\n    uint256 public lockDuration = 2 minutes;\n    uint256 public vestingInterval = 1 minutes;\n\n    struct VestingSchedule {\n        uint256 totalAmount;\n        uint256 claimedAmount;\n        uint256 lockEndTime;\n        uint256 unlockPerBatch;\n    }\n    mapping(address => VestingSchedule) public vestingSchedules;\n\n    struct SalePhaseInfo {\n        uint256 allocatedSupply;\n        uint256 price;\n        uint256 lockingPeriod;\n    }\n\n    enum SalePhase {\n        notStarted,\n        Privatesale,\n        Presale1,\n        Presale2,\n        Publicsale,\n        Pause,\n        Ended\n    }\n    SalePhase public salePhase;\n    mapping(SalePhase => SalePhaseInfo) public salePhases;\n\n    struct LockingSchedule {\n        uint256 amount;\n        uint256 purchaseTime;\n        SalePhase phase;\n        uint256 unlockTime;\n    }\n    mapping(address => LockingSchedule[]) public lockingBalances;\n    mapping(SalePhase => address[]) public phaseBuyers;\n\n    event TokenBought(\n        address indexed buyer,\n        uint256 usdtAmount,\n        uint256 tokenAmount,\n        uint256 unlockTime\n    );\n    event TokensClaimed(address indexed buyer, uint256 amount);\n\n    struct UserSaleDetails{\n        uint256 saleType;\n        uint256 totalTokens;\n    }\n    mapping(address => UserSaleDetails) public userDetails;\n    \n    // --- New Enum to select token standard ---\n    enum TokenStandard { ERC20, BEP20 }\n\n    // --- Updated Constructor ---\n    // Now takes two addresses: one for the official USDT ERC20 and one for the official USDT BEP20.\n    constructor(address _usdtERC20, address _usdtBEP20)\n        ERC20(\"ChainSphereToken\", \"CSP\")\n        Ownable(msg.sender)\n    {\n        require(_usdtERC20 != address(0) && _usdtBEP20 != address(0), \"Invalid USDT addresses\");\n        usdtERC20 = IERC20(_usdtERC20);\n        usdtBEP20 = IERC20(_usdtBEP20);\n        // Optionally, you could set the fallback usdt variable to one of these:\n        // usdt = IERC20(_usdtERC20);\n\n        uint256 totalSupply = 5310000000 * 10**decimals();\n        _mint(msg.sender, totalSupply);\n\n        salePhases[SalePhase.Privatesale] = SalePhaseInfo(\n            (totalSupply * 10) / 100,\n            5 * 10**16,\n            730 days\n        );\n        salePhases[SalePhase.Presale1] = SalePhaseInfo(\n            (totalSupply * 10) / 100,\n            7 * 10**16,\n            730 days\n        );\n        salePhases[SalePhase.Presale2] = SalePhaseInfo(\n            (totalSupply * 10) / 100,\n            9 * 10**16,\n            730 days\n        );\n        salePhases[SalePhase.Publicsale] = SalePhaseInfo(\n            (totalSupply * 5) / 100,\n            12 * 10**16,\n            730 days\n        ); // No lock\n\n        salePhase = SalePhase.notStarted;\n    }\n\n    // --- New Setter Functions for USDT addresses ---\n    function setERC20USDT(address _usdtERC20) external onlyOwner {\n        require(_usdtERC20 != address(0), \"Invalid address\");\n        usdtERC20 = IERC20(_usdtERC20);\n    }\n    \n    function setBEP20USDT(address _usdtBEP20) external onlyOwner {\n        require(_usdtBEP20 != address(0), \"Invalid address\");\n        usdtBEP20 = IERC20(_usdtBEP20);\n    }\n\n    modifier onlyDuringICO() {\n        require(\n            block.timestamp >= icoStart && block.timestamp <= icoEnd,\n            \"ICO is not active\"\n        );\n        _;\n    }\n\n    function setStartTime(uint256 startTime_) external onlyOwner {\n        require(\n            startTime_ > block.timestamp,\n            \"Start time must be in the future\"\n        );\n        icoStart = startTime_;\n    }\n\n    function setEndTime(uint256 endTime_) external onlyOwner {\n        require(endTime_ > icoStart, \"End time must be after start time\");\n        icoEnd = endTime_;\n    }\n\n    function PauseResume() external onlyOwner {\n        manualPause = !manualPause;\n        if (manualPause) {\n            salePhase = SalePhase.Pause;\n        }\n    }\n\n    function setLockingPeriod(SalePhase phase, uint256 period)\n        external\n        onlyOwner\n    {\n        require(salePhases[phase].allocatedSupply > 0, \"Invalid sale phase\");\n        salePhases[phase].lockingPeriod = period;\n\n        address[] storage buyers = phaseBuyers[phase];\n        for (uint256 i = 0; i < buyers.length; i++) {\n            LockingSchedule[] storage schedules = lockingBalances[buyers[i]];\n            for (uint256 j = 0; j < schedules.length; j++) {\n                if (schedules[j].amount > 0 && schedules[j].phase == phase) {\n                    schedules[j].unlockTime =\n                        schedules[j].purchaseTime +\n                        period;\n                }\n            }\n        }\n    }\n\n    function setSalePhase(SalePhase phase) external onlyOwner {\n        require(!manualPause, \"Cannot change phase while ICO is paused\");\n        require(\n            (phase == SalePhase.Privatesale &&\n                salePhase == SalePhase.notStarted) ||\n                (phase == SalePhase.Presale1 &&\n                    salePhase == SalePhase.Privatesale) ||\n                (phase == SalePhase.Presale2 &&\n                    salePhase == SalePhase.Presale1) ||\n                (phase == SalePhase.Publicsale &&\n                    salePhase == SalePhase.Presale2) ||\n                (phase == SalePhase.Ended && salePhase == SalePhase.Publicsale),\n            \"Invalid sale phase transition!\"\n        );\n        salePhase = phase;\n        tokenPrice = salePhases[phase].price;\n    }\n\n    // --- Updated buyToken Function ---\n    // Added an extra parameter \"tokenStandard\" to indicate which USDT (ERC20/BEP20) to use\n    function buyToken(\n    uint256 usdtAmount,\n    uint256 bnbPrice_,\n    TokenStandard tokenStandard\n) external payable onlyDuringICO nonReentrant {\n    require(\n        salePhase != SalePhase.notStarted &&\n        salePhase != SalePhase.Pause &&\n        salePhase != SalePhase.Ended,\n        \"No active sale phase\"\n    );\n \n    SalePhaseInfo storage currentPhase = salePhases[salePhase];\n    uint256 tokenAmount;\n    uint256 currentTime = block.timestamp;\n    uint256 unlockTime = currentTime + currentPhase.lockingPeriod;\n \n    // Handle payment method\n    if (msg.value > 0) {\n        // --- BNB Payment ---\n        require(usdtAmount == 0, \"Cannot send both BNB and USDT\");\n        require(bnbPrice_ > 0, \"Invalid BNB price\");\n        tokenAmount = (msg.value * 10**18) / bnbPrice_;\n    } else {\n        // --- USDT Payment ---\n        require(usdtAmount > 0, \"USDT amount must be > 0\");\n \n        tokenAmount = (usdtAmount * 10**18) / currentPhase.price;\n \n        if (tokenStandard == TokenStandard.ERC20) {\n            require(address(usdtERC20) != address(0), \"ERC20 USDT not set\");\n            usdtERC20.safeTransferFrom(msg.sender, address(this), usdtAmount);\n        } else if (tokenStandard == TokenStandard.BEP20) {\n            require(address(usdtBEP20) != address(0), \"BEP20 USDT not set\");\n            usdtBEP20.safeTransferFrom(msg.sender, address(this), usdtAmount);\n        } else {\n            revert(\"Unsupported token standard\");\n        }\n    }\n \n    require(tokenAmount > 0, \"Token amount must be > 0\");\n    require(currentPhase.allocatedSupply >= tokenAmount, \"Insufficient allocated tokens\");\n    require(balanceOf(owner()) >= tokenAmount, \"Not enough tokens in owner's balance\");\n \n    // Locking & tracking\n    lockingBalances[msg.sender].push(\n        LockingSchedule({\n            amount: tokenAmount,\n            purchaseTime: currentTime,\n            phase: salePhase,\n            unlockTime: unlockTime\n        })\n    );\n \n    phaseBuyers[salePhase].push(msg.sender);\n    soldTokens += tokenAmount;\n    currentPhase.allocatedSupply -= tokenAmount;\n \n    _transfer(owner(), msg.sender, tokenAmount);\n \n    userDetails[msg.sender].saleType = uint256(salePhase);\n    userDetails[msg.sender].totalTokens += tokenAmount;\n \n    emit TokenBought(\n        msg.sender,\n        usdtAmount > 0 ? usdtAmount : msg.value,\n        tokenAmount,\n        unlockTime\n    );\n}\n\n    function claimTokens() external nonReentrant {\n        LockingSchedule[] storage schedules = lockingBalances[msg.sender];\n        uint256 totalClaimable = 0;\n        for (uint256 i = 0; i < schedules.length; i++) {\n            if (\n                schedules[i].amount > 0 &&\n                block.timestamp >= schedules[i].unlockTime\n            ) {\n                totalClaimable += schedules[i].amount;\n                schedules[i].amount = 0; // Mark as claimed/unlocked\n            }\n        }\n        require(totalClaimable > 0, \"No unlocked tokens to claim\");\n        emit TokensClaimed(msg.sender, totalClaimable);\n    }\n\n    function availableBalance(address account) public view returns (uint256) {\n        uint256 locked = 0;\n        LockingSchedule[] memory schedules = lockingBalances[account];\n        for (uint256 i = 0; i < schedules.length; i++) {\n            if (\n                schedules[i].amount > 0\n            ) {\n                locked += schedules[i].amount;\n            }\n        }\n        return balanceOf(account) - locked;\n    }\n\n    function checkStatus() external view returns (string memory) {\n        if (manualPause) return \"ICO is manually paused by owner\";\n        if (icoStart == 0 || icoEnd == 0) return \"ICO has not started yet\";\n        if (block.timestamp >= icoStart && block.timestamp <= icoEnd)\n            return \"ICO is active\";\n        if (block.timestamp > icoEnd) return \"ICO has ended\";\n        return \"ICO has not started yet\";\n    }\n\n    // Override transfer to ensure locked tokens cannot be transferred.\n    function transfer(address recipient, uint256 amount)\n        public\n        override\n        returns (bool)\n    {\n        require(\n            availableBalance(msg.sender) >= amount,\n            \"Insufficient unlocked balance because you have not claimed yet\"\n        );\n        return super.transfer(recipient, amount);\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public override returns (bool) {\n        require(\n            availableBalance(sender) >= amount,\n            \"You tokens are still locked or you haven't claimed yet\"\n        );\n        return super.transferFrom(sender, recipient, amount);\n    }\n\n    function transferWithLock(address recipient, uint256 amount)\n        external\n        onlyOwner\n    {\n        require(balanceOf(owner()) >= amount, \"Not enough tokens\");\n        _transfer(owner(), address(this), amount);\n\n        vestingSchedules[recipient] = VestingSchedule({\n            totalAmount: amount,\n            claimedAmount: 0,\n            lockEndTime: block.timestamp + lockDuration,\n            unlockPerBatch: (amount * 20) / 100\n        });\n    }\n\n    function claimVestedTokens() external nonReentrant {\n        VestingSchedule storage schedule = vestingSchedules[msg.sender];\n        require(schedule.totalAmount > 0, \"No tokens allocated for vesting\");\n        require(\n            block.timestamp >= schedule.lockEndTime,\n            \"Lock period is still active\"\n        );\n\n        uint256 unlocked = getUnlockedTokens(msg.sender);\n        require(unlocked > 0, \"No vested tokens available to claim\");\n\n        schedule.claimedAmount += unlocked;\n        _transfer(address(this), msg.sender, unlocked);\n    }\n\n    function balanceOf(address account) public view override returns (uint256) {\n        uint256 unlockedBalance = super.balanceOf(account);\n        // If there is a vesting schedule, include the locked tokens.\n        VestingSchedule storage schedule = vestingSchedules[account];\n        uint256 lockedTokens = 0;\n        if (schedule.totalAmount > 0) {\n            lockedTokens = schedule.totalAmount - schedule.claimedAmount;\n        }\n        return unlockedBalance + lockedTokens;\n    }\n\n    function getLockedTokens(address user) public view returns (uint256) {\n        VestingSchedule storage schedule = vestingSchedules[user];\n        if (block.timestamp < schedule.lockEndTime) {\n            return schedule.totalAmount;\n        }\n        \n        // Calculate total intervals that have passed since lock end.\n        uint256 intervalsPassed = (block.timestamp - schedule.lockEndTime) / vestingInterval;\n        uint256 totalUnlocked = intervalsPassed * schedule.unlockPerBatch;\n        if (totalUnlocked > schedule.totalAmount) {\n            totalUnlocked = schedule.totalAmount;\n        }\n        return schedule.totalAmount - totalUnlocked;\n    }\n\n    function getUnlockedTokens(address user) public view returns (uint256) {\n        VestingSchedule storage schedule = vestingSchedules[user];\n\n        if (block.timestamp < schedule.lockEndTime) {\n            return 0;\n        }\n\n        uint256 intervalsPassed = (block.timestamp - schedule.lockEndTime) /\n            vestingInterval;\n        uint256 totalUnlocked = intervalsPassed * schedule.unlockPerBatch;\n\n        if (totalUnlocked > schedule.totalAmount) {\n            totalUnlocked = schedule.totalAmount;\n        }\n\n        return totalUnlocked - schedule.claimedAmount;\n    }\n\n    function getUSDTbalance() public view onlyOwner returns(uint256) {\n        // For convenience, you might return the ERC20 token balance; you could add BEP20 too if needed.\n        return usdtERC20.balanceOf(address(this));\n    }\n\n    function getBNBbalance() public view onlyOwner returns(uint256) {\n        return address(this).balance;\n    }\n\n    function Withdraw() external onlyOwner {\n        uint256 amount = usdtERC20.balanceOf(address(this));\n        require(amount > 0, \"No usdt to withdraw\");\n        require(usdtERC20.transfer(owner(), amount), \"withdraw failed\");\n    }\n\n    function withdrawBNB() external onlyOwner {\n       uint256 balance = address(this).balance;\n       require(balance > 0, \"No BNB available in contract\");\n       payable(owner()).transfer(balance);\n    }\n  \n    // this function is callable by backend\n    function TransferRewards(address recipient_, uint256 amount_, uint256 lockTime_) public onlyOwner {\n        require(recipient_ != address(0), \"recipient address is not valid\");\n        require(amount_ > 0, \"amount should be > 0\");\n        require(lockTime_ > 0, \"lock time should in future\");\n        require(balanceOf(owner()) >= amount_, \"owner doesn't have enough tokens\");\n        \n        _transfer(msg.sender, recipient_, amount_);\n       \n       lockingBalances[recipient_].push (LockingSchedule({\n           amount: amount_,\n           purchaseTime: block.timestamp,\n           phase: SalePhase.Ended,\n           unlockTime: block.timestamp + lockTime_\n         })\n       );\n    }\n}\n"
      }
    },
    "settings": {
      "metadata": {
        "bytecodeHash": "none"
      },
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1478
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 1479,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1478,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1478,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                1478
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1460,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1460,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
          "exportedSymbols": {
            "IERC1363": [
              229
            ],
            "IERC165": [
              1559
            ],
            "IERC20": [
              967
            ]
          },
          "id": 230,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 151,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 230,
              "sourceUnit": 238,
              "src": "133:36:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 150,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "141:6:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 153,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 230,
              "sourceUnit": 234,
              "src": "170:38:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 152,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1559,
                    "src": "178:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 155,
                    "name": "IERC20",
                    "nameLocations": [
                      "590:6:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 967,
                    "src": "590:6:1"
                  },
                  "id": 156,
                  "nodeType": "InheritanceSpecifier",
                  "src": "590:6:1"
                },
                {
                  "baseName": {
                    "id": 157,
                    "name": "IERC165",
                    "nameLocations": [
                      "598:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1559,
                    "src": "598:7:1"
                  },
                  "id": 158,
                  "nodeType": "InheritanceSpecifier",
                  "src": "598:7:1"
                }
              ],
              "canonicalName": "IERC1363",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 154,
                "nodeType": "StructuredDocumentation",
                "src": "210:357:1",
                "text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
              },
              "fullyImplemented": false,
              "id": 229,
              "linearizedBaseContracts": [
                229,
                1559,
                967
              ],
              "name": "IERC1363",
              "nameLocation": "578:8:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 159,
                    "nodeType": "StructuredDocumentation",
                    "src": "1148:370:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "1296ee62",
                  "id": 168,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "1532:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1556:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1548:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1548:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1568:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1560:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1560:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1547:27:1"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1593:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1592:6:1"
                  },
                  "scope": 229,
                  "src": "1523:76:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "1605:453:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "4000aea0",
                  "id": 180,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "2072:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2096:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2088:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2088:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2108:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2100:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2100:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2130:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2115:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2115:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2087:48:1"
                  },
                  "returnParameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2154:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2154:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2153:6:1"
                  },
                  "scope": 229,
                  "src": "2063:97:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 181,
                    "nodeType": "StructuredDocumentation",
                    "src": "2166:453:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "d8fbe994",
                  "id": 192,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "2633:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 183,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2661:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2653:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2675:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2667:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2667:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2687:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2679:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2679:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2652:41:1"
                  },
                  "returnParameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2712:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:6:1"
                  },
                  "scope": 229,
                  "src": "2624:94:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 193,
                    "nodeType": "StructuredDocumentation",
                    "src": "2724:536:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "c1d34b89",
                  "id": 206,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "3274:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3302:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3294:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3294:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3316:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3308:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3308:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3328:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3320:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3320:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3350:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3335:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3335:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3293:62:1"
                  },
                  "returnParameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3374:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3374:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3373:6:1"
                  },
                  "scope": 229,
                  "src": "3265:115:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "3386:390:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "3177029f",
                  "id": 216,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "3790:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3813:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3805:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3805:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3830:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3822:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3822:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3804:32:1"
                  },
                  "returnParameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3855:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3855:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3854:6:1"
                  },
                  "scope": 229,
                  "src": "3781:80:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 217,
                    "nodeType": "StructuredDocumentation",
                    "src": "3867:478:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "cae9ca51",
                  "id": 228,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "4359:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4382:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4374:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4374:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4399:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4391:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4391:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4421:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4406:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4406:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4373:53:1"
                  },
                  "returnParameters": {
                    "id": 227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 226,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4445:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4445:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4444:6:1"
                  },
                  "scope": 229,
                  "src": "4350:101:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 230,
              "src": "568:3885:1",
              "usedErrors": [],
              "usedEvents": [
                901,
                910
              ]
            }
          ],
          "src": "107:4347:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1559
            ]
          },
          "id": 234,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 231,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../utils/introspection/IERC165.sol",
              "id": 233,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 234,
              "sourceUnit": 1560,
              "src": "132:59:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 232,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1559,
                    "src": "140:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "106:86:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              967
            ]
          },
          "id": 238,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 235,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../token/ERC20/IERC20.sol",
              "id": 237,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 238,
              "sourceUnit": 968,
              "src": "131:49:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 236,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "139:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "105:76:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              374
            ],
            "IERC20Errors": [
              279
            ],
            "IERC721Errors": [
              327
            ]
          },
          "id": 375,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 239,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 240,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:4",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 279,
              "linearizedBaseContracts": [
                279
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 241,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:4",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 249,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "654:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "670:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "687:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:4"
                  },
                  "src": "623:80:4"
                },
                {
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:4",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 254,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "891:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:4"
                  },
                  "src": "866:41:4"
                },
                {
                  "documentation": {
                    "id": 255,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:4",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 259,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "1104:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:4"
                  },
                  "src": "1077:45:4"
                },
                {
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:4",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 268,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "1511:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "1528:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "1547:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:4"
                  },
                  "src": "1478:85:4"
                },
                {
                  "documentation": {
                    "id": 269,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:4",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 273,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "1775:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:4"
                  },
                  "src": "1748:45:4"
                },
                {
                  "documentation": {
                    "id": 274,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:4",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 278,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 276,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "2025:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:4"
                  },
                  "src": "1999:43:4"
                }
              ],
              "scope": 375,
              "src": "280:1764:4",
              "usedErrors": [
                249,
                254,
                259,
                268,
                273,
                278
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 280,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:4",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 327,
              "linearizedBaseContracts": [
                327
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 281,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:4",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 285,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "2469:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:4"
                  },
                  "src": "2444:40:4"
                },
                {
                  "documentation": {
                    "id": 286,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:4",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 290,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 288,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "2656:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:4"
                  },
                  "src": "2627:46:4"
                },
                {
                  "documentation": {
                    "id": 291,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:4",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 299,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 293,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "3000:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 295,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "3016:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 297,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "3033:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:4"
                  },
                  "src": "2973:75:4"
                },
                {
                  "documentation": {
                    "id": 300,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:4",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 304,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 303,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 302,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "3237:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 301,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:4"
                  },
                  "src": "3211:42:4"
                },
                {
                  "documentation": {
                    "id": 305,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:4",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 309,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 308,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 307,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 309,
                        "src": "3451:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:4"
                  },
                  "src": "3423:46:4"
                },
                {
                  "documentation": {
                    "id": 310,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:4",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 316,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 315,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "3760:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 314,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "3778:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 313,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:4"
                  },
                  "src": "3727:68:4"
                },
                {
                  "documentation": {
                    "id": 317,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:4",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 321,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 319,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 321,
                        "src": "4008:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 318,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:4"
                  },
                  "src": "3980:46:4"
                },
                {
                  "documentation": {
                    "id": 322,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:4",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 326,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "4262:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:4"
                  },
                  "src": "4234:46:4"
                }
              ],
              "scope": 375,
              "src": "2190:2092:4",
              "usedErrors": [
                285,
                290,
                299,
                304,
                309,
                316,
                321,
                326
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 328,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:4",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 374,
              "linearizedBaseContracts": [
                374
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 329,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:4",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 339,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 331,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "4860:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "4876:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 335,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "4893:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "4909:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:4"
                  },
                  "src": "4827:99:4"
                },
                {
                  "documentation": {
                    "id": 340,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:4",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 344,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "5116:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:4"
                  },
                  "src": "5089:43:4"
                },
                {
                  "documentation": {
                    "id": 345,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:4",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 349,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 347,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 349,
                        "src": "5331:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 346,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:4"
                  },
                  "src": "5302:47:4"
                },
                {
                  "documentation": {
                    "id": 350,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:4",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 356,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "5651:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 354,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "5669:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:4"
                  },
                  "src": "5616:68:4"
                },
                {
                  "documentation": {
                    "id": 357,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:4",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 361,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 359,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "5898:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 358,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:4"
                  },
                  "src": "5869:47:4"
                },
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:4",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 366,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 366,
                        "src": "6153:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:4"
                  },
                  "src": "6124:47:4"
                },
                {
                  "documentation": {
                    "id": 367,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:4",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 373,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "6494:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "6513:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:4"
                  },
                  "src": "6462:73:4"
                }
              ],
              "scope": 375,
              "src": "4430:2107:4",
              "usedErrors": [
                339,
                344,
                349,
                356,
                361,
                366,
                373
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1478
            ],
            "ERC20": [
              889
            ],
            "IERC20": [
              967
            ],
            "IERC20Errors": [
              279
            ],
            "IERC20Metadata": [
              1039
            ]
          },
          "id": 890,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 376,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 378,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 890,
              "sourceUnit": 968,
              "src": "131:36:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 377,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "139:6:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 380,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 890,
              "sourceUnit": 1040,
              "src": "168:63:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 379,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1039,
                    "src": "176:14:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 382,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 890,
              "sourceUnit": 1479,
              "src": "232:48:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 381,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1478,
                    "src": "240:7:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 384,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 890,
              "sourceUnit": 375,
              "src": "281:65:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 383,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 279,
                    "src": "289:12:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 386,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1478,
                    "src": "1133:7:5"
                  },
                  "id": 387,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:5"
                },
                {
                  "baseName": {
                    "id": 388,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 967,
                    "src": "1142:6:5"
                  },
                  "id": 389,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:5"
                },
                {
                  "baseName": {
                    "id": 390,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1039,
                    "src": "1150:14:5"
                  },
                  "id": 391,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:5"
                },
                {
                  "baseName": {
                    "id": 392,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 279,
                    "src": "1166:12:5"
                  },
                  "id": 393,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:5"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 385,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:5",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 889,
              "linearizedBaseContracts": [
                889,
                279,
                1039,
                967,
                1478
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "1185:53:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 396,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:5",
                    "keyType": {
                      "id": 394,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 395,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "1245:83:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 402,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:5",
                    "keyType": {
                      "id": 398,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 401,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:5",
                      "keyType": {
                        "id": 399,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 400,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "1335:28:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 407,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "1370:20:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "1396:22:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "1657:57:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 417,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "1667:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 418,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 412,
                            "src": "1675:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1667:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 420,
                        "nodeType": "ExpressionStatement",
                        "src": "1667:13:5"
                      },
                      {
                        "expression": {
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 421,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 409,
                            "src": "1690:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 422,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "1700:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1690:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 424,
                        "nodeType": "ExpressionStatement",
                        "src": "1690:17:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:171:5",
                    "text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
                  },
                  "id": 426,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1627:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "1613:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1613:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1648:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "1634:21:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1634:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1612:44:5"
                  },
                  "returnParameters": {
                    "id": 416,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1657:0:5"
                  },
                  "scope": 889,
                  "src": "1601:113:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1026
                  ],
                  "body": {
                    "id": 434,
                    "nodeType": "Block",
                    "src": "1839:29:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 432,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "1856:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 431,
                        "id": 433,
                        "nodeType": "Return",
                        "src": "1849:12:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "1720:54:5",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 435,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1788:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 428,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1792:2:5"
                  },
                  "returnParameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "1824:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1824:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1823:15:5"
                  },
                  "scope": 889,
                  "src": "1779:89:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1032
                  ],
                  "body": {
                    "id": 443,
                    "nodeType": "Block",
                    "src": "2043:31:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 441,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 409,
                          "src": "2060:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 440,
                        "id": 442,
                        "nodeType": "Return",
                        "src": "2053:14:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 436,
                    "nodeType": "StructuredDocumentation",
                    "src": "1874:102:5",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 444,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1990:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 437,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1996:2:5"
                  },
                  "returnParameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 439,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 444,
                        "src": "2028:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 438,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2028:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2027:15:5"
                  },
                  "scope": 889,
                  "src": "1981:93:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1038
                  ],
                  "body": {
                    "id": 452,
                    "nodeType": "Block",
                    "src": "2763:26:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2780:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 449,
                        "id": 451,
                        "nodeType": "Return",
                        "src": "2773:9:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 445,
                    "nodeType": "StructuredDocumentation",
                    "src": "2080:622:5",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 453,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2716:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 446,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2724:2:5"
                  },
                  "returnParameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "2756:5:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2756:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2755:7:5"
                  },
                  "scope": 889,
                  "src": "2707:82:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    916
                  ],
                  "body": {
                    "id": 461,
                    "nodeType": "Block",
                    "src": "2910:36:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 459,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 405,
                          "src": "2927:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 458,
                        "id": 460,
                        "nodeType": "Return",
                        "src": "2920:19:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 454,
                    "nodeType": "StructuredDocumentation",
                    "src": "2795:49:5",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 462,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2858:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 455,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2869:2:5"
                  },
                  "returnParameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "2901:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2901:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2900:9:5"
                  },
                  "scope": 889,
                  "src": "2849:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    924
                  ],
                  "body": {
                    "id": 474,
                    "nodeType": "Block",
                    "src": "3078:42:5",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 470,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "3095:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 472,
                          "indexExpression": {
                            "id": 471,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "3105:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3095:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 469,
                        "id": 473,
                        "nodeType": "Return",
                        "src": "3088:25:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 463,
                    "nodeType": "StructuredDocumentation",
                    "src": "2952:47:5",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 475,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "3013:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 465,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3031:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "3023:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3023:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3022:17:5"
                  },
                  "returnParameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "3069:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3069:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3068:9:5"
                  },
                  "scope": 889,
                  "src": "3004:116:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    934
                  ],
                  "body": {
                    "id": 498,
                    "nodeType": "Block",
                    "src": "3390:103:5",
                    "statements": [
                      {
                        "assignments": [
                          486
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 486,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3408:5:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 498,
                            "src": "3400:13:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 485,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3400:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 489,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 487,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1460,
                            "src": "3416:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3416:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3400:28:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 491,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 486,
                              "src": "3448:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 492,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 478,
                              "src": "3455:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 493,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "3459:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 490,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "3438:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3438:27:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 495,
                        "nodeType": "ExpressionStatement",
                        "src": "3438:27:5"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3482:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 484,
                        "id": 497,
                        "nodeType": "Return",
                        "src": "3475:11:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 476,
                    "nodeType": "StructuredDocumentation",
                    "src": "3126:184:5",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 499,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3324:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 481,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3341:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 499,
                        "src": "3333:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 480,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3353:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 499,
                        "src": "3345:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 479,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3345:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:27:5"
                  },
                  "returnParameters": {
                    "id": 484,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 499,
                        "src": "3384:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3384:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3383:6:5"
                  },
                  "scope": 889,
                  "src": "3315:178:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    944
                  ],
                  "body": {
                    "id": 515,
                    "nodeType": "Block",
                    "src": "3640:51:5",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 509,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 403,
                              "src": "3657:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 511,
                            "indexExpression": {
                              "id": 510,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "3669:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3657:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 513,
                          "indexExpression": {
                            "id": 512,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "3676:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3657:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 508,
                        "id": 514,
                        "nodeType": "Return",
                        "src": "3650:34:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 500,
                    "nodeType": "StructuredDocumentation",
                    "src": "3499:47:5",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 516,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3560:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 505,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 502,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3578:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "3570:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 501,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3570:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3593:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "3585:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3585:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3569:32:5"
                  },
                  "returnParameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 507,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "3631:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 506,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3631:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3630:9:5"
                  },
                  "scope": 889,
                  "src": "3551:140:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    954
                  ],
                  "body": {
                    "id": 539,
                    "nodeType": "Block",
                    "src": "4077:107:5",
                    "statements": [
                      {
                        "assignments": [
                          527
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 527,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4095:5:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 539,
                            "src": "4087:13:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 526,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4087:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 530,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 528,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1460,
                            "src": "4103:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4103:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4087:28:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 532,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "4134:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 533,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 519,
                              "src": "4141:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 534,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 521,
                              "src": "4150:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 531,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              780,
                              840
                            ],
                            "referencedDeclaration": 780,
                            "src": "4125:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4125:31:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 536,
                        "nodeType": "ExpressionStatement",
                        "src": "4125:31:5"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4173:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 525,
                        "id": 538,
                        "nodeType": "Return",
                        "src": "4166:11:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 517,
                    "nodeType": "StructuredDocumentation",
                    "src": "3697:296:5",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 540,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "4007:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 522,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 519,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4023:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "4015:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 518,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4015:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 521,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4040:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "4032:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 520,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4032:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4014:32:5"
                  },
                  "returnParameters": {
                    "id": 525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 524,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "4071:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 523,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4071:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4070:6:5"
                  },
                  "scope": 889,
                  "src": "3998:186:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    966
                  ],
                  "body": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "4869:151:5",
                    "statements": [
                      {
                        "assignments": [
                          553
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 553,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4887:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 571,
                            "src": "4879:15:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 552,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4879:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 556,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 554,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1460,
                            "src": "4897:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4897:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4879:30:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 558,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "4935:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 559,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "4941:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 560,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "4950:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 557,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 888,
                            "src": "4919:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4919:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 562,
                        "nodeType": "ExpressionStatement",
                        "src": "4919:37:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 564,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "4976:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 565,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 545,
                              "src": "4982:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 566,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "4986:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 563,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "4966:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4966:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 568,
                        "nodeType": "ExpressionStatement",
                        "src": "4966:26:5"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5009:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 551,
                        "id": 570,
                        "nodeType": "Return",
                        "src": "5002:11:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 541,
                    "nodeType": "StructuredDocumentation",
                    "src": "4190:581:5",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 572,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4785:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 548,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 543,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4806:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "4798:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 542,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4798:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4820:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "4812:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4812:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4832:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "4824:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4824:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4797:41:5"
                  },
                  "returnParameters": {
                    "id": 551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 550,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "4863:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4863:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4862:6:5"
                  },
                  "scope": 889,
                  "src": "4776:244:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 618,
                    "nodeType": "Block",
                    "src": "5462:231:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 582,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 575,
                            "src": "5476:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5492:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5484:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 583,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5484:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5484:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5476:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 596,
                        "nodeType": "IfStatement",
                        "src": "5472:86:5",
                        "trueBody": {
                          "id": 595,
                          "nodeType": "Block",
                          "src": "5496:62:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 591,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5544:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 590,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5536:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 589,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5536:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 592,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5536:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 588,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 254,
                                  "src": "5517:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5517:30:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 594,
                              "nodeType": "RevertStatement",
                              "src": "5510:37:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 597,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 577,
                            "src": "5571:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5585:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5577:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 598,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5577:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5577:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5571:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 611,
                        "nodeType": "IfStatement",
                        "src": "5567:86:5",
                        "trueBody": {
                          "id": 610,
                          "nodeType": "Block",
                          "src": "5589:64:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 606,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5639:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 605,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5631:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 604,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5631:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 607,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5631:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 603,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 259,
                                  "src": "5610:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5610:32:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 609,
                              "nodeType": "RevertStatement",
                              "src": "5603:39:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 613,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 575,
                              "src": "5670:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 614,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "5676:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 615,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "5680:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 612,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "5662:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5662:24:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 617,
                        "nodeType": "ExpressionStatement",
                        "src": "5662:24:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 573,
                    "nodeType": "StructuredDocumentation",
                    "src": "5026:362:5",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 619,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5402:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 580,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 575,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5420:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5412:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5412:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5434:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5426:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5426:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 579,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5446:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5438:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 578,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5438:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5411:41:5"
                  },
                  "returnParameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5462:0:5"
                  },
                  "scope": 889,
                  "src": "5393:300:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 695,
                    "nodeType": "Block",
                    "src": "6083:1032:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 629,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "6097:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6113:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6105:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 630,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6105:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6105:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6097:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 666,
                          "nodeType": "Block",
                          "src": "6271:362:5",
                          "statements": [
                            {
                              "assignments": [
                                641
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 641,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6293:11:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 666,
                                  "src": "6285:19:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 640,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6285:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 645,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 642,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "6307:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 644,
                                "indexExpression": {
                                  "id": 643,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 622,
                                  "src": "6317:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6307:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6285:37:5"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 646,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 641,
                                  "src": "6340:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 647,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 626,
                                  "src": "6354:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6340:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 656,
                              "nodeType": "IfStatement",
                              "src": "6336:115:5",
                              "trueBody": {
                                "id": 655,
                                "nodeType": "Block",
                                "src": "6361:90:5",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 650,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 622,
                                          "src": "6411:4:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 651,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 641,
                                          "src": "6417:11:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 652,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 626,
                                          "src": "6430:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 649,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 249,
                                        "src": "6386:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 653,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6386:50:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 654,
                                    "nodeType": "RevertStatement",
                                    "src": "6379:57:5"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 665,
                              "nodeType": "UncheckedBlock",
                              "src": "6464:159:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 663,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 657,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 397,
                                        "src": "6571:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 659,
                                      "indexExpression": {
                                        "id": 658,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 622,
                                        "src": "6581:4:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6571:15:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 662,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 660,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 641,
                                        "src": "6589:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 661,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 626,
                                        "src": "6603:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6589:19:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6571:37:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 664,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6571:37:5"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 667,
                        "nodeType": "IfStatement",
                        "src": "6093:540:5",
                        "trueBody": {
                          "id": 639,
                          "nodeType": "Block",
                          "src": "6117:148:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 635,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 405,
                                  "src": "6233:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 636,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 626,
                                  "src": "6249:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6233:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 638,
                              "nodeType": "ExpressionStatement",
                              "src": "6233:21:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 668,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "6647:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6661:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6653:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 669,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6653:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6653:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6647:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 687,
                          "nodeType": "Block",
                          "src": "6862:206:5",
                          "statements": [
                            {
                              "id": 686,
                              "nodeType": "UncheckedBlock",
                              "src": "6876:182:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 684,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 680,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 397,
                                        "src": "7021:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 682,
                                      "indexExpression": {
                                        "id": 681,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 624,
                                        "src": "7031:2:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7021:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 683,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 626,
                                      "src": "7038:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7021:22:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 685,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7021:22:5"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 688,
                        "nodeType": "IfStatement",
                        "src": "6643:425:5",
                        "trueBody": {
                          "id": 679,
                          "nodeType": "Block",
                          "src": "6665:191:5",
                          "statements": [
                            {
                              "id": 678,
                              "nodeType": "UncheckedBlock",
                              "src": "6679:167:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 676,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 674,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 405,
                                      "src": "6810:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 675,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 626,
                                      "src": "6826:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6810:21:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 677,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6810:21:5"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 690,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 622,
                              "src": "7092:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 691,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 624,
                              "src": "7098:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 692,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "7102:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 689,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 901,
                            "src": "7083:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7083:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 694,
                        "nodeType": "EmitStatement",
                        "src": "7078:30:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 620,
                    "nodeType": "StructuredDocumentation",
                    "src": "5699:304:5",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 696,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "6017:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 627,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 622,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6033:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "6025:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6025:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6047:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "6039:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6039:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6059:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "6051:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 625,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6051:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6024:41:5"
                  },
                  "returnParameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6083:0:5"
                  },
                  "scope": 889,
                  "src": "6008:1107:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 728,
                    "nodeType": "Block",
                    "src": "7514:152:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 704,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "7528:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7547:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7539:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 705,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7539:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7539:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7528:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 718,
                        "nodeType": "IfStatement",
                        "src": "7524:91:5",
                        "trueBody": {
                          "id": 717,
                          "nodeType": "Block",
                          "src": "7551:64:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 713,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7601:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 712,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7593:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 711,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7593:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7593:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 710,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 259,
                                  "src": "7572:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7572:32:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 716,
                              "nodeType": "RevertStatement",
                              "src": "7565:39:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7640:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7632:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 720,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7632:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7632:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 724,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "7644:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 725,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "7653:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 719,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "7624:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7624:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 727,
                        "nodeType": "ExpressionStatement",
                        "src": "7624:35:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 697,
                    "nodeType": "StructuredDocumentation",
                    "src": "7121:332:5",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 729,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7467:5:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7481:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "7473:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7473:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7498:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "7490:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7490:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7472:32:5"
                  },
                  "returnParameters": {
                    "id": 703,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7514:0:5"
                  },
                  "scope": 889,
                  "src": "7458:208:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 761,
                    "nodeType": "Block",
                    "src": "8040:150:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 737,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "8054:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8073:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8065:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 738,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8065:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8065:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8054:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 751,
                        "nodeType": "IfStatement",
                        "src": "8050:89:5",
                        "trueBody": {
                          "id": 750,
                          "nodeType": "Block",
                          "src": "8077:62:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 746,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8125:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 745,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8117:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 744,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8117:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 747,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8117:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 743,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 254,
                                  "src": "8098:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8098:30:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 749,
                              "nodeType": "RevertStatement",
                              "src": "8091:37:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 753,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 732,
                              "src": "8156:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8173:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8165:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 754,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8165:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8165:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 758,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 734,
                              "src": "8177:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 752,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "8148:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8148:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 760,
                        "nodeType": "ExpressionStatement",
                        "src": "8148:35:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 730,
                    "nodeType": "StructuredDocumentation",
                    "src": "7672:307:5",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 762,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7993:5:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 735,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 732,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "8007:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 762,
                        "src": "7999:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 731,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7999:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 734,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8024:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 762,
                        "src": "8016:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 733,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8016:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7998:32:5"
                  },
                  "returnParameters": {
                    "id": 736,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8040:0:5"
                  },
                  "scope": 889,
                  "src": "7984:206:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 779,
                    "nodeType": "Block",
                    "src": "8800:54:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 773,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "8819:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 774,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "8826:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 775,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "8835:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8842:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 772,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              780,
                              840
                            ],
                            "referencedDeclaration": 840,
                            "src": "8810:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8810:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 778,
                        "nodeType": "ExpressionStatement",
                        "src": "8810:37:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 763,
                    "nodeType": "StructuredDocumentation",
                    "src": "8196:525:5",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 780,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8735:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 765,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8752:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 780,
                        "src": "8744:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 764,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8744:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 767,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8767:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 780,
                        "src": "8759:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8759:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 769,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8784:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 780,
                        "src": "8776:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8776:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8743:47:5"
                  },
                  "returnParameters": {
                    "id": 771,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8800:0:5"
                  },
                  "scope": 889,
                  "src": "8726:128:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 839,
                    "nodeType": "Block",
                    "src": "9799:334:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 792,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 783,
                            "src": "9813:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9830:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9822:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 793,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9822:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9822:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9813:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 806,
                        "nodeType": "IfStatement",
                        "src": "9809:89:5",
                        "trueBody": {
                          "id": 805,
                          "nodeType": "Block",
                          "src": "9834:64:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 801,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9884:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 800,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9876:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 799,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9876:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 802,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9876:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 798,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 273,
                                  "src": "9855:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9855:32:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 804,
                              "nodeType": "RevertStatement",
                              "src": "9848:39:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 807,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "9911:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9930:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9922:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 808,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9922:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9922:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9911:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 821,
                        "nodeType": "IfStatement",
                        "src": "9907:90:5",
                        "trueBody": {
                          "id": 820,
                          "nodeType": "Block",
                          "src": "9934:63:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 816,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9983:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 815,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9975:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 814,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9975:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 817,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9975:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 813,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 278,
                                  "src": "9955:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9955:31:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 819,
                              "nodeType": "RevertStatement",
                              "src": "9948:38:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 822,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 403,
                                "src": "10006:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 825,
                              "indexExpression": {
                                "id": 823,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "10018:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10006:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 826,
                            "indexExpression": {
                              "id": 824,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "10025:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10006:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 827,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "10036:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10006:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 829,
                        "nodeType": "ExpressionStatement",
                        "src": "10006:35:5"
                      },
                      {
                        "condition": {
                          "id": 830,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 789,
                          "src": "10055:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 838,
                        "nodeType": "IfStatement",
                        "src": "10051:76:5",
                        "trueBody": {
                          "id": 837,
                          "nodeType": "Block",
                          "src": "10066:61:5",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 832,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 783,
                                    "src": "10094:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 833,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 785,
                                    "src": "10101:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 834,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 787,
                                    "src": "10110:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 831,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 910,
                                  "src": "10085:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10085:31:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 836,
                              "nodeType": "EmitStatement",
                              "src": "10080:36:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 781,
                    "nodeType": "StructuredDocumentation",
                    "src": "8860:836:5",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 840,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9710:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 790,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 783,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9727:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 840,
                        "src": "9719:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 782,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9719:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 785,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9742:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 840,
                        "src": "9734:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 784,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9734:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 787,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9759:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 840,
                        "src": "9751:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 786,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9751:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 789,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9771:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 840,
                        "src": "9766:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 788,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9766:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9718:63:5"
                  },
                  "returnParameters": {
                    "id": 791,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9799:0:5"
                  },
                  "scope": 889,
                  "src": "9701:432:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 887,
                    "nodeType": "Block",
                    "src": "10504:387:5",
                    "statements": [
                      {
                        "assignments": [
                          851
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 851,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10522:16:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 887,
                            "src": "10514:24:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 850,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10514:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 856,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 853,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "10551:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 854,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 845,
                              "src": "10558:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 852,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "10541:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10541:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10514:52:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 857,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "10580:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 860,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10604:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 859,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10604:7:5",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 858,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10599:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10599:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10613:3:5",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10599:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10580:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 886,
                        "nodeType": "IfStatement",
                        "src": "10576:309:5",
                        "trueBody": {
                          "id": 885,
                          "nodeType": "Block",
                          "src": "10618:267:5",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 864,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 851,
                                  "src": "10636:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 865,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "10655:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10636:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 874,
                              "nodeType": "IfStatement",
                              "src": "10632:130:5",
                              "trueBody": {
                                "id": 873,
                                "nodeType": "Block",
                                "src": "10662:100:5",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 868,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 845,
                                          "src": "10714:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 869,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 851,
                                          "src": "10723:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 870,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 847,
                                          "src": "10741:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 867,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 268,
                                        "src": "10687:26:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 871,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10687:60:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 872,
                                    "nodeType": "RevertStatement",
                                    "src": "10680:67:5"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 884,
                              "nodeType": "UncheckedBlock",
                              "src": "10775:100:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 876,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 843,
                                        "src": "10812:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 877,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 845,
                                        "src": "10819:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 880,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 878,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 851,
                                          "src": "10828:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 879,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 847,
                                          "src": "10847:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10828:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 881,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10854:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 875,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        780,
                                        840
                                      ],
                                      "referencedDeclaration": 840,
                                      "src": "10803:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 882,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10803:57:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 883,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10803:57:5"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 841,
                    "nodeType": "StructuredDocumentation",
                    "src": "10139:271:5",
                    "text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 888,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10424:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 843,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10448:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 888,
                        "src": "10440:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10440:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 845,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10463:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 888,
                        "src": "10455:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 844,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10455:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10480:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 888,
                        "src": "10472:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10472:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10439:47:5"
                  },
                  "returnParameters": {
                    "id": 849,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10504:0:5"
                  },
                  "scope": 889,
                  "src": "10415:476:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 890,
              "src": "1106:9787:5",
              "usedErrors": [
                249,
                254,
                259,
                268,
                273,
                278
              ],
              "usedEvents": [
                901,
                910
              ]
            }
          ],
          "src": "105:10789:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              967
            ]
          },
          "id": 968,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 891,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 892,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:6",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 967,
              "linearizedBaseContracts": [
                967
              ],
              "name": "IERC20",
              "nameLocation": "214:6:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 893,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:6",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 901,
                  "name": "Transfer",
                  "nameLocation": "396:8:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 900,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 895,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 901,
                        "src": "405:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 894,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 897,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 901,
                        "src": "427:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 896,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 899,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 901,
                        "src": "447:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 898,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:6"
                  },
                  "src": "390:72:6"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 902,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:6",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 910,
                  "name": "Approval",
                  "nameLocation": "627:8:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 909,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 904,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 910,
                        "src": "636:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 903,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 906,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 910,
                        "src": "659:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 908,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 910,
                        "src": "684:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:6"
                  },
                  "src": "621:78:6"
                },
                {
                  "documentation": {
                    "id": 911,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:6",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 916,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:6"
                  },
                  "returnParameters": {
                    "id": 915,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 914,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 916,
                        "src": "821:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:6"
                  },
                  "scope": 967,
                  "src": "775:55:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 917,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:6",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 924,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 920,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 919,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "931:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:6"
                  },
                  "returnParameters": {
                    "id": 923,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 922,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "971:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 921,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:6"
                  },
                  "scope": 967,
                  "src": "912:68:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 925,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:6",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 934,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 930,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "1222:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 929,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "1234:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 928,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:6"
                  },
                  "returnParameters": {
                    "id": 933,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 932,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "1267:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 931,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:6"
                  },
                  "scope": 967,
                  "src": "1204:69:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 935,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:6",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 944,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 940,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 937,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 944,
                        "src": "1567:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 936,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 939,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 944,
                        "src": "1582:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 938,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:6"
                  },
                  "returnParameters": {
                    "id": 943,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 942,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 944,
                        "src": "1622:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 941,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:6"
                  },
                  "scope": 967,
                  "src": "1548:83:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 945,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:6",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 954,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 950,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 947,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 954,
                        "src": "2326:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 946,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 949,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 954,
                        "src": "2343:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 948,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:6"
                  },
                  "returnParameters": {
                    "id": 953,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 952,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 954,
                        "src": "2376:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 951,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:6"
                  },
                  "scope": 967,
                  "src": "2309:73:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 955,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:6",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 966,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 962,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 957,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 966,
                        "src": "2712:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 956,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 959,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 966,
                        "src": "2726:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 958,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 961,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 966,
                        "src": "2738:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 960,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:6"
                  },
                  "returnParameters": {
                    "id": 965,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 964,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 966,
                        "src": "2771:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 963,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:6"
                  },
                  "scope": 967,
                  "src": "2690:87:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 968,
              "src": "204:2575:6",
              "usedErrors": [],
              "usedEvents": [
                901,
                910
              ]
            }
          ],
          "src": "106:2674:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
          "exportedSymbols": {
            "Context": [
              1478
            ],
            "ERC20": [
              889
            ],
            "ERC20Burnable": [
              1013
            ]
          },
          "id": 1014,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 969,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 971,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1014,
              "sourceUnit": 890,
              "src": "150:35:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 970,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 889,
                    "src": "158:5:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../../utils/Context.sol",
              "id": 973,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1014,
              "sourceUnit": 1479,
              "src": "186:51:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 972,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1478,
                    "src": "194:7:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 975,
                    "name": "Context",
                    "nameLocations": [
                      "483:7:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1478,
                    "src": "483:7:7"
                  },
                  "id": 976,
                  "nodeType": "InheritanceSpecifier",
                  "src": "483:7:7"
                },
                {
                  "baseName": {
                    "id": 977,
                    "name": "ERC20",
                    "nameLocations": [
                      "492:5:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 889,
                    "src": "492:5:7"
                  },
                  "id": 978,
                  "nodeType": "InheritanceSpecifier",
                  "src": "492:5:7"
                }
              ],
              "canonicalName": "ERC20Burnable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 974,
                "nodeType": "StructuredDocumentation",
                "src": "239:208:7",
                "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
              },
              "fullyImplemented": true,
              "id": 1013,
              "linearizedBaseContracts": [
                1013,
                889,
                279,
                1039,
                967,
                1478
              ],
              "name": "ERC20Burnable",
              "nameLocation": "466:13:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 990,
                    "nodeType": "Block",
                    "src": "662:43:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 985,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1460,
                                "src": "678:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "678:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 987,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 981,
                              "src": "692:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 984,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "672:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "672:26:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 989,
                        "nodeType": "ExpressionStatement",
                        "src": "672:26:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 979,
                    "nodeType": "StructuredDocumentation",
                    "src": "504:109:7",
                    "text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
                  },
                  "functionSelector": "42966c68",
                  "id": 991,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "627:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 982,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 981,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "640:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "632:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 980,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:15:7"
                  },
                  "returnParameters": {
                    "id": 983,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "662:0:7"
                  },
                  "scope": 1013,
                  "src": "618:87:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1011,
                    "nodeType": "Block",
                    "src": "1086:93:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1000,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 994,
                              "src": "1112:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1001,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1460,
                                "src": "1121:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1121:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1003,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 996,
                              "src": "1135:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 999,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 888,
                            "src": "1096:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1005,
                        "nodeType": "ExpressionStatement",
                        "src": "1096:45:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1007,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 994,
                              "src": "1157:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1008,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 996,
                              "src": "1166:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1006,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "1151:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1151:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1010,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:21:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 992,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:305:7",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "79cc6790",
                  "id": 1012,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "1030:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 997,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 994,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1047:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "1039:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 993,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 996,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1064:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "1056:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 995,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1038:32:7"
                  },
                  "returnParameters": {
                    "id": 998,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1086:0:7"
                  },
                  "scope": 1013,
                  "src": "1021:158:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1014,
              "src": "448:733:7",
              "usedErrors": [
                249,
                254,
                259,
                268,
                273,
                278
              ],
              "usedEvents": [
                901,
                910
              ]
            }
          ],
          "src": "124:1058:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              967
            ],
            "IERC20Metadata": [
              1039
            ]
          },
          "id": 1040,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1015,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1017,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1040,
              "sourceUnit": 968,
              "src": "151:37:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1016,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "159:6:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1019,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 967,
                    "src": "306:6:8"
                  },
                  "id": 1020,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:8"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1018,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:8",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 1039,
              "linearizedBaseContracts": [
                1039,
                967
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1021,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:8",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1026,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1022,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:8"
                  },
                  "returnParameters": {
                    "id": 1025,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1024,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "417:13:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1023,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:8"
                  },
                  "scope": 1039,
                  "src": "378:54:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1027,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:8",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1032,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1028,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:8"
                  },
                  "returnParameters": {
                    "id": 1031,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1030,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1032,
                        "src": "540:13:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1029,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:8"
                  },
                  "scope": 1039,
                  "src": "499:56:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1033,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:8",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1038,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1034,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:8"
                  },
                  "returnParameters": {
                    "id": 1037,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1036,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1038,
                        "src": "674:5:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1035,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:8"
                  },
                  "scope": 1039,
                  "src": "631:50:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1040,
              "src": "278:405:8",
              "usedErrors": [],
              "usedEvents": [
                901,
                910
              ]
            }
          ],
          "src": "125:559:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "exportedSymbols": {
            "IERC1363": [
              229
            ],
            "IERC20": [
              967
            ],
            "SafeERC20": [
              1448
            ]
          },
          "id": 1449,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1041,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1043,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1449,
              "sourceUnit": 968,
              "src": "141:37:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1042,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "149:6:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
              "file": "../../../interfaces/IERC1363.sol",
              "id": 1045,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1449,
              "sourceUnit": 230,
              "src": "179:58:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1044,
                    "name": "IERC1363",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 229,
                    "src": "187:8:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeERC20",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1046,
                "nodeType": "StructuredDocumentation",
                "src": "239:458:9",
                "text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
              },
              "fullyImplemented": true,
              "id": 1448,
              "linearizedBaseContracts": [
                1448
              ],
              "name": "SafeERC20",
              "nameLocation": "706:9:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1047,
                    "nodeType": "StructuredDocumentation",
                    "src": "722:65:9",
                    "text": " @dev An operation with an ERC-20 token failed."
                  },
                  "errorSelector": "5274afe7",
                  "id": 1051,
                  "name": "SafeERC20FailedOperation",
                  "nameLocation": "798:24:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1049,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "831:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "823:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "822:15:9"
                  },
                  "src": "792:46:9"
                },
                {
                  "documentation": {
                    "id": 1052,
                    "nodeType": "StructuredDocumentation",
                    "src": "844:71:9",
                    "text": " @dev Indicates a failed `decreaseAllowance` request."
                  },
                  "errorSelector": "e570110f",
                  "id": 1060,
                  "name": "SafeERC20FailedDecreaseAllowance",
                  "nameLocation": "926:32:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1054,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "967:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "959:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1053,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "959:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1056,
                        "mutability": "mutable",
                        "name": "currentAllowance",
                        "nameLocation": "984:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "976:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1055,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "976:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1058,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "1010:17:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1002:25:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1057,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1002:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "958:70:9"
                  },
                  "src": "920:109:9"
                },
                {
                  "body": {
                    "id": 1083,
                    "nodeType": "Block",
                    "src": "1291:88:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1072,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1064,
                              "src": "1321:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1075,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1064,
                                    "src": "1343:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1076,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1349:8:9",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 934,
                                  "src": "1343:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1077,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1066,
                                      "src": "1360:2:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1078,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1068,
                                      "src": "1364:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1079,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1359:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1073,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1328:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1332:10:9",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1328:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1328:43:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1071,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "1301:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1301:71:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1082,
                        "nodeType": "ExpressionStatement",
                        "src": "1301:71:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1061,
                    "nodeType": "StructuredDocumentation",
                    "src": "1035:179:9",
                    "text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                  },
                  "id": 1084,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "1228:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1069,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1064,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1248:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "1241:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1063,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1062,
                            "name": "IERC20",
                            "nameLocations": [
                              "1241:6:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "1241:6:9"
                          },
                          "referencedDeclaration": 967,
                          "src": "1241:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1066,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1263:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "1255:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1255:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1068,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1275:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "1267:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1240:41:9"
                  },
                  "returnParameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1291:0:9"
                  },
                  "scope": 1448,
                  "src": "1219:160:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1110,
                    "nodeType": "Block",
                    "src": "1708:98:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1098,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "1738:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1101,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1088,
                                    "src": "1760:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1766:12:9",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 966,
                                  "src": "1760:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1103,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1090,
                                      "src": "1781:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1104,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1092,
                                      "src": "1787:2:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1105,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1094,
                                      "src": "1791:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1106,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1780:17:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1099,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1745:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1749:10:9",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1745:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1745:53:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1097,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "1718:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1718:81:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1109,
                        "nodeType": "ExpressionStatement",
                        "src": "1718:81:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1085,
                    "nodeType": "StructuredDocumentation",
                    "src": "1385:228:9",
                    "text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
                  },
                  "id": 1111,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1627:16:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1095,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1651:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "1644:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1087,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1086,
                            "name": "IERC20",
                            "nameLocations": [
                              "1644:6:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "1644:6:9"
                          },
                          "referencedDeclaration": 967,
                          "src": "1644:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1666:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "1658:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1658:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1680:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "1672:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1672:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1094,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1692:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "1684:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1093,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1643:55:9"
                  },
                  "returnParameters": {
                    "id": 1096,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1708:0:9"
                  },
                  "scope": 1448,
                  "src": "1618:188:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1141,
                    "nodeType": "Block",
                    "src": "2548:139:9",
                    "statements": [
                      {
                        "assignments": [
                          1123
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1123,
                            "mutability": "mutable",
                            "name": "oldAllowance",
                            "nameLocation": "2566:12:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1141,
                            "src": "2558:20:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1122,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2558:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1132,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1128,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2605:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SafeERC20_$1448",
                                    "typeString": "library SafeERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SafeERC20_$1448",
                                    "typeString": "library SafeERC20"
                                  }
                                ],
                                "id": 1127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2597:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1126,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2597:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2597:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1130,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1117,
                              "src": "2612:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1124,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1115,
                              "src": "2581:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2587:9:9",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 944,
                            "src": "2581:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2581:39:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2558:62:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1134,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1115,
                              "src": "2643:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 1135,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1117,
                              "src": "2650:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1136,
                                "name": "oldAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1123,
                                "src": "2659:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1137,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1119,
                                "src": "2674:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2659:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1133,
                            "name": "forceApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1232,
                            "src": "2630:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2630:50:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1140,
                        "nodeType": "ExpressionStatement",
                        "src": "2630:50:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1112,
                    "nodeType": "StructuredDocumentation",
                    "src": "1812:645:9",
                    "text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 1142,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nameLocation": "2471:21:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1120,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1115,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2500:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1142,
                        "src": "2493:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1114,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1113,
                            "name": "IERC20",
                            "nameLocations": [
                              "2493:6:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "2493:6:9"
                          },
                          "referencedDeclaration": 967,
                          "src": "2493:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1117,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2515:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1142,
                        "src": "2507:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1116,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2507:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1119,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2532:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1142,
                        "src": "2524:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1118,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2524:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2492:46:9"
                  },
                  "returnParameters": {
                    "id": 1121,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2548:0:9"
                  },
                  "scope": 1448,
                  "src": "2462:225:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1184,
                    "nodeType": "Block",
                    "src": "3453:370:9",
                    "statements": [
                      {
                        "id": 1183,
                        "nodeType": "UncheckedBlock",
                        "src": "3463:354:9",
                        "statements": [
                          {
                            "assignments": [
                              1154
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1154,
                                "mutability": "mutable",
                                "name": "currentAllowance",
                                "nameLocation": "3495:16:9",
                                "nodeType": "VariableDeclaration",
                                "scope": 1183,
                                "src": "3487:24:9",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1153,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3487:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1163,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1159,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3538:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1448",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1448",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 1158,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3530:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1157,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3530:7:9",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1160,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3530:13:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1161,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1148,
                                  "src": "3545:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1155,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1146,
                                  "src": "3514:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$967",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3520:9:9",
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 944,
                                "src": "3514:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 1162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3514:39:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3487:66:9"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1164,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "3571:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1165,
                                "name": "requestedDecrease",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1150,
                                "src": "3590:17:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3571:36:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1174,
                            "nodeType": "IfStatement",
                            "src": "3567:160:9",
                            "trueBody": {
                              "id": 1173,
                              "nodeType": "Block",
                              "src": "3609:118:9",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 1168,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1148,
                                        "src": "3667:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1169,
                                        "name": "currentAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1154,
                                        "src": "3676:16:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 1170,
                                        "name": "requestedDecrease",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1150,
                                        "src": "3694:17:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1167,
                                      "name": "SafeERC20FailedDecreaseAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1060,
                                      "src": "3634:32:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                        "typeString": "function (address,uint256,uint256) pure returns (error)"
                                      }
                                    },
                                    "id": 1171,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3634:78:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 1172,
                                  "nodeType": "RevertStatement",
                                  "src": "3627:85:9"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1176,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1146,
                                  "src": "3753:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$967",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "id": 1177,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1148,
                                  "src": "3760:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1178,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1154,
                                    "src": "3769:16:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1179,
                                    "name": "requestedDecrease",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1150,
                                    "src": "3788:17:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3769:36:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$967",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1175,
                                "name": "forceApprove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1232,
                                "src": "3740:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (contract IERC20,address,uint256)"
                                }
                              },
                              "id": 1181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3740:66:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1182,
                            "nodeType": "ExpressionStatement",
                            "src": "3740:66:9"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1143,
                    "nodeType": "StructuredDocumentation",
                    "src": "2693:657:9",
                    "text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 1185,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nameLocation": "3364:21:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1146,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3393:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "3386:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1145,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1144,
                            "name": "IERC20",
                            "nameLocations": [
                              "3386:6:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "3386:6:9"
                          },
                          "referencedDeclaration": 967,
                          "src": "3386:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1148,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3408:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "3400:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3400:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1150,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "3425:17:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "3417:25:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3417:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3385:58:9"
                  },
                  "returnParameters": {
                    "id": 1152,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3453:0:9"
                  },
                  "scope": 1448,
                  "src": "3355:468:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1231,
                    "nodeType": "Block",
                    "src": "4477:303:9",
                    "statements": [
                      {
                        "assignments": [
                          1197
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1197,
                            "mutability": "mutable",
                            "name": "approvalCall",
                            "nameLocation": "4500:12:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1231,
                            "src": "4487:25:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1196,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4487:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1206,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1200,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1189,
                                "src": "4530:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$967",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4536:7:9",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 954,
                              "src": "4530:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 1202,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1191,
                                  "src": "4546:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1203,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1193,
                                  "src": "4555:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1204,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4545:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            ],
                            "expression": {
                              "id": 1198,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4515:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4519:10:9",
                            "memberName": "encodeCall",
                            "nodeType": "MemberAccess",
                            "src": "4515:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4515:47:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4487:75:9"
                      },
                      {
                        "condition": {
                          "id": 1211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4577:45:9",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 1208,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1189,
                                "src": "4602:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$967",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 1209,
                                "name": "approvalCall",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1197,
                                "src": "4609:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$967",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1207,
                              "name": "_callOptionalReturnBool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1447,
                              "src": "4578:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                              }
                            },
                            "id": 1210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4578:44:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1230,
                        "nodeType": "IfStatement",
                        "src": "4573:201:9",
                        "trueBody": {
                          "id": 1229,
                          "nodeType": "Block",
                          "src": "4624:150:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1213,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1189,
                                    "src": "4658:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1216,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1189,
                                          "src": "4680:5:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$967",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 1217,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4686:7:9",
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 954,
                                        "src": "4680:13:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 1218,
                                            "name": "spender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1191,
                                            "src": "4696:7:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "hexValue": "30",
                                            "id": 1219,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4705:1:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "id": 1220,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "4695:12:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        },
                                        {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1214,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "4665:3:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1215,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "4669:10:9",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "4665:14:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 1221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4665:43:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1212,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1406,
                                  "src": "4638:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 1222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4638:71:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1223,
                              "nodeType": "ExpressionStatement",
                              "src": "4638:71:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1225,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1189,
                                    "src": "4743:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "id": 1226,
                                    "name": "approvalCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1197,
                                    "src": "4750:12:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1224,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1406,
                                  "src": "4723:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 1227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4723:40:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1228,
                              "nodeType": "ExpressionStatement",
                              "src": "4723:40:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1186,
                    "nodeType": "StructuredDocumentation",
                    "src": "3829:566:9",
                    "text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
                  },
                  "id": 1232,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forceApprove",
                  "nameLocation": "4409:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1189,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4429:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "4422:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1188,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1187,
                            "name": "IERC20",
                            "nameLocations": [
                              "4422:6:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "4422:6:9"
                          },
                          "referencedDeclaration": 967,
                          "src": "4422:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1191,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4444:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "4436:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4436:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1193,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4461:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "4453:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4453:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4421:46:9"
                  },
                  "returnParameters": {
                    "id": 1195,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4477:0:9"
                  },
                  "scope": 1448,
                  "src": "4400:380:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1274,
                    "nodeType": "Block",
                    "src": "5227:219:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1245,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1238,
                                "src": "5241:2:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5244:4:9",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "5241:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5249:6:9",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5241:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5259:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5241:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "5327:39:9",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1259,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1238,
                                  "src": "5350:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1260,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1240,
                                  "src": "5354:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1261,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1242,
                                  "src": "5361:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1257,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1236,
                                  "src": "5328:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$229",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5334:15:9",
                                "memberName": "transferAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 180,
                                "src": "5328:21:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5328:38:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1272,
                          "nodeType": "IfStatement",
                          "src": "5323:117:9",
                          "trueBody": {
                            "id": 1271,
                            "nodeType": "Block",
                            "src": "5368:72:9",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1267,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1236,
                                          "src": "5422:5:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1266,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5414:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1265,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5414:7:9",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1268,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5414:14:9",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1264,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1051,
                                    "src": "5389:24:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5389:40:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1270,
                                "nodeType": "RevertStatement",
                                "src": "5382:47:9"
                              }
                            ]
                          }
                        },
                        "id": 1273,
                        "nodeType": "IfStatement",
                        "src": "5237:203:9",
                        "trueBody": {
                          "id": 1256,
                          "nodeType": "Block",
                          "src": "5262:55:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1251,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1236,
                                    "src": "5289:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1252,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1238,
                                    "src": "5296:2:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1253,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1240,
                                    "src": "5300:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1250,
                                  "name": "safeTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1084,
                                  "src": "5276:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5276:30:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1255,
                              "nodeType": "ExpressionStatement",
                              "src": "5276:30:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1233,
                    "nodeType": "StructuredDocumentation",
                    "src": "4786:333:9",
                    "text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1275,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCallRelaxed",
                  "nameLocation": "5133:22:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1236,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5165:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "5156:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$229",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 1235,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1234,
                            "name": "IERC1363",
                            "nameLocations": [
                              "5156:8:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 229,
                            "src": "5156:8:9"
                          },
                          "referencedDeclaration": 229,
                          "src": "5156:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$229",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1238,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5180:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "5172:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5172:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1240,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5192:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "5184:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1239,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5184:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1242,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5212:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "5199:17:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1241,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5199:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5155:62:9"
                  },
                  "returnParameters": {
                    "id": 1244,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5227:0:9"
                  },
                  "scope": 1448,
                  "src": "5124:322:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1321,
                    "nodeType": "Block",
                    "src": "5965:239:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1290,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1283,
                                "src": "5979:2:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5982:4:9",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "5979:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5987:6:9",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5979:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5997:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5979:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6075:49:9",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1305,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1281,
                                  "src": "6102:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1306,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "6108:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1307,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1285,
                                  "src": "6112:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1308,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1287,
                                  "src": "6119:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1303,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1279,
                                  "src": "6076:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$229",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6082:19:9",
                                "memberName": "transferFromAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 206,
                                "src": "6076:25:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6076:48:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1319,
                          "nodeType": "IfStatement",
                          "src": "6071:127:9",
                          "trueBody": {
                            "id": 1318,
                            "nodeType": "Block",
                            "src": "6126:72:9",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1314,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1279,
                                          "src": "6180:5:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1313,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6172:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1312,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6172:7:9",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1315,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6172:14:9",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1311,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1051,
                                    "src": "6147:24:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6147:40:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1317,
                                "nodeType": "RevertStatement",
                                "src": "6140:47:9"
                              }
                            ]
                          }
                        },
                        "id": 1320,
                        "nodeType": "IfStatement",
                        "src": "5975:223:9",
                        "trueBody": {
                          "id": 1302,
                          "nodeType": "Block",
                          "src": "6000:65:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1296,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1279,
                                    "src": "6031:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1297,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1281,
                                    "src": "6038:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1298,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1283,
                                    "src": "6044:2:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1299,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1285,
                                    "src": "6048:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1295,
                                  "name": "safeTransferFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1111,
                                  "src": "6014:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 1300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6014:40:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1301,
                              "nodeType": "ExpressionStatement",
                              "src": "6014:40:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1276,
                    "nodeType": "StructuredDocumentation",
                    "src": "5452:341:9",
                    "text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1322,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCallRelaxed",
                  "nameLocation": "5807:26:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1288,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1279,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5852:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "5843:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$229",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 1278,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1277,
                            "name": "IERC1363",
                            "nameLocations": [
                              "5843:8:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 229,
                            "src": "5843:8:9"
                          },
                          "referencedDeclaration": 229,
                          "src": "5843:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$229",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1281,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5875:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "5867:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5867:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1283,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5897:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "5889:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5889:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1285,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5917:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "5909:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1284,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5909:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1287,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5945:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "5932:17:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1286,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5932:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5833:122:9"
                  },
                  "returnParameters": {
                    "id": 1289,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5965:0:9"
                  },
                  "scope": 1448,
                  "src": "5798:406:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1364,
                    "nodeType": "Block",
                    "src": "6971:218:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1335,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1328,
                                "src": "6985:2:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6988:4:9",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "6985:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6993:6:9",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6985:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7003:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6985:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "7071:38:9",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1349,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1328,
                                  "src": "7093:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1350,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1330,
                                  "src": "7097:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1351,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1332,
                                  "src": "7104:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1347,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1326,
                                  "src": "7072:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$229",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7078:14:9",
                                "memberName": "approveAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 228,
                                "src": "7072:20:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7072:37:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1362,
                          "nodeType": "IfStatement",
                          "src": "7067:116:9",
                          "trueBody": {
                            "id": 1361,
                            "nodeType": "Block",
                            "src": "7111:72:9",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1357,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1326,
                                          "src": "7165:5:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1356,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7157:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1355,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7157:7:9",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1358,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7157:14:9",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1354,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1051,
                                    "src": "7132:24:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7132:40:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1360,
                                "nodeType": "RevertStatement",
                                "src": "7125:47:9"
                              }
                            ]
                          }
                        },
                        "id": 1363,
                        "nodeType": "IfStatement",
                        "src": "6981:202:9",
                        "trueBody": {
                          "id": 1346,
                          "nodeType": "Block",
                          "src": "7006:55:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1341,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1326,
                                    "src": "7033:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1342,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1328,
                                    "src": "7040:2:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1343,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1330,
                                    "src": "7044:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1340,
                                  "name": "forceApprove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "7020:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7020:30:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1345,
                              "nodeType": "ExpressionStatement",
                              "src": "7020:30:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1323,
                    "nodeType": "StructuredDocumentation",
                    "src": "6210:654:9",
                    "text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1365,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCallRelaxed",
                  "nameLocation": "6878:21:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1326,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6909:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1365,
                        "src": "6900:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$229",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 1325,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1324,
                            "name": "IERC1363",
                            "nameLocations": [
                              "6900:8:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 229,
                            "src": "6900:8:9"
                          },
                          "referencedDeclaration": 229,
                          "src": "6900:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$229",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1328,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6924:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1365,
                        "src": "6916:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1327,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6916:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1330,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6936:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1365,
                        "src": "6928:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1329,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6928:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1332,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6956:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1365,
                        "src": "6943:17:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1331,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6943:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6899:62:9"
                  },
                  "returnParameters": {
                    "id": 1334,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6971:0:9"
                  },
                  "scope": 1448,
                  "src": "6869:320:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1405,
                    "nodeType": "Block",
                    "src": "7756:650:9",
                    "statements": [
                      {
                        "assignments": [
                          1375
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1375,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "7774:10:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1405,
                            "src": "7766:18:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1374,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7766:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1376,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7766:18:9"
                      },
                      {
                        "assignments": [
                          1378
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1378,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "7802:11:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1405,
                            "src": "7794:19:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1377,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7794:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1379,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7794:19:9"
                      },
                      {
                        "AST": {
                          "nativeSrc": "7848:396:9",
                          "nodeType": "YulBlock",
                          "src": "7848:396:9",
                          "statements": [
                            {
                              "nativeSrc": "7862:75:9",
                              "nodeType": "YulVariableDeclaration",
                              "src": "7862:75:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "7882:3:9",
                                      "nodeType": "YulIdentifier",
                                      "src": "7882:3:9"
                                    },
                                    "nativeSrc": "7882:5:9",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7882:5:9"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "7889:5:9",
                                    "nodeType": "YulIdentifier",
                                    "src": "7889:5:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7896:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "7896:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "7903:4:9",
                                        "nodeType": "YulIdentifier",
                                        "src": "7903:4:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7909:4:9",
                                        "nodeType": "YulLiteral",
                                        "src": "7909:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7899:3:9",
                                      "nodeType": "YulIdentifier",
                                      "src": "7899:3:9"
                                    },
                                    "nativeSrc": "7899:15:9",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7899:15:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "7922:4:9",
                                        "nodeType": "YulIdentifier",
                                        "src": "7922:4:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "7916:5:9",
                                      "nodeType": "YulIdentifier",
                                      "src": "7916:5:9"
                                    },
                                    "nativeSrc": "7916:11:9",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7916:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7929:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "7929:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7932:4:9",
                                    "nodeType": "YulLiteral",
                                    "src": "7932:4:9",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "7877:4:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "7877:4:9"
                                },
                                "nativeSrc": "7877:60:9",
                                "nodeType": "YulFunctionCall",
                                "src": "7877:60:9"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nativeSrc": "7866:7:9",
                                  "nodeType": "YulTypedName",
                                  "src": "7866:7:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "7998:157:9",
                                "nodeType": "YulBlock",
                                "src": "7998:157:9",
                                "statements": [
                                  {
                                    "nativeSrc": "8016:22:9",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8016:22:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8033:4:9",
                                          "nodeType": "YulLiteral",
                                          "src": "8033:4:9",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "8027:5:9",
                                        "nodeType": "YulIdentifier",
                                        "src": "8027:5:9"
                                      },
                                      "nativeSrc": "8027:11:9",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8027:11:9"
                                    },
                                    "variables": [
                                      {
                                        "name": "ptr",
                                        "nativeSrc": "8020:3:9",
                                        "nodeType": "YulTypedName",
                                        "src": "8020:3:9",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8070:3:9",
                                          "nodeType": "YulIdentifier",
                                          "src": "8070:3:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8075:1:9",
                                          "nodeType": "YulLiteral",
                                          "src": "8075:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8078:14:9",
                                            "nodeType": "YulIdentifier",
                                            "src": "8078:14:9"
                                          },
                                          "nativeSrc": "8078:16:9",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8078:16:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nativeSrc": "8055:14:9",
                                        "nodeType": "YulIdentifier",
                                        "src": "8055:14:9"
                                      },
                                      "nativeSrc": "8055:40:9",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8055:40:9"
                                    },
                                    "nativeSrc": "8055:40:9",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8055:40:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8119:3:9",
                                          "nodeType": "YulIdentifier",
                                          "src": "8119:3:9"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8124:14:9",
                                            "nodeType": "YulIdentifier",
                                            "src": "8124:14:9"
                                          },
                                          "nativeSrc": "8124:16:9",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8124:16:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "8112:6:9",
                                        "nodeType": "YulIdentifier",
                                        "src": "8112:6:9"
                                      },
                                      "nativeSrc": "8112:29:9",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8112:29:9"
                                    },
                                    "nativeSrc": "8112:29:9",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8112:29:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nativeSrc": "7989:7:9",
                                    "nodeType": "YulIdentifier",
                                    "src": "7989:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "7982:6:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "7982:6:9"
                                },
                                "nativeSrc": "7982:15:9",
                                "nodeType": "YulFunctionCall",
                                "src": "7982:15:9"
                              },
                              "nativeSrc": "7979:176:9",
                              "nodeType": "YulIf",
                              "src": "7979:176:9"
                            },
                            {
                              "nativeSrc": "8168:30:9",
                              "nodeType": "YulAssignment",
                              "src": "8168:30:9",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "8182:14:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "8182:14:9"
                                },
                                "nativeSrc": "8182:16:9",
                                "nodeType": "YulFunctionCall",
                                "src": "8182:16:9"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "8168:10:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "8168:10:9"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "8211:23:9",
                              "nodeType": "YulAssignment",
                              "src": "8211:23:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8232:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "8232:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "8226:5:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "8226:5:9"
                                },
                                "nativeSrc": "8226:8:9",
                                "nodeType": "YulFunctionCall",
                                "src": "8226:8:9"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "8211:11:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "8211:11:9"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1371,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7903:4:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1371,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7922:4:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1375,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8168:10:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1378,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8211:11:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1369,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7889:5:9",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 1380,
                        "nodeType": "InlineAssembly",
                        "src": "7823:421:9"
                      },
                      {
                        "condition": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1381,
                              "name": "returnSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "8258:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8272:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8258:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1392,
                              "name": "returnValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1378,
                              "src": "8310:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8325:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8310:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8258:68:9",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1386,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1369,
                                      "src": "8284:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$967",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$967",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 1385,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8276:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1384,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8276:7:9",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8276:14:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8291:4:9",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "8276:19:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8296:6:9",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "8276:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8306:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8276:31:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1404,
                        "nodeType": "IfStatement",
                        "src": "8254:146:9",
                        "trueBody": {
                          "id": 1403,
                          "nodeType": "Block",
                          "src": "8328:72:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1399,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1369,
                                        "src": "8382:5:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$967",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$967",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 1398,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8374:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1397,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8374:7:9",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1400,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8374:14:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1396,
                                  "name": "SafeERC20FailedOperation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1051,
                                  "src": "8349:24:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8349:40:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1402,
                              "nodeType": "RevertStatement",
                              "src": "8342:47:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1366,
                    "nodeType": "StructuredDocumentation",
                    "src": "7195:486:9",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
                  },
                  "id": 1406,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturn",
                  "nameLocation": "7695:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1369,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "7722:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1406,
                        "src": "7715:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1368,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1367,
                            "name": "IERC20",
                            "nameLocations": [
                              "7715:6:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "7715:6:9"
                          },
                          "referencedDeclaration": 967,
                          "src": "7715:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1371,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7742:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1406,
                        "src": "7729:17:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1370,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7729:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7714:33:9"
                  },
                  "returnParameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7756:0:9"
                  },
                  "scope": 1448,
                  "src": "7686:720:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1446,
                    "nodeType": "Block",
                    "src": "8997:391:9",
                    "statements": [
                      {
                        "assignments": [
                          1418
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1418,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9012:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1446,
                            "src": "9007:12:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1417,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9007:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1419,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9007:12:9"
                      },
                      {
                        "assignments": [
                          1421
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1421,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "9037:10:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1446,
                            "src": "9029:18:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1420,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9029:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1422,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9029:18:9"
                      },
                      {
                        "assignments": [
                          1424
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1424,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "9065:11:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1446,
                            "src": "9057:19:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1423,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9057:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1425,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9057:19:9"
                      },
                      {
                        "AST": {
                          "nativeSrc": "9111:174:9",
                          "nodeType": "YulBlock",
                          "src": "9111:174:9",
                          "statements": [
                            {
                              "nativeSrc": "9125:71:9",
                              "nodeType": "YulAssignment",
                              "src": "9125:71:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "9141:3:9",
                                      "nodeType": "YulIdentifier",
                                      "src": "9141:3:9"
                                    },
                                    "nativeSrc": "9141:5:9",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9141:5:9"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "9148:5:9",
                                    "nodeType": "YulIdentifier",
                                    "src": "9148:5:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9155:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "9155:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9162:4:9",
                                        "nodeType": "YulIdentifier",
                                        "src": "9162:4:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9168:4:9",
                                        "nodeType": "YulLiteral",
                                        "src": "9168:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9158:3:9",
                                      "nodeType": "YulIdentifier",
                                      "src": "9158:3:9"
                                    },
                                    "nativeSrc": "9158:15:9",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9158:15:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9181:4:9",
                                        "nodeType": "YulIdentifier",
                                        "src": "9181:4:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "9175:5:9",
                                      "nodeType": "YulIdentifier",
                                      "src": "9175:5:9"
                                    },
                                    "nativeSrc": "9175:11:9",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9175:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9188:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "9188:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9191:4:9",
                                    "nodeType": "YulLiteral",
                                    "src": "9191:4:9",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "9136:4:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "9136:4:9"
                                },
                                "nativeSrc": "9136:60:9",
                                "nodeType": "YulFunctionCall",
                                "src": "9136:60:9"
                              },
                              "variableNames": [
                                {
                                  "name": "success",
                                  "nativeSrc": "9125:7:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "9125:7:9"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9209:30:9",
                              "nodeType": "YulAssignment",
                              "src": "9209:30:9",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "9223:14:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "9223:14:9"
                                },
                                "nativeSrc": "9223:16:9",
                                "nodeType": "YulFunctionCall",
                                "src": "9223:16:9"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "9209:10:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "9209:10:9"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9252:23:9",
                              "nodeType": "YulAssignment",
                              "src": "9252:23:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9273:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "9273:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "9267:5:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "9267:5:9"
                                },
                                "nativeSrc": "9267:8:9",
                                "nodeType": "YulFunctionCall",
                                "src": "9267:8:9"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "9252:11:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "9252:11:9"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1412,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9162:4:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1412,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9181:4:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1421,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9209:10:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1424,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9252:11:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9125:7:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1410,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9148:5:9",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 1426,
                        "nodeType": "InlineAssembly",
                        "src": "9086:199:9"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1427,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1418,
                            "src": "9301:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1428,
                                    "name": "returnSize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1421,
                                    "src": "9313:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1429,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9327:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9313:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1441,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1439,
                                    "name": "returnValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1424,
                                    "src": "9364:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1440,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9379:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "9364:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9313:67:9",
                                "trueExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1433,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1410,
                                            "src": "9339:5:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$967",
                                              "typeString": "contract IERC20"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IERC20_$967",
                                              "typeString": "contract IERC20"
                                            }
                                          ],
                                          "id": 1432,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "9331:7:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1431,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "9331:7:9",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1434,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9331:14:9",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1435,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9346:4:9",
                                      "memberName": "code",
                                      "nodeType": "MemberAccess",
                                      "src": "9331:19:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 1436,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9351:6:9",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "9331:26:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9360:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9331:30:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1443,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9312:69:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9301:80:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1416,
                        "id": 1445,
                        "nodeType": "Return",
                        "src": "9294:87:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1407,
                    "nodeType": "StructuredDocumentation",
                    "src": "8412:491:9",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
                  },
                  "id": 1447,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturnBool",
                  "nameLocation": "8917:23:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1410,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8948:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1447,
                        "src": "8941:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1409,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1408,
                            "name": "IERC20",
                            "nameLocations": [
                              "8941:6:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "8941:6:9"
                          },
                          "referencedDeclaration": 967,
                          "src": "8941:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1412,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "8968:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1447,
                        "src": "8955:17:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1411,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8955:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8940:33:9"
                  },
                  "returnParameters": {
                    "id": 1416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1415,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1447,
                        "src": "8991:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1414,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8991:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8990:6:9"
                  },
                  "scope": 1448,
                  "src": "8908:480:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1449,
              "src": "698:8692:9",
              "usedErrors": [
                1051,
                1060
              ],
              "usedEvents": []
            }
          ],
          "src": "115:9276:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1478
            ]
          },
          "id": 1479,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1450,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:10"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1451,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:10",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1478,
              "linearizedBaseContracts": [
                1478
              ],
              "name": "Context",
              "nameLocation": "642:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1459,
                    "nodeType": "Block",
                    "src": "718:34:10",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1456,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1455,
                        "id": 1458,
                        "nodeType": "Return",
                        "src": "728:17:10"
                      }
                    ]
                  },
                  "id": 1460,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1452,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:10"
                  },
                  "returnParameters": {
                    "id": 1455,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1454,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1460,
                        "src": "709:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1453,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:10"
                  },
                  "scope": 1478,
                  "src": "656:96:10",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1468,
                    "nodeType": "Block",
                    "src": "825:32:10",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1465,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:10",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1464,
                        "id": 1467,
                        "nodeType": "Return",
                        "src": "835:15:10"
                      }
                    ]
                  },
                  "id": 1469,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1461,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:10"
                  },
                  "returnParameters": {
                    "id": 1464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1463,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1469,
                        "src": "809:14:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1462,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:10"
                  },
                  "scope": 1478,
                  "src": "758:99:10",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1476,
                    "nodeType": "Block",
                    "src": "935:25:10",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1473,
                        "id": 1475,
                        "nodeType": "Return",
                        "src": "945:8:10"
                      }
                    ]
                  },
                  "id": 1477,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1470,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:10"
                  },
                  "returnParameters": {
                    "id": 1473,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1472,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "926:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1471,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:10"
                  },
                  "scope": 1478,
                  "src": "863:97:10",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1479,
              "src": "624:338:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:10"
        },
        "id": 10
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              1547
            ]
          },
          "id": 1548,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1480,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:11"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1481,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:11",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 1547,
              "linearizedBaseContracts": [
                1547
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1484,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "1818:40:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1487,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "1864:36:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1489,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "1907:23:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 1490,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:11",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 1492,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1491,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:11"
                  },
                  "src": "1994:37:11"
                },
                {
                  "body": {
                    "id": 1499,
                    "nodeType": "Block",
                    "src": "2051:38:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1495,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1489,
                            "src": "2061:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1496,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "2071:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1498,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:11"
                      }
                    ]
                  },
                  "id": 1500,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1493,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:11"
                  },
                  "returnParameters": {
                    "id": 1494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:11"
                  },
                  "scope": 1547,
                  "src": "2037:52:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1510,
                    "nodeType": "Block",
                    "src": "2490:79:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1503,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1527,
                            "src": "2500:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1505,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:11"
                      },
                      {
                        "id": 1506,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:11"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1507,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1535,
                            "src": "2542:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1509,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1501,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:11",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 1511,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:11",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1502,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:11"
                  },
                  "src": "2466:103:11",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1526,
                    "nodeType": "Block",
                    "src": "2614:268:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1514,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1489,
                            "src": "2702:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1515,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1487,
                            "src": "2713:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1521,
                        "nodeType": "IfStatement",
                        "src": "2698:86:11",
                        "trueBody": {
                          "id": 1520,
                          "nodeType": "Block",
                          "src": "2722:62:11",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1517,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1492,
                                  "src": "2743:28:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1519,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:11"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1522,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1489,
                            "src": "2858:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1523,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1487,
                            "src": "2868:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1525,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:11"
                      }
                    ]
                  },
                  "id": 1527,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1512,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:11"
                  },
                  "returnParameters": {
                    "id": 1513,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:11"
                  },
                  "scope": 1547,
                  "src": "2575:307:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1534,
                    "nodeType": "Block",
                    "src": "2926:170:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1530,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1489,
                            "src": "3068:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1531,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "3078:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1533,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:11"
                      }
                    ]
                  },
                  "id": 1535,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1528,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:11"
                  },
                  "returnParameters": {
                    "id": 1529,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:11"
                  },
                  "scope": 1547,
                  "src": "2888:208:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1545,
                    "nodeType": "Block",
                    "src": "3339:42:11",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1541,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1489,
                            "src": "3356:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1542,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1487,
                            "src": "3367:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1540,
                        "id": 1544,
                        "nodeType": "Return",
                        "src": "3349:25:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1536,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:11",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 1546,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1537,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:11"
                  },
                  "returnParameters": {
                    "id": 1540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1539,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1546,
                        "src": "3333:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1538,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:11"
                  },
                  "scope": 1547,
                  "src": "3275:106:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1548,
              "src": "1030:2353:11",
              "usedErrors": [
                1492
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:11"
        },
        "id": 11
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1559
            ]
          },
          "id": 1560,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1549,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1550,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:12",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1559,
              "linearizedBaseContracts": [
                1559
              ],
              "name": "IERC165",
              "nameLocation": "432:7:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1551,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:12",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1558,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1554,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1553,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1558,
                        "src": "818:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1552,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:12"
                  },
                  "returnParameters": {
                    "id": 1557,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1556,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1558,
                        "src": "861:4:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1555,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:12"
                  },
                  "scope": 1559,
                  "src": "791:76:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1560,
              "src": "422:447:12",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:12"
        },
        "id": 12
      },
      "contracts/ICO.sol": {
        "ast": {
          "absolutePath": "contracts/ICO.sol",
          "exportedSymbols": {
            "ChainSphereTokenICO": [
              3077
            ],
            "Context": [
              1478
            ],
            "ERC20": [
              889
            ],
            "ERC20Burnable": [
              1013
            ],
            "IERC1363": [
              229
            ],
            "IERC20": [
              967
            ],
            "IERC20Errors": [
              279
            ],
            "IERC20Metadata": [
              1039
            ],
            "Ownable": [
              147
            ],
            "ReentrancyGuard": [
              1547
            ],
            "SafeERC20": [
              1448
            ]
          },
          "id": 3078,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1561,
              "literals": [
                "solidity",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:13"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 1562,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3078,
              "sourceUnit": 1449,
              "src": "57:65:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1563,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3078,
              "sourceUnit": 148,
              "src": "123:52:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1564,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3078,
              "sourceUnit": 1548,
              "src": "176:59:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "id": 1565,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3078,
              "sourceUnit": 1014,
              "src": "236:74:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1566,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3078,
              "sourceUnit": 890,
              "src": "311:55:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1567,
                    "name": "ERC20",
                    "nameLocations": [
                      "401:5:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 889,
                    "src": "401:5:13"
                  },
                  "id": 1568,
                  "nodeType": "InheritanceSpecifier",
                  "src": "401:5:13"
                },
                {
                  "baseName": {
                    "id": 1569,
                    "name": "ERC20Burnable",
                    "nameLocations": [
                      "408:13:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1013,
                    "src": "408:13:13"
                  },
                  "id": 1570,
                  "nodeType": "InheritanceSpecifier",
                  "src": "408:13:13"
                },
                {
                  "baseName": {
                    "id": 1571,
                    "name": "Ownable",
                    "nameLocations": [
                      "423:7:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "423:7:13"
                  },
                  "id": 1572,
                  "nodeType": "InheritanceSpecifier",
                  "src": "423:7:13"
                },
                {
                  "baseName": {
                    "id": 1573,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "432:15:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1547,
                    "src": "432:15:13"
                  },
                  "id": 1574,
                  "nodeType": "InheritanceSpecifier",
                  "src": "432:15:13"
                }
              ],
              "canonicalName": "ChainSphereTokenICO",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3077,
              "linearizedBaseContracts": [
                3077,
                1547,
                147,
                1013,
                889,
                279,
                1039,
                967,
                1478
              ],
              "name": "ChainSphereTokenICO",
              "nameLocation": "378:19:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 1578,
                  "libraryName": {
                    "id": 1575,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "460:9:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1448,
                    "src": "460:9:13"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "454:27:13",
                  "typeName": {
                    "id": 1577,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1576,
                      "name": "IERC20",
                      "nameLocations": [
                        "474:6:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 967,
                      "src": "474:6:13"
                    },
                    "referencedDeclaration": 967,
                    "src": "474:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$967",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "constant": false,
                  "functionSelector": "ed65af74",
                  "id": 1581,
                  "mutability": "mutable",
                  "name": "usdtERC20",
                  "nameLocation": "560:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "546:23:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$967",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1580,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1579,
                      "name": "IERC20",
                      "nameLocations": [
                        "546:6:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 967,
                      "src": "546:6:13"
                    },
                    "referencedDeclaration": 967,
                    "src": "546:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$967",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cf26d536",
                  "id": 1584,
                  "mutability": "mutable",
                  "name": "usdtBEP20",
                  "nameLocation": "589:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "575:23:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$967",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1583,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1582,
                      "name": "IERC20",
                      "nameLocations": [
                        "575:6:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 967,
                      "src": "575:6:13"
                    },
                    "referencedDeclaration": 967,
                    "src": "575:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$967",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "827037db",
                  "id": 1586,
                  "mutability": "mutable",
                  "name": "icoStart",
                  "nameLocation": "724:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "709:23:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0563451a",
                  "id": 1588,
                  "mutability": "mutable",
                  "name": "icoEnd",
                  "nameLocation": "753:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "738:21:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cd94b54b",
                  "id": 1590,
                  "mutability": "mutable",
                  "name": "manualPause",
                  "nameLocation": "777:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "765:23:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1589,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5ed9ebfc",
                  "id": 1592,
                  "mutability": "mutable",
                  "name": "soldTokens",
                  "nameLocation": "809:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "794:25:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7ff9b596",
                  "id": 1594,
                  "mutability": "mutable",
                  "name": "tokenPrice",
                  "nameLocation": "840:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "825:25:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "04554443",
                  "id": 1597,
                  "mutability": "mutable",
                  "name": "lockDuration",
                  "nameLocation": "892:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "877:39:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "877:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "907:9:13",
                    "subdenomination": "minutes",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_120_by_1",
                      "typeString": "int_const 120"
                    },
                    "value": "2"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b8e50cab",
                  "id": 1600,
                  "mutability": "mutable",
                  "name": "vestingInterval",
                  "nameLocation": "937:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "922:42:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "955:9:13",
                    "subdenomination": "minutes",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60_by_1",
                      "typeString": "int_const 60"
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ChainSphereTokenICO.VestingSchedule",
                  "id": 1609,
                  "members": [
                    {
                      "constant": false,
                      "id": 1602,
                      "mutability": "mutable",
                      "name": "totalAmount",
                      "nameLocation": "1012:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1609,
                      "src": "1004:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1601,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1004:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1604,
                      "mutability": "mutable",
                      "name": "claimedAmount",
                      "nameLocation": "1041:13:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1609,
                      "src": "1033:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1603,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1033:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1606,
                      "mutability": "mutable",
                      "name": "lockEndTime",
                      "nameLocation": "1072:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1609,
                      "src": "1064:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1605,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1064:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1608,
                      "mutability": "mutable",
                      "name": "unlockPerBatch",
                      "nameLocation": "1101:14:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1609,
                      "src": "1093:22:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1607,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1093:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "VestingSchedule",
                  "nameLocation": "978:15:13",
                  "nodeType": "StructDefinition",
                  "scope": 3077,
                  "src": "971:151:13",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fdb20ccb",
                  "id": 1614,
                  "mutability": "mutable",
                  "name": "vestingSchedules",
                  "nameLocation": "1170:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "1127:59:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1609_storage_$",
                    "typeString": "mapping(address => struct ChainSphereTokenICO.VestingSchedule)"
                  },
                  "typeName": {
                    "id": 1613,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1610,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1135:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1127:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1609_storage_$",
                      "typeString": "mapping(address => struct ChainSphereTokenICO.VestingSchedule)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1612,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1611,
                        "name": "VestingSchedule",
                        "nameLocations": [
                          "1146:15:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1609,
                        "src": "1146:15:13"
                      },
                      "referencedDeclaration": 1609,
                      "src": "1146:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                        "typeString": "struct ChainSphereTokenICO.VestingSchedule"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ChainSphereTokenICO.SalePhaseInfo",
                  "id": 1621,
                  "members": [
                    {
                      "constant": false,
                      "id": 1616,
                      "mutability": "mutable",
                      "name": "allocatedSupply",
                      "nameLocation": "1232:15:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1621,
                      "src": "1224:23:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1615,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1224:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1618,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1265:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1621,
                      "src": "1257:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1617,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1257:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1620,
                      "mutability": "mutable",
                      "name": "lockingPeriod",
                      "nameLocation": "1288:13:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1621,
                      "src": "1280:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1619,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "SalePhaseInfo",
                  "nameLocation": "1200:13:13",
                  "nodeType": "StructDefinition",
                  "scope": 3077,
                  "src": "1193:115:13",
                  "visibility": "public"
                },
                {
                  "canonicalName": "ChainSphereTokenICO.SalePhase",
                  "id": 1629,
                  "members": [
                    {
                      "id": 1622,
                      "name": "notStarted",
                      "nameLocation": "1339:10:13",
                      "nodeType": "EnumValue",
                      "src": "1339:10:13"
                    },
                    {
                      "id": 1623,
                      "name": "Privatesale",
                      "nameLocation": "1359:11:13",
                      "nodeType": "EnumValue",
                      "src": "1359:11:13"
                    },
                    {
                      "id": 1624,
                      "name": "Presale1",
                      "nameLocation": "1380:8:13",
                      "nodeType": "EnumValue",
                      "src": "1380:8:13"
                    },
                    {
                      "id": 1625,
                      "name": "Presale2",
                      "nameLocation": "1398:8:13",
                      "nodeType": "EnumValue",
                      "src": "1398:8:13"
                    },
                    {
                      "id": 1626,
                      "name": "Publicsale",
                      "nameLocation": "1416:10:13",
                      "nodeType": "EnumValue",
                      "src": "1416:10:13"
                    },
                    {
                      "id": 1627,
                      "name": "Pause",
                      "nameLocation": "1436:5:13",
                      "nodeType": "EnumValue",
                      "src": "1436:5:13"
                    },
                    {
                      "id": 1628,
                      "name": "Ended",
                      "nameLocation": "1451:5:13",
                      "nodeType": "EnumValue",
                      "src": "1451:5:13"
                    }
                  ],
                  "name": "SalePhase",
                  "nameLocation": "1319:9:13",
                  "nodeType": "EnumDefinition",
                  "src": "1314:148:13"
                },
                {
                  "constant": false,
                  "functionSelector": "e4f2487a",
                  "id": 1632,
                  "mutability": "mutable",
                  "name": "salePhase",
                  "nameLocation": "1484:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "1467:26:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_SalePhase_$1629",
                    "typeString": "enum ChainSphereTokenICO.SalePhase"
                  },
                  "typeName": {
                    "id": 1631,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1630,
                      "name": "SalePhase",
                      "nameLocations": [
                        "1467:9:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1629,
                      "src": "1467:9:13"
                    },
                    "referencedDeclaration": 1629,
                    "src": "1467:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SalePhase_$1629",
                      "typeString": "enum ChainSphereTokenICO.SalePhase"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8e58e76e",
                  "id": 1638,
                  "mutability": "mutable",
                  "name": "salePhases",
                  "nameLocation": "1542:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "1499:53:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_struct$_SalePhaseInfo_$1621_storage_$",
                    "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => struct ChainSphereTokenICO.SalePhaseInfo)"
                  },
                  "typeName": {
                    "id": 1637,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1634,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1633,
                        "name": "SalePhase",
                        "nameLocations": [
                          "1507:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1629,
                        "src": "1507:9:13"
                      },
                      "referencedDeclaration": 1629,
                      "src": "1507:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SalePhase_$1629",
                        "typeString": "enum ChainSphereTokenICO.SalePhase"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1499:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_struct$_SalePhaseInfo_$1621_storage_$",
                      "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => struct ChainSphereTokenICO.SalePhaseInfo)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1636,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1635,
                        "name": "SalePhaseInfo",
                        "nameLocations": [
                          "1520:13:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1621,
                        "src": "1520:13:13"
                      },
                      "referencedDeclaration": 1621,
                      "src": "1520:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage_ptr",
                        "typeString": "struct ChainSphereTokenICO.SalePhaseInfo"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ChainSphereTokenICO.LockingSchedule",
                  "id": 1648,
                  "members": [
                    {
                      "constant": false,
                      "id": 1640,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1600:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1648,
                      "src": "1592:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1639,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1592:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1642,
                      "mutability": "mutable",
                      "name": "purchaseTime",
                      "nameLocation": "1624:12:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1648,
                      "src": "1616:20:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1641,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1616:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1645,
                      "mutability": "mutable",
                      "name": "phase",
                      "nameLocation": "1656:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1648,
                      "src": "1646:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SalePhase_$1629",
                        "typeString": "enum ChainSphereTokenICO.SalePhase"
                      },
                      "typeName": {
                        "id": 1644,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1643,
                          "name": "SalePhase",
                          "nameLocations": [
                            "1646:9:13"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1629,
                          "src": "1646:9:13"
                        },
                        "referencedDeclaration": 1629,
                        "src": "1646:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SalePhase_$1629",
                          "typeString": "enum ChainSphereTokenICO.SalePhase"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1647,
                      "mutability": "mutable",
                      "name": "unlockTime",
                      "nameLocation": "1679:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1648,
                      "src": "1671:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1646,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1671:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "LockingSchedule",
                  "nameLocation": "1566:15:13",
                  "nodeType": "StructDefinition",
                  "scope": 3077,
                  "src": "1559:137:13",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ae3218bc",
                  "id": 1654,
                  "mutability": "mutable",
                  "name": "lockingBalances",
                  "nameLocation": "1746:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "1701:60:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_$",
                    "typeString": "mapping(address => struct ChainSphereTokenICO.LockingSchedule[])"
                  },
                  "typeName": {
                    "id": 1653,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1649,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1709:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1701:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_$",
                      "typeString": "mapping(address => struct ChainSphereTokenICO.LockingSchedule[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 1651,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1650,
                          "name": "LockingSchedule",
                          "nameLocations": [
                            "1720:15:13"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1648,
                          "src": "1720:15:13"
                        },
                        "referencedDeclaration": 1648,
                        "src": "1720:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockingSchedule_$1648_storage_ptr",
                          "typeString": "struct ChainSphereTokenICO.LockingSchedule"
                        }
                      },
                      "id": 1652,
                      "nodeType": "ArrayTypeName",
                      "src": "1720:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                        "typeString": "struct ChainSphereTokenICO.LockingSchedule[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a0ce9433",
                  "id": 1660,
                  "mutability": "mutable",
                  "name": "phaseBuyers",
                  "nameLocation": "1806:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "1767:50:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_array$_t_address_$dyn_storage_$",
                    "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => address[])"
                  },
                  "typeName": {
                    "id": 1659,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1656,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1655,
                        "name": "SalePhase",
                        "nameLocations": [
                          "1775:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1629,
                        "src": "1775:9:13"
                      },
                      "referencedDeclaration": 1629,
                      "src": "1775:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SalePhase_$1629",
                        "typeString": "enum ChainSphereTokenICO.SalePhase"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1767:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_array$_t_address_$dyn_storage_$",
                      "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => address[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 1657,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1788:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1658,
                      "nodeType": "ArrayTypeName",
                      "src": "1788:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "884543c08d36fb5c9b3b688dd0453c9f287199124bdbddb3b7f9ca885a4d34a0",
                  "id": 1670,
                  "name": "TokenBought",
                  "nameLocation": "1830:11:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1669,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1662,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "buyer",
                        "nameLocation": "1867:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1670,
                        "src": "1851:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1661,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1851:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1664,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "usdtAmount",
                        "nameLocation": "1890:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1670,
                        "src": "1882:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1663,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1882:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1666,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokenAmount",
                        "nameLocation": "1918:11:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1670,
                        "src": "1910:19:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1665,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1910:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1668,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "unlockTime",
                        "nameLocation": "1947:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1670,
                        "src": "1939:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1667,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1939:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1841:122:13"
                  },
                  "src": "1824:140:13"
                },
                {
                  "anonymous": false,
                  "eventSelector": "896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430",
                  "id": 1676,
                  "name": "TokensClaimed",
                  "nameLocation": "1975:13:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1675,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1672,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "buyer",
                        "nameLocation": "2005:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1676,
                        "src": "1989:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1671,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1989:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1674,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2020:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1676,
                        "src": "2012:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1673,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2012:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1988:39:13"
                  },
                  "src": "1969:59:13"
                },
                {
                  "canonicalName": "ChainSphereTokenICO.UserSaleDetails",
                  "id": 1681,
                  "members": [
                    {
                      "constant": false,
                      "id": 1678,
                      "mutability": "mutable",
                      "name": "saleType",
                      "nameLocation": "2074:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1681,
                      "src": "2066:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1677,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2066:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1680,
                      "mutability": "mutable",
                      "name": "totalTokens",
                      "nameLocation": "2100:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1681,
                      "src": "2092:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1679,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2092:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "UserSaleDetails",
                  "nameLocation": "2041:15:13",
                  "nodeType": "StructDefinition",
                  "scope": 3077,
                  "src": "2034:84:13",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "48dec2a7",
                  "id": 1686,
                  "mutability": "mutable",
                  "name": "userDetails",
                  "nameLocation": "2166:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "2123:54:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSaleDetails_$1681_storage_$",
                    "typeString": "mapping(address => struct ChainSphereTokenICO.UserSaleDetails)"
                  },
                  "typeName": {
                    "id": 1685,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1682,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2131:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2123:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSaleDetails_$1681_storage_$",
                      "typeString": "mapping(address => struct ChainSphereTokenICO.UserSaleDetails)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1684,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1683,
                        "name": "UserSaleDetails",
                        "nameLocations": [
                          "2142:15:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1681,
                        "src": "2142:15:13"
                      },
                      "referencedDeclaration": 1681,
                      "src": "2142:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserSaleDetails_$1681_storage_ptr",
                        "typeString": "struct ChainSphereTokenICO.UserSaleDetails"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ChainSphereTokenICO.TokenStandard",
                  "id": 1689,
                  "members": [
                    {
                      "id": 1687,
                      "name": "ERC20",
                      "nameLocation": "2258:5:13",
                      "nodeType": "EnumValue",
                      "src": "2258:5:13"
                    },
                    {
                      "id": 1688,
                      "name": "BEP20",
                      "nameLocation": "2265:5:13",
                      "nodeType": "EnumValue",
                      "src": "2265:5:13"
                    }
                  ],
                  "name": "TokenStandard",
                  "nameLocation": "2242:13:13",
                  "nodeType": "EnumDefinition",
                  "src": "2237:35:13"
                },
                {
                  "body": {
                    "id": 1833,
                    "nodeType": "Block",
                    "src": "2539:1063:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1705,
                                  "name": "_usdtERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1691,
                                  "src": "2557:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1708,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2579:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1707,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2571:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1706,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2571:7:13",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1709,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2571:10:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2557:24:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1711,
                                  "name": "_usdtBEP20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1693,
                                  "src": "2585:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1714,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2607:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1713,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2599:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1712,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2599:7:13",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2599:10:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2585:24:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2557:52:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964205553445420616464726573736573",
                              "id": 1718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2611:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_36e0f5b1c9a215db6424d0d68b536035a79412f2839bdbd2279835a10c96d4b4",
                                "typeString": "literal_string \"Invalid USDT addresses\""
                              },
                              "value": "Invalid USDT addresses"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_36e0f5b1c9a215db6424d0d68b536035a79412f2839bdbd2279835a10c96d4b4",
                                "typeString": "literal_string \"Invalid USDT addresses\""
                              }
                            ],
                            "id": 1704,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2549:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2549:87:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1720,
                        "nodeType": "ExpressionStatement",
                        "src": "2549:87:13"
                      },
                      {
                        "expression": {
                          "id": 1725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1721,
                            "name": "usdtERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1581,
                            "src": "2646:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$967",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1723,
                                "name": "_usdtERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1691,
                                "src": "2665:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1722,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "2658:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2658:18:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$967",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2646:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1726,
                        "nodeType": "ExpressionStatement",
                        "src": "2646:30:13"
                      },
                      {
                        "expression": {
                          "id": 1731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1727,
                            "name": "usdtBEP20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1584,
                            "src": "2686:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$967",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1729,
                                "name": "_usdtBEP20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1693,
                                "src": "2705:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1728,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "2698:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2698:18:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$967",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2686:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1732,
                        "nodeType": "ExpressionStatement",
                        "src": "2686:30:13"
                      },
                      {
                        "assignments": [
                          1734
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1734,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "2854:11:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1833,
                            "src": "2846:19:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1733,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2846:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1741,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "35333130303030303030",
                            "id": 1735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2868:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5310000000_by_1",
                              "typeString": "int_const 5310000000"
                            },
                            "value": "5310000000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2881:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1737,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 453,
                                "src": "2885:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view returns (uint8)"
                                }
                              },
                              "id": 1738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2885:10:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "2881:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2868:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2846:49:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1743,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2911:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2915:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2911:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1745,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1734,
                              "src": "2923:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1742,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "2905:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2905:30:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1747,
                        "nodeType": "ExpressionStatement",
                        "src": "2905:30:13"
                      },
                      {
                        "expression": {
                          "id": 1766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1748,
                              "name": "salePhases",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1638,
                              "src": "2946:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_struct$_SalePhaseInfo_$1621_storage_$",
                                "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => struct ChainSphereTokenICO.SalePhaseInfo storage ref)"
                              }
                            },
                            "id": 1751,
                            "indexExpression": {
                              "expression": {
                                "id": 1749,
                                "name": "SalePhase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1629,
                                "src": "2957:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                  "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                }
                              },
                              "id": 1750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2967:11:13",
                              "memberName": "Privatesale",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1623,
                              "src": "2957:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_SalePhase_$1629",
                                "typeString": "enum ChainSphereTokenICO.SalePhase"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2946:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage",
                              "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1755,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1753,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1734,
                                        "src": "3010:11:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "3130",
                                        "id": 1754,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3024:2:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "src": "3010:16:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1756,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3009:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 1757,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3030:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "3009:24:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_50000000000000000_by_1",
                                  "typeString": "int_const 50000000000000000"
                                },
                                "id": 1763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "35",
                                  "id": 1759,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3047:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_10000000000000000_by_1",
                                    "typeString": "int_const 10000000000000000"
                                  },
                                  "id": 1762,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 1760,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3051:2:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3136",
                                    "id": 1761,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3055:2:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_16_by_1",
                                      "typeString": "int_const 16"
                                    },
                                    "value": "16"
                                  },
                                  "src": "3051:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000000000000000_by_1",
                                    "typeString": "int_const 10000000000000000"
                                  }
                                },
                                "src": "3047:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000000000000000_by_1",
                                  "typeString": "int_const 50000000000000000"
                                }
                              },
                              {
                                "hexValue": "373330",
                                "id": 1764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3071:8:13",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_63072000_by_1",
                                  "typeString": "int_const 63072000"
                                },
                                "value": "730"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_50000000000000000_by_1",
                                  "typeString": "int_const 50000000000000000"
                                },
                                {
                                  "typeIdentifier": "t_rational_63072000_by_1",
                                  "typeString": "int_const 63072000"
                                }
                              ],
                              "id": 1752,
                              "name": "SalePhaseInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1621,
                              "src": "2982:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SalePhaseInfo_$1621_storage_ptr_$",
                                "typeString": "type(struct ChainSphereTokenICO.SalePhaseInfo storage pointer)"
                              }
                            },
                            "id": 1765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2982:107:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_memory_ptr",
                              "typeString": "struct ChainSphereTokenICO.SalePhaseInfo memory"
                            }
                          },
                          "src": "2946:143:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage",
                            "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage ref"
                          }
                        },
                        "id": 1767,
                        "nodeType": "ExpressionStatement",
                        "src": "2946:143:13"
                      },
                      {
                        "expression": {
                          "id": 1786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1768,
                              "name": "salePhases",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1638,
                              "src": "3099:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_struct$_SalePhaseInfo_$1621_storage_$",
                                "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => struct ChainSphereTokenICO.SalePhaseInfo storage ref)"
                              }
                            },
                            "id": 1771,
                            "indexExpression": {
                              "expression": {
                                "id": 1769,
                                "name": "SalePhase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1629,
                                "src": "3110:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                  "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                }
                              },
                              "id": 1770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3120:8:13",
                              "memberName": "Presale1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1624,
                              "src": "3110:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_SalePhase_$1629",
                                "typeString": "enum ChainSphereTokenICO.SalePhase"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3099:30:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage",
                              "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1775,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1773,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1734,
                                        "src": "3160:11:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "3130",
                                        "id": 1774,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3174:2:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "src": "3160:16:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1776,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3159:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 1777,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3180:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "3159:24:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_70000000000000000_by_1",
                                  "typeString": "int_const 70000000000000000"
                                },
                                "id": 1783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "37",
                                  "id": 1779,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3197:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_7_by_1",
                                    "typeString": "int_const 7"
                                  },
                                  "value": "7"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_10000000000000000_by_1",
                                    "typeString": "int_const 10000000000000000"
                                  },
                                  "id": 1782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 1780,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3201:2:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3136",
                                    "id": 1781,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3205:2:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_16_by_1",
                                      "typeString": "int_const 16"
                                    },
                                    "value": "16"
                                  },
                                  "src": "3201:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000000000000000_by_1",
                                    "typeString": "int_const 10000000000000000"
                                  }
                                },
                                "src": "3197:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_70000000000000000_by_1",
                                  "typeString": "int_const 70000000000000000"
                                }
                              },
                              {
                                "hexValue": "373330",
                                "id": 1784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3221:8:13",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_63072000_by_1",
                                  "typeString": "int_const 63072000"
                                },
                                "value": "730"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_70000000000000000_by_1",
                                  "typeString": "int_const 70000000000000000"
                                },
                                {
                                  "typeIdentifier": "t_rational_63072000_by_1",
                                  "typeString": "int_const 63072000"
                                }
                              ],
                              "id": 1772,
                              "name": "SalePhaseInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1621,
                              "src": "3132:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SalePhaseInfo_$1621_storage_ptr_$",
                                "typeString": "type(struct ChainSphereTokenICO.SalePhaseInfo storage pointer)"
                              }
                            },
                            "id": 1785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3132:107:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_memory_ptr",
                              "typeString": "struct ChainSphereTokenICO.SalePhaseInfo memory"
                            }
                          },
                          "src": "3099:140:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage",
                            "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage ref"
                          }
                        },
                        "id": 1787,
                        "nodeType": "ExpressionStatement",
                        "src": "3099:140:13"
                      },
                      {
                        "expression": {
                          "id": 1806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1788,
                              "name": "salePhases",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1638,
                              "src": "3249:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_struct$_SalePhaseInfo_$1621_storage_$",
                                "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => struct ChainSphereTokenICO.SalePhaseInfo storage ref)"
                              }
                            },
                            "id": 1791,
                            "indexExpression": {
                              "expression": {
                                "id": 1789,
                                "name": "SalePhase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1629,
                                "src": "3260:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                  "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                }
                              },
                              "id": 1790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3270:8:13",
                              "memberName": "Presale2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1625,
                              "src": "3260:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_SalePhase_$1629",
                                "typeString": "enum ChainSphereTokenICO.SalePhase"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3249:30:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage",
                              "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1798,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1795,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1793,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1734,
                                        "src": "3310:11:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "3130",
                                        "id": 1794,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3324:2:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "src": "3310:16:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1796,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3309:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 1797,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3330:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "3309:24:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_90000000000000000_by_1",
                                  "typeString": "int_const 90000000000000000"
                                },
                                "id": 1803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "39",
                                  "id": 1799,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3347:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_9_by_1",
                                    "typeString": "int_const 9"
                                  },
                                  "value": "9"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_10000000000000000_by_1",
                                    "typeString": "int_const 10000000000000000"
                                  },
                                  "id": 1802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 1800,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3351:2:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3136",
                                    "id": 1801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3355:2:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_16_by_1",
                                      "typeString": "int_const 16"
                                    },
                                    "value": "16"
                                  },
                                  "src": "3351:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000000000000000_by_1",
                                    "typeString": "int_const 10000000000000000"
                                  }
                                },
                                "src": "3347:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_90000000000000000_by_1",
                                  "typeString": "int_const 90000000000000000"
                                }
                              },
                              {
                                "hexValue": "373330",
                                "id": 1804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3371:8:13",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_63072000_by_1",
                                  "typeString": "int_const 63072000"
                                },
                                "value": "730"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_90000000000000000_by_1",
                                  "typeString": "int_const 90000000000000000"
                                },
                                {
                                  "typeIdentifier": "t_rational_63072000_by_1",
                                  "typeString": "int_const 63072000"
                                }
                              ],
                              "id": 1792,
                              "name": "SalePhaseInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1621,
                              "src": "3282:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SalePhaseInfo_$1621_storage_ptr_$",
                                "typeString": "type(struct ChainSphereTokenICO.SalePhaseInfo storage pointer)"
                              }
                            },
                            "id": 1805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3282:107:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_memory_ptr",
                              "typeString": "struct ChainSphereTokenICO.SalePhaseInfo memory"
                            }
                          },
                          "src": "3249:140:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage",
                            "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage ref"
                          }
                        },
                        "id": 1807,
                        "nodeType": "ExpressionStatement",
                        "src": "3249:140:13"
                      },
                      {
                        "expression": {
                          "id": 1826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1808,
                              "name": "salePhases",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1638,
                              "src": "3399:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_struct$_SalePhaseInfo_$1621_storage_$",
                                "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => struct ChainSphereTokenICO.SalePhaseInfo storage ref)"
                              }
                            },
                            "id": 1811,
                            "indexExpression": {
                              "expression": {
                                "id": 1809,
                                "name": "SalePhase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1629,
                                "src": "3410:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                  "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                }
                              },
                              "id": 1810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3420:10:13",
                              "memberName": "Publicsale",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1626,
                              "src": "3410:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_SalePhase_$1629",
                                "typeString": "enum ChainSphereTokenICO.SalePhase"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3399:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage",
                              "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1815,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1813,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1734,
                                        "src": "3462:11:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "35",
                                        "id": 1814,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3476:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_5_by_1",
                                          "typeString": "int_const 5"
                                        },
                                        "value": "5"
                                      },
                                      "src": "3462:15:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1816,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3461:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 1817,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3481:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "3461:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_120000000000000000_by_1",
                                  "typeString": "int_const 120000000000000000"
                                },
                                "id": 1823,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3132",
                                  "id": 1819,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3498:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_12_by_1",
                                    "typeString": "int_const 12"
                                  },
                                  "value": "12"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_10000000000000000_by_1",
                                    "typeString": "int_const 10000000000000000"
                                  },
                                  "id": 1822,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 1820,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3503:2:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3136",
                                    "id": 1821,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3507:2:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_16_by_1",
                                      "typeString": "int_const 16"
                                    },
                                    "value": "16"
                                  },
                                  "src": "3503:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000000000000000_by_1",
                                    "typeString": "int_const 10000000000000000"
                                  }
                                },
                                "src": "3498:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_120000000000000000_by_1",
                                  "typeString": "int_const 120000000000000000"
                                }
                              },
                              {
                                "hexValue": "373330",
                                "id": 1824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3523:8:13",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_63072000_by_1",
                                  "typeString": "int_const 63072000"
                                },
                                "value": "730"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_120000000000000000_by_1",
                                  "typeString": "int_const 120000000000000000"
                                },
                                {
                                  "typeIdentifier": "t_rational_63072000_by_1",
                                  "typeString": "int_const 63072000"
                                }
                              ],
                              "id": 1812,
                              "name": "SalePhaseInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1621,
                              "src": "3434:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SalePhaseInfo_$1621_storage_ptr_$",
                                "typeString": "type(struct ChainSphereTokenICO.SalePhaseInfo storage pointer)"
                              }
                            },
                            "id": 1825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3434:107:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_memory_ptr",
                              "typeString": "struct ChainSphereTokenICO.SalePhaseInfo memory"
                            }
                          },
                          "src": "3399:142:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage",
                            "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage ref"
                          }
                        },
                        "id": 1827,
                        "nodeType": "ExpressionStatement",
                        "src": "3399:142:13"
                      },
                      {
                        "expression": {
                          "id": 1831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1828,
                            "name": "salePhase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1632,
                            "src": "3563:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1829,
                              "name": "SalePhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "3575:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                              }
                            },
                            "id": 1830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3585:10:13",
                            "memberName": "notStarted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1622,
                            "src": "3575:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                            }
                          },
                          "src": "3563:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SalePhase_$1629",
                            "typeString": "enum ChainSphereTokenICO.SalePhase"
                          }
                        },
                        "id": 1832,
                        "nodeType": "ExpressionStatement",
                        "src": "3563:32:13"
                      }
                    ]
                  },
                  "id": 1834,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "436861696e537068657265546f6b656e",
                          "id": 1696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2480:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_092665f14100a34c3eaf96a8e5f8133160cccd3888c4022e1577f48b5ee7eac0",
                            "typeString": "literal_string \"ChainSphereToken\""
                          },
                          "value": "ChainSphereToken"
                        },
                        {
                          "hexValue": "435350",
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2500:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e787dc8da9e82ec78245ab2457ca2f28bc5cea9377e59593b44d1887b71fc556",
                            "typeString": "literal_string \"CSP\""
                          },
                          "value": "CSP"
                        }
                      ],
                      "id": 1698,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1695,
                        "name": "ERC20",
                        "nameLocations": [
                          "2474:5:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 889,
                        "src": "2474:5:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2474:32:13"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1700,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2523:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2527:6:13",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2523:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1702,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1699,
                        "name": "Ownable",
                        "nameLocations": [
                          "2515:7:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2515:7:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2515:19:13"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1694,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1691,
                        "mutability": "mutable",
                        "name": "_usdtERC20",
                        "nameLocation": "2434:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1834,
                        "src": "2426:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1690,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2426:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1693,
                        "mutability": "mutable",
                        "name": "_usdtBEP20",
                        "nameLocation": "2454:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1834,
                        "src": "2446:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2446:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2425:40:13"
                  },
                  "returnParameters": {
                    "id": 1703,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2539:0:13"
                  },
                  "scope": 3077,
                  "src": "2414:1188:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1857,
                    "nodeType": "Block",
                    "src": "3724:109:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1842,
                                "name": "_usdtERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1836,
                                "src": "3742:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1845,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3764:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1844,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3756:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1843,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3756:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3756:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3742:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642061646472657373",
                              "id": 1848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3768:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              },
                              "value": "Invalid address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              }
                            ],
                            "id": 1841,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3734:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3734:52:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1850,
                        "nodeType": "ExpressionStatement",
                        "src": "3734:52:13"
                      },
                      {
                        "expression": {
                          "id": 1855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1851,
                            "name": "usdtERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1581,
                            "src": "3796:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$967",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1853,
                                "name": "_usdtERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1836,
                                "src": "3815:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1852,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "3808:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3808:18:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$967",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3796:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1856,
                        "nodeType": "ExpressionStatement",
                        "src": "3796:30:13"
                      }
                    ]
                  },
                  "functionSelector": "2b3935a6",
                  "id": 1858,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1839,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1838,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3714:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "3714:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3714:9:13"
                    }
                  ],
                  "name": "setERC20USDT",
                  "nameLocation": "3672:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1836,
                        "mutability": "mutable",
                        "name": "_usdtERC20",
                        "nameLocation": "3693:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1858,
                        "src": "3685:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1835,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3685:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3684:20:13"
                  },
                  "returnParameters": {
                    "id": 1840,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3724:0:13"
                  },
                  "scope": 3077,
                  "src": "3663:170:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1881,
                    "nodeType": "Block",
                    "src": "3904:109:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1866,
                                "name": "_usdtBEP20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1860,
                                "src": "3922:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1869,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3944:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1868,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3936:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1867,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3936:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3936:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3922:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642061646472657373",
                              "id": 1872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3948:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              },
                              "value": "Invalid address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              }
                            ],
                            "id": 1865,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3914:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3914:52:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1874,
                        "nodeType": "ExpressionStatement",
                        "src": "3914:52:13"
                      },
                      {
                        "expression": {
                          "id": 1879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1875,
                            "name": "usdtBEP20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1584,
                            "src": "3976:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$967",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1877,
                                "name": "_usdtBEP20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1860,
                                "src": "3995:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1876,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "3988:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3988:18:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$967",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3976:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1880,
                        "nodeType": "ExpressionStatement",
                        "src": "3976:30:13"
                      }
                    ]
                  },
                  "functionSelector": "68819f7a",
                  "id": 1882,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1863,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1862,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3894:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "3894:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3894:9:13"
                    }
                  ],
                  "name": "setBEP20USDT",
                  "nameLocation": "3852:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1861,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1860,
                        "mutability": "mutable",
                        "name": "_usdtBEP20",
                        "nameLocation": "3873:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1882,
                        "src": "3865:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1859,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3865:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3864:20:13"
                  },
                  "returnParameters": {
                    "id": 1864,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3904:0:13"
                  },
                  "scope": 3077,
                  "src": "3843:170:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1898,
                    "nodeType": "Block",
                    "src": "4044:148:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1885,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4075:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1886,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4081:9:13",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4075:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1887,
                                  "name": "icoStart",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1586,
                                  "src": "4094:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4075:27:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1889,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4106:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1890,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4112:9:13",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4106:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1891,
                                  "name": "icoEnd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1588,
                                  "src": "4125:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4106:25:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4075:56:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "49434f206973206e6f7420616374697665",
                              "id": 1894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4145:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_367ec7506a70a9eae997f7a6b5bf3083f21feb40364e08ee0ea7992e26a23c84",
                                "typeString": "literal_string \"ICO is not active\""
                              },
                              "value": "ICO is not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_367ec7506a70a9eae997f7a6b5bf3083f21feb40364e08ee0ea7992e26a23c84",
                                "typeString": "literal_string \"ICO is not active\""
                              }
                            ],
                            "id": 1884,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4054:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4054:120:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1896,
                        "nodeType": "ExpressionStatement",
                        "src": "4054:120:13"
                      },
                      {
                        "id": 1897,
                        "nodeType": "PlaceholderStatement",
                        "src": "4184:1:13"
                      }
                    ]
                  },
                  "id": 1899,
                  "name": "onlyDuringICO",
                  "nameLocation": "4028:13:13",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1883,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4041:2:13"
                  },
                  "src": "4019:173:13",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1918,
                    "nodeType": "Block",
                    "src": "4259:155:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1907,
                                "name": "startTime_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1901,
                                "src": "4290:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 1908,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4303:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1909,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4309:9:13",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4303:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4290:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53746172742074696d65206d75737420626520696e2074686520667574757265",
                              "id": 1911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4332:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466",
                                "typeString": "literal_string \"Start time must be in the future\""
                              },
                              "value": "Start time must be in the future"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466",
                                "typeString": "literal_string \"Start time must be in the future\""
                              }
                            ],
                            "id": 1906,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4269:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4269:107:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1913,
                        "nodeType": "ExpressionStatement",
                        "src": "4269:107:13"
                      },
                      {
                        "expression": {
                          "id": 1916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1914,
                            "name": "icoStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1586,
                            "src": "4386:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1915,
                            "name": "startTime_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1901,
                            "src": "4397:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4386:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1917,
                        "nodeType": "ExpressionStatement",
                        "src": "4386:21:13"
                      }
                    ]
                  },
                  "functionSelector": "3e0a322d",
                  "id": 1919,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1904,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1903,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4249:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4249:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4249:9:13"
                    }
                  ],
                  "name": "setStartTime",
                  "nameLocation": "4207:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1902,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1901,
                        "mutability": "mutable",
                        "name": "startTime_",
                        "nameLocation": "4228:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1919,
                        "src": "4220:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1900,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4220:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4219:20:13"
                  },
                  "returnParameters": {
                    "id": 1905,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4259:0:13"
                  },
                  "scope": 3077,
                  "src": "4198:216:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1937,
                    "nodeType": "Block",
                    "src": "4477:109:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1927,
                                "name": "endTime_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1921,
                                "src": "4495:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 1928,
                                "name": "icoStart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1586,
                                "src": "4506:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4495:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "456e642074696d65206d7573742062652061667465722073746172742074696d65",
                              "id": 1930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4516:35:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
                                "typeString": "literal_string \"End time must be after start time\""
                              },
                              "value": "End time must be after start time"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
                                "typeString": "literal_string \"End time must be after start time\""
                              }
                            ],
                            "id": 1926,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4487:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4487:65:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1932,
                        "nodeType": "ExpressionStatement",
                        "src": "4487:65:13"
                      },
                      {
                        "expression": {
                          "id": 1935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1933,
                            "name": "icoEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1588,
                            "src": "4562:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1934,
                            "name": "endTime_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1921,
                            "src": "4571:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4562:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1936,
                        "nodeType": "ExpressionStatement",
                        "src": "4562:17:13"
                      }
                    ]
                  },
                  "functionSelector": "ccb98ffc",
                  "id": 1938,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1924,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1923,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4467:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4467:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4467:9:13"
                    }
                  ],
                  "name": "setEndTime",
                  "nameLocation": "4429:10:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1922,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1921,
                        "mutability": "mutable",
                        "name": "endTime_",
                        "nameLocation": "4448:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1938,
                        "src": "4440:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1920,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4440:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4439:18:13"
                  },
                  "returnParameters": {
                    "id": 1925,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4477:0:13"
                  },
                  "scope": 3077,
                  "src": "4420:166:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1956,
                    "nodeType": "Block",
                    "src": "4634:121:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1943,
                            "name": "manualPause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1590,
                            "src": "4644:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4658:12:13",
                            "subExpression": {
                              "id": 1944,
                              "name": "manualPause",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "4659:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4644:26:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1947,
                        "nodeType": "ExpressionStatement",
                        "src": "4644:26:13"
                      },
                      {
                        "condition": {
                          "id": 1948,
                          "name": "manualPause",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1590,
                          "src": "4684:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1955,
                        "nodeType": "IfStatement",
                        "src": "4680:69:13",
                        "trueBody": {
                          "id": 1954,
                          "nodeType": "Block",
                          "src": "4697:52:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 1952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1949,
                                  "name": "salePhase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1632,
                                  "src": "4711:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SalePhase_$1629",
                                    "typeString": "enum ChainSphereTokenICO.SalePhase"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1950,
                                    "name": "SalePhase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1629,
                                    "src": "4723:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                      "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                    }
                                  },
                                  "id": 1951,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4733:5:13",
                                  "memberName": "Pause",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1627,
                                  "src": "4723:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SalePhase_$1629",
                                    "typeString": "enum ChainSphereTokenICO.SalePhase"
                                  }
                                },
                                "src": "4711:27:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SalePhase_$1629",
                                  "typeString": "enum ChainSphereTokenICO.SalePhase"
                                }
                              },
                              "id": 1953,
                              "nodeType": "ExpressionStatement",
                              "src": "4711:27:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "388727bc",
                  "id": 1957,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1941,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1940,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4624:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4624:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4624:9:13"
                    }
                  ],
                  "name": "PauseResume",
                  "nameLocation": "4601:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1939,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4612:2:13"
                  },
                  "returnParameters": {
                    "id": 1942,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4634:0:13"
                  },
                  "scope": 3077,
                  "src": "4592:163:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2057,
                    "nodeType": "Block",
                    "src": "4859:634:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1968,
                                    "name": "salePhases",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1638,
                                    "src": "4877:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_struct$_SalePhaseInfo_$1621_storage_$",
                                      "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => struct ChainSphereTokenICO.SalePhaseInfo storage ref)"
                                    }
                                  },
                                  "id": 1970,
                                  "indexExpression": {
                                    "id": 1969,
                                    "name": "phase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1960,
                                    "src": "4888:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_SalePhase_$1629",
                                      "typeString": "enum ChainSphereTokenICO.SalePhase"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4877:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage",
                                    "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage ref"
                                  }
                                },
                                "id": 1971,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4895:15:13",
                                "memberName": "allocatedSupply",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1616,
                                "src": "4877:33:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4913:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4877:37:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642073616c65207068617365",
                              "id": 1974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4916:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_88654903af12fc200846e0118c12a5b8fd492751e8546349593505a4ffcaa05e",
                                "typeString": "literal_string \"Invalid sale phase\""
                              },
                              "value": "Invalid sale phase"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_88654903af12fc200846e0118c12a5b8fd492751e8546349593505a4ffcaa05e",
                                "typeString": "literal_string \"Invalid sale phase\""
                              }
                            ],
                            "id": 1967,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4869:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4869:68:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1976,
                        "nodeType": "ExpressionStatement",
                        "src": "4869:68:13"
                      },
                      {
                        "expression": {
                          "id": 1982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1977,
                                "name": "salePhases",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1638,
                                "src": "4947:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_struct$_SalePhaseInfo_$1621_storage_$",
                                  "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => struct ChainSphereTokenICO.SalePhaseInfo storage ref)"
                                }
                              },
                              "id": 1979,
                              "indexExpression": {
                                "id": 1978,
                                "name": "phase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1960,
                                "src": "4958:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SalePhase_$1629",
                                  "typeString": "enum ChainSphereTokenICO.SalePhase"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4947:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage",
                                "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage ref"
                              }
                            },
                            "id": 1980,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4965:13:13",
                            "memberName": "lockingPeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1620,
                            "src": "4947:31:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1981,
                            "name": "period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1962,
                            "src": "4981:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4947:40:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1983,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:40:13"
                      },
                      {
                        "assignments": [
                          1988
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1988,
                            "mutability": "mutable",
                            "name": "buyers",
                            "nameLocation": "5016:6:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2057,
                            "src": "4998:24:13",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1986,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4998:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1987,
                              "nodeType": "ArrayTypeName",
                              "src": "4998:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1992,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1989,
                            "name": "phaseBuyers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1660,
                            "src": "5025:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_array$_t_address_$dyn_storage_$",
                              "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => address[] storage ref)"
                            }
                          },
                          "id": 1991,
                          "indexExpression": {
                            "id": 1990,
                            "name": "phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1960,
                            "src": "5037:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5025:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4998:45:13"
                      },
                      {
                        "body": {
                          "id": 2055,
                          "nodeType": "Block",
                          "src": "5097:390:13",
                          "statements": [
                            {
                              "assignments": [
                                2008
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2008,
                                  "mutability": "mutable",
                                  "name": "schedules",
                                  "nameLocation": "5137:9:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2055,
                                  "src": "5111:35:13",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                    "typeString": "struct ChainSphereTokenICO.LockingSchedule[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 2006,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 2005,
                                        "name": "LockingSchedule",
                                        "nameLocations": [
                                          "5111:15:13"
                                        ],
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 1648,
                                        "src": "5111:15:13"
                                      },
                                      "referencedDeclaration": 1648,
                                      "src": "5111:15:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockingSchedule_$1648_storage_ptr",
                                        "typeString": "struct ChainSphereTokenICO.LockingSchedule"
                                      }
                                    },
                                    "id": 2007,
                                    "nodeType": "ArrayTypeName",
                                    "src": "5111:17:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                      "typeString": "struct ChainSphereTokenICO.LockingSchedule[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2014,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 2009,
                                  "name": "lockingBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1654,
                                  "src": "5149:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct ChainSphereTokenICO.LockingSchedule storage ref[] storage ref)"
                                  }
                                },
                                "id": 2013,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 2010,
                                    "name": "buyers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1988,
                                    "src": "5165:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  },
                                  "id": 2012,
                                  "indexExpression": {
                                    "id": 2011,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1994,
                                    "src": "5172:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5165:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5149:26:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage",
                                  "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5111:64:13"
                            },
                            {
                              "body": {
                                "id": 2053,
                                "nodeType": "Block",
                                "src": "5236:241:13",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2038,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2031,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 2026,
                                              "name": "schedules",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2008,
                                              "src": "5258:9:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                                "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage pointer"
                                              }
                                            },
                                            "id": 2028,
                                            "indexExpression": {
                                              "id": 2027,
                                              "name": "j",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2016,
                                              "src": "5268:1:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "5258:12:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LockingSchedule_$1648_storage",
                                              "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref"
                                            }
                                          },
                                          "id": 2029,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5271:6:13",
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1640,
                                          "src": "5258:19:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 2030,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5280:1:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "5258:23:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_SalePhase_$1629",
                                          "typeString": "enum ChainSphereTokenICO.SalePhase"
                                        },
                                        "id": 2037,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 2032,
                                              "name": "schedules",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2008,
                                              "src": "5285:9:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                                "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage pointer"
                                              }
                                            },
                                            "id": 2034,
                                            "indexExpression": {
                                              "id": 2033,
                                              "name": "j",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2016,
                                              "src": "5295:1:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "5285:12:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LockingSchedule_$1648_storage",
                                              "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref"
                                            }
                                          },
                                          "id": 2035,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5298:5:13",
                                          "memberName": "phase",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1645,
                                          "src": "5285:18:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_SalePhase_$1629",
                                            "typeString": "enum ChainSphereTokenICO.SalePhase"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "id": 2036,
                                          "name": "phase",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1960,
                                          "src": "5307:5:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_SalePhase_$1629",
                                            "typeString": "enum ChainSphereTokenICO.SalePhase"
                                          }
                                        },
                                        "src": "5285:27:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "5258:54:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2052,
                                    "nodeType": "IfStatement",
                                    "src": "5254:209:13",
                                    "trueBody": {
                                      "id": 2051,
                                      "nodeType": "Block",
                                      "src": "5314:149:13",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2049,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 2039,
                                                  "name": "schedules",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2008,
                                                  "src": "5336:9:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                                    "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage pointer"
                                                  }
                                                },
                                                "id": 2041,
                                                "indexExpression": {
                                                  "id": 2040,
                                                  "name": "j",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2016,
                                                  "src": "5346:1:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "5336:12:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockingSchedule_$1648_storage",
                                                  "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref"
                                                }
                                              },
                                              "id": 2042,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "memberLocation": "5349:10:13",
                                              "memberName": "unlockTime",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1647,
                                              "src": "5336:23:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2048,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 2043,
                                                    "name": "schedules",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2008,
                                                    "src": "5386:9:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                                      "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage pointer"
                                                    }
                                                  },
                                                  "id": 2045,
                                                  "indexExpression": {
                                                    "id": 2044,
                                                    "name": "j",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2016,
                                                    "src": "5396:1:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "5386:12:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LockingSchedule_$1648_storage",
                                                    "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref"
                                                  }
                                                },
                                                "id": 2046,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "5399:12:13",
                                                "memberName": "purchaseTime",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1642,
                                                "src": "5386:25:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "id": 2047,
                                                "name": "period",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1962,
                                                "src": "5438:6:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "5386:58:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5336:108:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2050,
                                          "nodeType": "ExpressionStatement",
                                          "src": "5336:108:13"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2022,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2019,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2016,
                                  "src": "5209:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2020,
                                    "name": "schedules",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2008,
                                    "src": "5213:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                      "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage pointer"
                                    }
                                  },
                                  "id": 2021,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5223:6:13",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "5213:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5209:20:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2054,
                              "initializationExpression": {
                                "assignments": [
                                  2016
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 2016,
                                    "mutability": "mutable",
                                    "name": "j",
                                    "nameLocation": "5202:1:13",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2054,
                                    "src": "5194:9:13",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 2015,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5194:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 2018,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 2017,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5206:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "5194:13:13"
                              },
                              "isSimpleCounterLoop": true,
                              "loopExpression": {
                                "expression": {
                                  "id": 2024,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "5231:3:13",
                                  "subExpression": {
                                    "id": 2023,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2016,
                                    "src": "5231:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2025,
                                "nodeType": "ExpressionStatement",
                                "src": "5231:3:13"
                              },
                              "nodeType": "ForStatement",
                              "src": "5189:288:13"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1997,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1994,
                            "src": "5073:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1998,
                              "name": "buyers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1988,
                              "src": "5077:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 1999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5084:6:13",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5077:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5073:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2056,
                        "initializationExpression": {
                          "assignments": [
                            1994
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1994,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5066:1:13",
                              "nodeType": "VariableDeclaration",
                              "scope": 2056,
                              "src": "5058:9:13",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1993,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5058:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1996,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5070:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5058:13:13"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5092:3:13",
                            "subExpression": {
                              "id": 2001,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1994,
                              "src": "5092:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2003,
                          "nodeType": "ExpressionStatement",
                          "src": "5092:3:13"
                        },
                        "nodeType": "ForStatement",
                        "src": "5053:434:13"
                      }
                    ]
                  },
                  "functionSelector": "79fbe635",
                  "id": 2058,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1965,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1964,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4845:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4845:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4845:9:13"
                    }
                  ],
                  "name": "setLockingPeriod",
                  "nameLocation": "4770:16:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1963,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1960,
                        "mutability": "mutable",
                        "name": "phase",
                        "nameLocation": "4797:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2058,
                        "src": "4787:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SalePhase_$1629",
                          "typeString": "enum ChainSphereTokenICO.SalePhase"
                        },
                        "typeName": {
                          "id": 1959,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1958,
                            "name": "SalePhase",
                            "nameLocations": [
                              "4787:9:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1629,
                            "src": "4787:9:13"
                          },
                          "referencedDeclaration": 1629,
                          "src": "4787:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SalePhase_$1629",
                            "typeString": "enum ChainSphereTokenICO.SalePhase"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1962,
                        "mutability": "mutable",
                        "name": "period",
                        "nameLocation": "4812:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2058,
                        "src": "4804:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1961,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4804:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4786:33:13"
                  },
                  "returnParameters": {
                    "id": 1966,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4859:0:13"
                  },
                  "scope": 3077,
                  "src": "4761:732:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2141,
                    "nodeType": "Block",
                    "src": "5557:726:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5575:12:13",
                              "subExpression": {
                                "id": 2067,
                                "name": "manualPause",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1590,
                                "src": "5576:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206368616e6765207068617365207768696c652049434f20697320706175736564",
                              "id": 2069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5589:41:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39c76d8f5b4e49c7a8fb868c1a51dd15d6619435e16fa4c39f68427c942426c0",
                                "typeString": "literal_string \"Cannot change phase while ICO is paused\""
                              },
                              "value": "Cannot change phase while ICO is paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39c76d8f5b4e49c7a8fb868c1a51dd15d6619435e16fa4c39f68427c942426c0",
                                "typeString": "literal_string \"Cannot change phase while ICO is paused\""
                              }
                            ],
                            "id": 2066,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5567:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5567:64:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2071,
                        "nodeType": "ExpressionStatement",
                        "src": "5567:64:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2104,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2093,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2081,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                                            },
                                            "id": 2076,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2073,
                                              "name": "phase",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2061,
                                              "src": "5663:5:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_SalePhase_$1629",
                                                "typeString": "enum ChainSphereTokenICO.SalePhase"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 2074,
                                                "name": "SalePhase",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1629,
                                                "src": "5672:9:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                                  "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                                }
                                              },
                                              "id": 2075,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "5682:11:13",
                                              "memberName": "Privatesale",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1623,
                                              "src": "5672:21:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_SalePhase_$1629",
                                                "typeString": "enum ChainSphereTokenICO.SalePhase"
                                              }
                                            },
                                            "src": "5663:30:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "&&",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                                            },
                                            "id": 2080,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2077,
                                              "name": "salePhase",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1632,
                                              "src": "5713:9:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_SalePhase_$1629",
                                                "typeString": "enum ChainSphereTokenICO.SalePhase"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 2078,
                                                "name": "SalePhase",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1629,
                                                "src": "5726:9:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                                  "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                                }
                                              },
                                              "id": 2079,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "5736:10:13",
                                              "memberName": "notStarted",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1622,
                                              "src": "5726:20:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_SalePhase_$1629",
                                                "typeString": "enum ChainSphereTokenICO.SalePhase"
                                              }
                                            },
                                            "src": "5713:33:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "5663:83:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "id": 2082,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "5662:85:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2091,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                                            },
                                            "id": 2086,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2083,
                                              "name": "phase",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2061,
                                              "src": "5768:5:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_SalePhase_$1629",
                                                "typeString": "enum ChainSphereTokenICO.SalePhase"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 2084,
                                                "name": "SalePhase",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1629,
                                                "src": "5777:9:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                                  "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                                }
                                              },
                                              "id": 2085,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "5787:8:13",
                                              "memberName": "Presale1",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1624,
                                              "src": "5777:18:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_SalePhase_$1629",
                                                "typeString": "enum ChainSphereTokenICO.SalePhase"
                                              }
                                            },
                                            "src": "5768:27:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "&&",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                                            },
                                            "id": 2090,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2087,
                                              "name": "salePhase",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1632,
                                              "src": "5819:9:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_SalePhase_$1629",
                                                "typeString": "enum ChainSphereTokenICO.SalePhase"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 2088,
                                                "name": "SalePhase",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1629,
                                                "src": "5832:9:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                                  "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                                }
                                              },
                                              "id": 2089,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "5842:11:13",
                                              "memberName": "Privatesale",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1623,
                                              "src": "5832:21:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_SalePhase_$1629",
                                                "typeString": "enum ChainSphereTokenICO.SalePhase"
                                              }
                                            },
                                            "src": "5819:34:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "5768:85:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "id": 2092,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "5767:87:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "5662:192:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 2102,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_SalePhase_$1629",
                                            "typeString": "enum ChainSphereTokenICO.SalePhase"
                                          },
                                          "id": 2097,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2094,
                                            "name": "phase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2061,
                                            "src": "5875:5:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 2095,
                                              "name": "SalePhase",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1629,
                                              "src": "5884:9:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                                "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                              }
                                            },
                                            "id": 2096,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "5894:8:13",
                                            "memberName": "Presale2",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1625,
                                            "src": "5884:18:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                                            }
                                          },
                                          "src": "5875:27:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "&&",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_SalePhase_$1629",
                                            "typeString": "enum ChainSphereTokenICO.SalePhase"
                                          },
                                          "id": 2101,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2098,
                                            "name": "salePhase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1632,
                                            "src": "5926:9:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 2099,
                                              "name": "SalePhase",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1629,
                                              "src": "5939:9:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                                "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                              }
                                            },
                                            "id": 2100,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "5949:8:13",
                                            "memberName": "Presale1",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1624,
                                            "src": "5939:18:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                                            }
                                          },
                                          "src": "5926:31:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "5875:82:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 2103,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5874:84:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "5662:296:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2113,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_SalePhase_$1629",
                                          "typeString": "enum ChainSphereTokenICO.SalePhase"
                                        },
                                        "id": 2108,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2105,
                                          "name": "phase",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2061,
                                          "src": "5979:5:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_SalePhase_$1629",
                                            "typeString": "enum ChainSphereTokenICO.SalePhase"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2106,
                                            "name": "SalePhase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1629,
                                            "src": "5988:9:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                              "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                            }
                                          },
                                          "id": 2107,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "5998:10:13",
                                          "memberName": "Publicsale",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1626,
                                          "src": "5988:20:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_SalePhase_$1629",
                                            "typeString": "enum ChainSphereTokenICO.SalePhase"
                                          }
                                        },
                                        "src": "5979:29:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_SalePhase_$1629",
                                          "typeString": "enum ChainSphereTokenICO.SalePhase"
                                        },
                                        "id": 2112,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2109,
                                          "name": "salePhase",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1632,
                                          "src": "6032:9:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_SalePhase_$1629",
                                            "typeString": "enum ChainSphereTokenICO.SalePhase"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2110,
                                            "name": "SalePhase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1629,
                                            "src": "6045:9:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                              "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                            }
                                          },
                                          "id": 2111,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "6055:8:13",
                                          "memberName": "Presale2",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1625,
                                          "src": "6045:18:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_SalePhase_$1629",
                                            "typeString": "enum ChainSphereTokenICO.SalePhase"
                                          }
                                        },
                                        "src": "6032:31:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "5979:84:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 2114,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5978:86:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5662:402:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2124,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_SalePhase_$1629",
                                        "typeString": "enum ChainSphereTokenICO.SalePhase"
                                      },
                                      "id": 2119,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2116,
                                        "name": "phase",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2061,
                                        "src": "6085:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_SalePhase_$1629",
                                          "typeString": "enum ChainSphereTokenICO.SalePhase"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 2117,
                                          "name": "SalePhase",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1629,
                                          "src": "6094:9:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                            "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                          }
                                        },
                                        "id": 2118,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "6104:5:13",
                                        "memberName": "Ended",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1628,
                                        "src": "6094:15:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_SalePhase_$1629",
                                          "typeString": "enum ChainSphereTokenICO.SalePhase"
                                        }
                                      },
                                      "src": "6085:24:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_SalePhase_$1629",
                                        "typeString": "enum ChainSphereTokenICO.SalePhase"
                                      },
                                      "id": 2123,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2120,
                                        "name": "salePhase",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1632,
                                        "src": "6113:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_SalePhase_$1629",
                                          "typeString": "enum ChainSphereTokenICO.SalePhase"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 2121,
                                          "name": "SalePhase",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1629,
                                          "src": "6126:9:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                            "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                          }
                                        },
                                        "id": 2122,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "6136:10:13",
                                        "memberName": "Publicsale",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1626,
                                        "src": "6126:20:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_SalePhase_$1629",
                                          "typeString": "enum ChainSphereTokenICO.SalePhase"
                                        }
                                      },
                                      "src": "6113:33:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "6085:61:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 2125,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6084:63:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5662:485:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642073616c65207068617365207472616e736974696f6e21",
                              "id": 2127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6161:32:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ce9d0ffee629b43e06da0dec7679e743d92bac6cfb4f22851001b30247e4d159",
                                "typeString": "literal_string \"Invalid sale phase transition!\""
                              },
                              "value": "Invalid sale phase transition!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ce9d0ffee629b43e06da0dec7679e743d92bac6cfb4f22851001b30247e4d159",
                                "typeString": "literal_string \"Invalid sale phase transition!\""
                              }
                            ],
                            "id": 2072,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5641:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5641:562:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2129,
                        "nodeType": "ExpressionStatement",
                        "src": "5641:562:13"
                      },
                      {
                        "expression": {
                          "id": 2132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2130,
                            "name": "salePhase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1632,
                            "src": "6213:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2131,
                            "name": "phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2061,
                            "src": "6225:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                            }
                          },
                          "src": "6213:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SalePhase_$1629",
                            "typeString": "enum ChainSphereTokenICO.SalePhase"
                          }
                        },
                        "id": 2133,
                        "nodeType": "ExpressionStatement",
                        "src": "6213:17:13"
                      },
                      {
                        "expression": {
                          "id": 2139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2134,
                            "name": "tokenPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1594,
                            "src": "6240:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2135,
                                "name": "salePhases",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1638,
                                "src": "6253:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_struct$_SalePhaseInfo_$1621_storage_$",
                                  "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => struct ChainSphereTokenICO.SalePhaseInfo storage ref)"
                                }
                              },
                              "id": 2137,
                              "indexExpression": {
                                "id": 2136,
                                "name": "phase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2061,
                                "src": "6264:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SalePhase_$1629",
                                  "typeString": "enum ChainSphereTokenICO.SalePhase"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6253:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage",
                                "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage ref"
                              }
                            },
                            "id": 2138,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6271:5:13",
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1618,
                            "src": "6253:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6240:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2140,
                        "nodeType": "ExpressionStatement",
                        "src": "6240:36:13"
                      }
                    ]
                  },
                  "functionSelector": "7ad59431",
                  "id": 2142,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2064,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2063,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5547:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5547:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5547:9:13"
                    }
                  ],
                  "name": "setSalePhase",
                  "nameLocation": "5508:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2062,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2061,
                        "mutability": "mutable",
                        "name": "phase",
                        "nameLocation": "5531:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2142,
                        "src": "5521:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SalePhase_$1629",
                          "typeString": "enum ChainSphereTokenICO.SalePhase"
                        },
                        "typeName": {
                          "id": 2060,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2059,
                            "name": "SalePhase",
                            "nameLocations": [
                              "5521:9:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1629,
                            "src": "5521:9:13"
                          },
                          "referencedDeclaration": 1629,
                          "src": "5521:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SalePhase_$1629",
                            "typeString": "enum ChainSphereTokenICO.SalePhase"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5520:17:13"
                  },
                  "returnParameters": {
                    "id": 2065,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5557:0:13"
                  },
                  "scope": 3077,
                  "src": "5499:784:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2412,
                    "nodeType": "Block",
                    "src": "6566:2243:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_SalePhase_$1629",
                                    "typeString": "enum ChainSphereTokenICO.SalePhase"
                                  },
                                  "id": 2160,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2157,
                                    "name": "salePhase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1632,
                                    "src": "6589:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_SalePhase_$1629",
                                      "typeString": "enum ChainSphereTokenICO.SalePhase"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 2158,
                                      "name": "SalePhase",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1629,
                                      "src": "6602:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                        "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                      }
                                    },
                                    "id": 2159,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "6612:10:13",
                                    "memberName": "notStarted",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1622,
                                    "src": "6602:20:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_SalePhase_$1629",
                                      "typeString": "enum ChainSphereTokenICO.SalePhase"
                                    }
                                  },
                                  "src": "6589:33:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_SalePhase_$1629",
                                    "typeString": "enum ChainSphereTokenICO.SalePhase"
                                  },
                                  "id": 2164,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2161,
                                    "name": "salePhase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1632,
                                    "src": "6634:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_SalePhase_$1629",
                                      "typeString": "enum ChainSphereTokenICO.SalePhase"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 2162,
                                      "name": "SalePhase",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1629,
                                      "src": "6647:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                        "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                      }
                                    },
                                    "id": 2163,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "6657:5:13",
                                    "memberName": "Pause",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1627,
                                    "src": "6647:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_SalePhase_$1629",
                                      "typeString": "enum ChainSphereTokenICO.SalePhase"
                                    }
                                  },
                                  "src": "6634:28:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6589:73:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_SalePhase_$1629",
                                  "typeString": "enum ChainSphereTokenICO.SalePhase"
                                },
                                "id": 2169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2166,
                                  "name": "salePhase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1632,
                                  "src": "6674:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SalePhase_$1629",
                                    "typeString": "enum ChainSphereTokenICO.SalePhase"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2167,
                                    "name": "SalePhase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1629,
                                    "src": "6687:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                      "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                    }
                                  },
                                  "id": 2168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "6697:5:13",
                                  "memberName": "Ended",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1628,
                                  "src": "6687:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SalePhase_$1629",
                                    "typeString": "enum ChainSphereTokenICO.SalePhase"
                                  }
                                },
                                "src": "6674:28:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6589:113:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f206163746976652073616c65207068617365",
                              "id": 2171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6712:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7d11dc1ea804974595516496dbfbabf22c58a003b30c22daedcd711fd0c50db2",
                                "typeString": "literal_string \"No active sale phase\""
                              },
                              "value": "No active sale phase"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7d11dc1ea804974595516496dbfbabf22c58a003b30c22daedcd711fd0c50db2",
                                "typeString": "literal_string \"No active sale phase\""
                              }
                            ],
                            "id": 2156,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6572:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6572:168:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2173,
                        "nodeType": "ExpressionStatement",
                        "src": "6572:168:13"
                      },
                      {
                        "assignments": [
                          2176
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2176,
                            "mutability": "mutable",
                            "name": "currentPhase",
                            "nameLocation": "6770:12:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2412,
                            "src": "6748:34:13",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage_ptr",
                              "typeString": "struct ChainSphereTokenICO.SalePhaseInfo"
                            },
                            "typeName": {
                              "id": 2175,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2174,
                                "name": "SalePhaseInfo",
                                "nameLocations": [
                                  "6748:13:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1621,
                                "src": "6748:13:13"
                              },
                              "referencedDeclaration": 1621,
                              "src": "6748:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.SalePhaseInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2180,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2177,
                            "name": "salePhases",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1638,
                            "src": "6785:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_struct$_SalePhaseInfo_$1621_storage_$",
                              "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => struct ChainSphereTokenICO.SalePhaseInfo storage ref)"
                            }
                          },
                          "id": 2179,
                          "indexExpression": {
                            "id": 2178,
                            "name": "salePhase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1632,
                            "src": "6796:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SalePhase_$1629",
                              "typeString": "enum ChainSphereTokenICO.SalePhase"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6785:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage",
                            "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6748:58:13"
                      },
                      {
                        "assignments": [
                          2182
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2182,
                            "mutability": "mutable",
                            "name": "tokenAmount",
                            "nameLocation": "6820:11:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2412,
                            "src": "6812:19:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2181,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6812:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2183,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6812:19:13"
                      },
                      {
                        "assignments": [
                          2185
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2185,
                            "mutability": "mutable",
                            "name": "currentTime",
                            "nameLocation": "6845:11:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2412,
                            "src": "6837:19:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2184,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6837:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2188,
                        "initialValue": {
                          "expression": {
                            "id": 2186,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6859:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6865:9:13",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6859:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6837:37:13"
                      },
                      {
                        "assignments": [
                          2190
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2190,
                            "mutability": "mutable",
                            "name": "unlockTime",
                            "nameLocation": "6888:10:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2412,
                            "src": "6880:18:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2189,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6880:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2195,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2191,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2185,
                            "src": "6901:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 2192,
                              "name": "currentPhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2176,
                              "src": "6915:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage pointer"
                              }
                            },
                            "id": 2193,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6928:13:13",
                            "memberName": "lockingPeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1620,
                            "src": "6915:26:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6901:40:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6880:61:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2196,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6982:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6986:5:13",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "6982:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6994:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6982:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2313,
                          "nodeType": "Block",
                          "src": "7217:669:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2228,
                                      "name": "usdtAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2144,
                                      "src": "7267:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 2229,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7280:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "7267:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5553445420616d6f756e74206d757374206265203e2030",
                                    "id": 2231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7283:25:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0b80b9dc691de8b8dd79e00d718ba6a60bad00a893736df65a53c6ea0931729a",
                                      "typeString": "literal_string \"USDT amount must be > 0\""
                                    },
                                    "value": "USDT amount must be > 0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_0b80b9dc691de8b8dd79e00d718ba6a60bad00a893736df65a53c6ea0931729a",
                                      "typeString": "literal_string \"USDT amount must be > 0\""
                                    }
                                  ],
                                  "id": 2227,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "7259:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7259:50:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2233,
                              "nodeType": "ExpressionStatement",
                              "src": "7259:50:13"
                            },
                            {
                              "expression": {
                                "id": 2244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2234,
                                  "name": "tokenAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2182,
                                  "src": "7321:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2243,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2239,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2235,
                                          "name": "usdtAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2144,
                                          "src": "7336:10:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          },
                                          "id": 2238,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 2236,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7349:2:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "hexValue": "3138",
                                            "id": 2237,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7353:2:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_18_by_1",
                                              "typeString": "int_const 18"
                                            },
                                            "value": "18"
                                          },
                                          "src": "7349:6:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          }
                                        },
                                        "src": "7336:19:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2240,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "7335:21:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 2241,
                                      "name": "currentPhase",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2176,
                                      "src": "7359:12:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage_ptr",
                                        "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage pointer"
                                      }
                                    },
                                    "id": 2242,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7372:5:13",
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1618,
                                    "src": "7359:18:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7335:42:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7321:56:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2245,
                              "nodeType": "ExpressionStatement",
                              "src": "7321:56:13"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_TokenStandard_$1689",
                                  "typeString": "enum ChainSphereTokenICO.TokenStandard"
                                },
                                "id": 2249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2246,
                                  "name": "tokenStandard",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2149,
                                  "src": "7393:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_TokenStandard_$1689",
                                    "typeString": "enum ChainSphereTokenICO.TokenStandard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2247,
                                    "name": "TokenStandard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1689,
                                    "src": "7410:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_TokenStandard_$1689_$",
                                      "typeString": "type(enum ChainSphereTokenICO.TokenStandard)"
                                    }
                                  },
                                  "id": 2248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7424:5:13",
                                  "memberName": "ERC20",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1687,
                                  "src": "7410:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_TokenStandard_$1689",
                                    "typeString": "enum ChainSphereTokenICO.TokenStandard"
                                  }
                                },
                                "src": "7393:36:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_TokenStandard_$1689",
                                    "typeString": "enum ChainSphereTokenICO.TokenStandard"
                                  },
                                  "id": 2279,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2276,
                                    "name": "tokenStandard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2149,
                                    "src": "7608:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_TokenStandard_$1689",
                                      "typeString": "enum ChainSphereTokenICO.TokenStandard"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 2277,
                                      "name": "TokenStandard",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1689,
                                      "src": "7625:13:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_TokenStandard_$1689_$",
                                        "typeString": "type(enum ChainSphereTokenICO.TokenStandard)"
                                      }
                                    },
                                    "id": 2278,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "7639:5:13",
                                    "memberName": "BEP20",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1688,
                                    "src": "7625:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_TokenStandard_$1689",
                                      "typeString": "enum ChainSphereTokenICO.TokenStandard"
                                    }
                                  },
                                  "src": "7608:36:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "id": 2310,
                                  "nodeType": "Block",
                                  "src": "7819:61:13",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "556e737570706f7274656420746f6b656e207374616e64617264",
                                            "id": 2307,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7840:28:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_b087e9d98125a1d8111c6eb186ea6bf11b04ce81de579326ca2583c2ff639a67",
                                              "typeString": "literal_string \"Unsupported token standard\""
                                            },
                                            "value": "Unsupported token standard"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_b087e9d98125a1d8111c6eb186ea6bf11b04ce81de579326ca2583c2ff639a67",
                                              "typeString": "literal_string \"Unsupported token standard\""
                                            }
                                          ],
                                          "id": 2306,
                                          "name": "revert",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -19,
                                            -19
                                          ],
                                          "referencedDeclaration": -19,
                                          "src": "7833:6:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (string memory) pure"
                                          }
                                        },
                                        "id": 2308,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7833:36:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 2309,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7833:36:13"
                                    }
                                  ]
                                },
                                "id": 2311,
                                "nodeType": "IfStatement",
                                "src": "7604:276:13",
                                "trueBody": {
                                  "id": 2305,
                                  "nodeType": "Block",
                                  "src": "7646:167:13",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "id": 2289,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "arguments": [
                                                {
                                                  "id": 2283,
                                                  "name": "usdtBEP20",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1584,
                                                  "src": "7676:9:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$967",
                                                    "typeString": "contract IERC20"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IERC20_$967",
                                                    "typeString": "contract IERC20"
                                                  }
                                                ],
                                                "id": 2282,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "7668:7:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 2281,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "7668:7:13",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 2284,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "7668:18:13",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "!=",
                                            "rightExpression": {
                                              "arguments": [
                                                {
                                                  "hexValue": "30",
                                                  "id": 2287,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "7698:1:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                  },
                                                  "value": "0"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                  }
                                                ],
                                                "id": 2286,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "7690:7:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 2285,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "7690:7:13",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 2288,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "7690:10:13",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "7668:32:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          {
                                            "hexValue": "42455032302055534454206e6f7420736574",
                                            "id": 2290,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7702:20:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_b7283f81e093c38d6e4b838a674475f79843115b77290c6b7bc40293e2d649b7",
                                              "typeString": "literal_string \"BEP20 USDT not set\""
                                            },
                                            "value": "BEP20 USDT not set"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_b7283f81e093c38d6e4b838a674475f79843115b77290c6b7bc40293e2d649b7",
                                              "typeString": "literal_string \"BEP20 USDT not set\""
                                            }
                                          ],
                                          "id": 2280,
                                          "name": "require",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -18,
                                            -18,
                                            -18
                                          ],
                                          "referencedDeclaration": -18,
                                          "src": "7660:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (bool,string memory) pure"
                                          }
                                        },
                                        "id": 2291,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7660:63:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 2292,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7660:63:13"
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 2296,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "7764:3:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 2297,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7768:6:13",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "7764:10:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 2300,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "7784:4:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                                  "typeString": "contract ChainSphereTokenICO"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                                  "typeString": "contract ChainSphereTokenICO"
                                                }
                                              ],
                                              "id": 2299,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "7776:7:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2298,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7776:7:13",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2301,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "7776:13:13",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 2302,
                                            "name": "usdtAmount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2144,
                                            "src": "7791:10:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2293,
                                            "name": "usdtBEP20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1584,
                                            "src": "7737:9:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$967",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 2295,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "7747:16:13",
                                          "memberName": "safeTransferFrom",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1111,
                                          "src": "7737:26:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
                                            "typeString": "function (contract IERC20,address,address,uint256)"
                                          }
                                        },
                                        "id": 2303,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7737:65:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 2304,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7737:65:13"
                                    }
                                  ]
                                }
                              },
                              "id": 2312,
                              "nodeType": "IfStatement",
                              "src": "7389:491:13",
                              "trueBody": {
                                "id": 2275,
                                "nodeType": "Block",
                                "src": "7431:167:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 2259,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "arguments": [
                                              {
                                                "id": 2253,
                                                "name": "usdtERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1581,
                                                "src": "7461:9:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IERC20_$967",
                                                  "typeString": "contract IERC20"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IERC20_$967",
                                                  "typeString": "contract IERC20"
                                                }
                                              ],
                                              "id": 2252,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "7453:7:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2251,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7453:7:13",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2254,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "7453:18:13",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "arguments": [
                                              {
                                                "hexValue": "30",
                                                "id": 2257,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "7483:1:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
                                              "id": 2256,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "7475:7:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2255,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7475:7:13",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2258,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "7475:10:13",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "7453:32:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "45524332302055534454206e6f7420736574",
                                          "id": 2260,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "7487:20:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_ed1ab12c95945c097a9f225ab0c19fa8c4da4058aacbb36ad6de50b990cd95bf",
                                            "typeString": "literal_string \"ERC20 USDT not set\""
                                          },
                                          "value": "ERC20 USDT not set"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_ed1ab12c95945c097a9f225ab0c19fa8c4da4058aacbb36ad6de50b990cd95bf",
                                            "typeString": "literal_string \"ERC20 USDT not set\""
                                          }
                                        ],
                                        "id": 2250,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "7445:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 2261,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7445:63:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2262,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7445:63:13"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 2266,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "7549:3:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 2267,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "7553:6:13",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "7549:10:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 2270,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "7569:4:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                                "typeString": "contract ChainSphereTokenICO"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                                "typeString": "contract ChainSphereTokenICO"
                                              }
                                            ],
                                            "id": 2269,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "7561:7:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 2268,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "7561:7:13",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2271,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7561:13:13",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2272,
                                          "name": "usdtAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2144,
                                          "src": "7576:10:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2263,
                                          "name": "usdtERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1581,
                                          "src": "7522:9:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$967",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2265,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7532:16:13",
                                        "memberName": "safeTransferFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1111,
                                        "src": "7522:26:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
                                          "typeString": "function (contract IERC20,address,address,uint256)"
                                        }
                                      },
                                      "id": 2273,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7522:65:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2274,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7522:65:13"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 2314,
                        "nodeType": "IfStatement",
                        "src": "6978:908:13",
                        "trueBody": {
                          "id": 2226,
                          "nodeType": "Block",
                          "src": "6997:214:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2203,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2201,
                                      "name": "usdtAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2144,
                                      "src": "7046:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 2202,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7060:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "7046:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "43616e6e6f742073656e6420626f746820424e4220616e642055534454",
                                    "id": 2204,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7063:31:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_15d642585bbcd68ac370b23701fba672c0113f5a0a64b6b8af23c9d90baeb0c2",
                                      "typeString": "literal_string \"Cannot send both BNB and USDT\""
                                    },
                                    "value": "Cannot send both BNB and USDT"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_15d642585bbcd68ac370b23701fba672c0113f5a0a64b6b8af23c9d90baeb0c2",
                                      "typeString": "literal_string \"Cannot send both BNB and USDT\""
                                    }
                                  ],
                                  "id": 2200,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "7038:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7038:57:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2206,
                              "nodeType": "ExpressionStatement",
                              "src": "7038:57:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2208,
                                      "name": "bnbPrice_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2146,
                                      "src": "7113:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 2209,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7125:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "7113:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e76616c696420424e42207072696365",
                                    "id": 2211,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7128:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b9ce90c2f35867ef908c7543d8e0d06fe9cda5e9d75107f61c1ae9e861811a13",
                                      "typeString": "literal_string \"Invalid BNB price\""
                                    },
                                    "value": "Invalid BNB price"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_b9ce90c2f35867ef908c7543d8e0d06fe9cda5e9d75107f61c1ae9e861811a13",
                                      "typeString": "literal_string \"Invalid BNB price\""
                                    }
                                  ],
                                  "id": 2207,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "7105:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7105:43:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2213,
                              "nodeType": "ExpressionStatement",
                              "src": "7105:43:13"
                            },
                            {
                              "expression": {
                                "id": 2224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2214,
                                  "name": "tokenAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2182,
                                  "src": "7158:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2223,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2220,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 2215,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "7173:3:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 2216,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "7177:5:13",
                                          "memberName": "value",
                                          "nodeType": "MemberAccess",
                                          "src": "7173:9:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          },
                                          "id": 2219,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 2217,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7185:2:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "hexValue": "3138",
                                            "id": 2218,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7189:2:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_18_by_1",
                                              "typeString": "int_const 18"
                                            },
                                            "value": "18"
                                          },
                                          "src": "7185:6:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          }
                                        },
                                        "src": "7173:18:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2221,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "7172:20:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 2222,
                                    "name": "bnbPrice_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2146,
                                    "src": "7195:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7172:32:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7158:46:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2225,
                              "nodeType": "ExpressionStatement",
                              "src": "7158:46:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2316,
                                "name": "tokenAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2182,
                                "src": "7901:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7915:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7901:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e20616d6f756e74206d757374206265203e2030",
                              "id": 2319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7918:26:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cf04e581e194a11ddca87915e4dbec9232de6e37c2e6506cdecdab8cade26cb3",
                                "typeString": "literal_string \"Token amount must be > 0\""
                              },
                              "value": "Token amount must be > 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cf04e581e194a11ddca87915e4dbec9232de6e37c2e6506cdecdab8cade26cb3",
                                "typeString": "literal_string \"Token amount must be > 0\""
                              }
                            ],
                            "id": 2315,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7893:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7893:52:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2321,
                        "nodeType": "ExpressionStatement",
                        "src": "7893:52:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2323,
                                  "name": "currentPhase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2176,
                                  "src": "7959:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage_ptr",
                                    "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage pointer"
                                  }
                                },
                                "id": 2324,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7972:15:13",
                                "memberName": "allocatedSupply",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1616,
                                "src": "7959:28:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2325,
                                "name": "tokenAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2182,
                                "src": "7991:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7959:43:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420616c6c6f636174656420746f6b656e73",
                              "id": 2327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8004:31:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_00429091442ee7631a848d475adaacdba165c0840f8ec33f4532a6558a7f1ebb",
                                "typeString": "literal_string \"Insufficient allocated tokens\""
                              },
                              "value": "Insufficient allocated tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_00429091442ee7631a848d475adaacdba165c0840f8ec33f4532a6558a7f1ebb",
                                "typeString": "literal_string \"Insufficient allocated tokens\""
                              }
                            ],
                            "id": 2322,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7951:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7951:85:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2329,
                        "nodeType": "ExpressionStatement",
                        "src": "7951:85:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 2332,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67,
                                      "src": "8060:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 2333,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8060:7:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2331,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    2796
                                  ],
                                  "referencedDeclaration": 2796,
                                  "src": "8050:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 2334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8050:18:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2335,
                                "name": "tokenAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2182,
                                "src": "8072:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8050:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e206f776e657227732062616c616e6365",
                              "id": 2337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8085:38:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1505295bfb60d965277b67c8dbfd650305f33c09382dc3bb38bd870758de260e",
                                "typeString": "literal_string \"Not enough tokens in owner's balance\""
                              },
                              "value": "Not enough tokens in owner's balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1505295bfb60d965277b67c8dbfd650305f33c09382dc3bb38bd870758de260e",
                                "typeString": "literal_string \"Not enough tokens in owner's balance\""
                              }
                            ],
                            "id": 2330,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8042:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8042:82:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2339,
                        "nodeType": "ExpressionStatement",
                        "src": "8042:82:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2346,
                                  "name": "tokenAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2182,
                                  "src": "8238:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2347,
                                  "name": "currentTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2185,
                                  "src": "8277:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2348,
                                  "name": "salePhase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1632,
                                  "src": "8309:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SalePhase_$1629",
                                    "typeString": "enum ChainSphereTokenICO.SalePhase"
                                  }
                                },
                                {
                                  "id": 2349,
                                  "name": "unlockTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2190,
                                  "src": "8344:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_SalePhase_$1629",
                                    "typeString": "enum ChainSphereTokenICO.SalePhase"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2345,
                                "name": "LockingSchedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1648,
                                "src": "8200:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_LockingSchedule_$1648_storage_ptr_$",
                                  "typeString": "type(struct ChainSphereTokenICO.LockingSchedule storage pointer)"
                                }
                              },
                              "id": 2350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "8230:6:13",
                                "8263:12:13",
                                "8302:5:13",
                                "8332:10:13"
                              ],
                              "names": [
                                "amount",
                                "purchaseTime",
                                "phase",
                                "unlockTime"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "8200:165:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LockingSchedule_$1648_memory_ptr",
                                "typeString": "struct ChainSphereTokenICO.LockingSchedule memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_LockingSchedule_$1648_memory_ptr",
                                "typeString": "struct ChainSphereTokenICO.LockingSchedule memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2340,
                                "name": "lockingBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1654,
                                "src": "8158:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct ChainSphereTokenICO.LockingSchedule storage ref[] storage ref)"
                                }
                              },
                              "id": 2343,
                              "indexExpression": {
                                "expression": {
                                  "id": 2341,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8174:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8178:6:13",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8174:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8158:27:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage",
                                "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage ref"
                              }
                            },
                            "id": 2344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8186:4:13",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8158:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr_$_t_struct$_LockingSchedule_$1648_storage_$returns$__$attached_to$_t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ChainSphereTokenICO.LockingSchedule storage ref[] storage pointer,struct ChainSphereTokenICO.LockingSchedule storage ref)"
                            }
                          },
                          "id": 2351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8158:213:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2352,
                        "nodeType": "ExpressionStatement",
                        "src": "8158:213:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2357,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8407:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8411:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8407:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2353,
                                "name": "phaseBuyers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1660,
                                "src": "8379:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_SalePhase_$1629_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(enum ChainSphereTokenICO.SalePhase => address[] storage ref)"
                                }
                              },
                              "id": 2355,
                              "indexExpression": {
                                "id": 2354,
                                "name": "salePhase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1632,
                                "src": "8391:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SalePhase_$1629",
                                  "typeString": "enum ChainSphereTokenICO.SalePhase"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8379:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8402:4:13",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8379:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8379:39:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2360,
                        "nodeType": "ExpressionStatement",
                        "src": "8379:39:13"
                      },
                      {
                        "expression": {
                          "id": 2363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2361,
                            "name": "soldTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1592,
                            "src": "8424:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2362,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2182,
                            "src": "8438:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8424:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2364,
                        "nodeType": "ExpressionStatement",
                        "src": "8424:25:13"
                      },
                      {
                        "expression": {
                          "id": 2369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2365,
                              "name": "currentPhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2176,
                              "src": "8455:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SalePhaseInfo_$1621_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.SalePhaseInfo storage pointer"
                              }
                            },
                            "id": 2367,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8468:15:13",
                            "memberName": "allocatedSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1616,
                            "src": "8455:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 2368,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2182,
                            "src": "8487:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8455:43:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2370,
                        "nodeType": "ExpressionStatement",
                        "src": "8455:43:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2372,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "8516:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8516:7:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2374,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8525:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8529:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8525:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2376,
                              "name": "tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2182,
                              "src": "8537:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2371,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "8506:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8506:43:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2378,
                        "nodeType": "ExpressionStatement",
                        "src": "8506:43:13"
                      },
                      {
                        "expression": {
                          "id": 2388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2379,
                                "name": "userDetails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1686,
                                "src": "8557:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSaleDetails_$1681_storage_$",
                                  "typeString": "mapping(address => struct ChainSphereTokenICO.UserSaleDetails storage ref)"
                                }
                              },
                              "id": 2382,
                              "indexExpression": {
                                "expression": {
                                  "id": 2380,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8569:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2381,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8573:6:13",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8569:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8557:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserSaleDetails_$1681_storage",
                                "typeString": "struct ChainSphereTokenICO.UserSaleDetails storage ref"
                              }
                            },
                            "id": 2383,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8581:8:13",
                            "memberName": "saleType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1678,
                            "src": "8557:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2386,
                                "name": "salePhase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1632,
                                "src": "8600:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SalePhase_$1629",
                                  "typeString": "enum ChainSphereTokenICO.SalePhase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_SalePhase_$1629",
                                  "typeString": "enum ChainSphereTokenICO.SalePhase"
                                }
                              ],
                              "id": 2385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8592:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2384,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8592:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8592:18:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8557:53:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2389,
                        "nodeType": "ExpressionStatement",
                        "src": "8557:53:13"
                      },
                      {
                        "expression": {
                          "id": 2396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2390,
                                "name": "userDetails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1686,
                                "src": "8616:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSaleDetails_$1681_storage_$",
                                  "typeString": "mapping(address => struct ChainSphereTokenICO.UserSaleDetails storage ref)"
                                }
                              },
                              "id": 2393,
                              "indexExpression": {
                                "expression": {
                                  "id": 2391,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8628:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8632:6:13",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8628:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8616:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserSaleDetails_$1681_storage",
                                "typeString": "struct ChainSphereTokenICO.UserSaleDetails storage ref"
                              }
                            },
                            "id": 2394,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8640:11:13",
                            "memberName": "totalTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1680,
                            "src": "8616:35:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2395,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2182,
                            "src": "8655:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8616:50:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2397,
                        "nodeType": "ExpressionStatement",
                        "src": "8616:50:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2399,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8700:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8704:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8700:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2401,
                                  "name": "usdtAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2144,
                                  "src": "8720:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8733:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "8720:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "expression": {
                                  "id": 2405,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8750:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8754:5:13",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "8750:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "8720:39:13",
                              "trueExpression": {
                                "id": 2404,
                                "name": "usdtAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2144,
                                "src": "8737:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2408,
                              "name": "tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2182,
                              "src": "8769:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2409,
                              "name": "unlockTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2190,
                              "src": "8790:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2398,
                            "name": "TokenBought",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1670,
                            "src": "8679:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256)"
                            }
                          },
                          "id": 2410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8679:127:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2411,
                        "nodeType": "EmitStatement",
                        "src": "8674:132:13"
                      }
                    ]
                  },
                  "functionSelector": "f5e34ac0",
                  "id": 2413,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2152,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2151,
                        "name": "onlyDuringICO",
                        "nameLocations": [
                          "6539:13:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1899,
                        "src": "6539:13:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6539:13:13"
                    },
                    {
                      "id": 2154,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2153,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "6553:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1511,
                        "src": "6553:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6553:12:13"
                    }
                  ],
                  "name": "buyToken",
                  "nameLocation": "6431:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2144,
                        "mutability": "mutable",
                        "name": "usdtAmount",
                        "nameLocation": "6453:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2413,
                        "src": "6445:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6445:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2146,
                        "mutability": "mutable",
                        "name": "bnbPrice_",
                        "nameLocation": "6477:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2413,
                        "src": "6469:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2145,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6469:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2149,
                        "mutability": "mutable",
                        "name": "tokenStandard",
                        "nameLocation": "6506:13:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2413,
                        "src": "6492:27:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TokenStandard_$1689",
                          "typeString": "enum ChainSphereTokenICO.TokenStandard"
                        },
                        "typeName": {
                          "id": 2148,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2147,
                            "name": "TokenStandard",
                            "nameLocations": [
                              "6492:13:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1689,
                            "src": "6492:13:13"
                          },
                          "referencedDeclaration": 1689,
                          "src": "6492:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TokenStandard_$1689",
                            "typeString": "enum ChainSphereTokenICO.TokenStandard"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6439:82:13"
                  },
                  "returnParameters": {
                    "id": 2155,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6566:0:13"
                  },
                  "scope": 3077,
                  "src": "6422:2387:13",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2488,
                    "nodeType": "Block",
                    "src": "8860:582:13",
                    "statements": [
                      {
                        "assignments": [
                          2422
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2422,
                            "mutability": "mutable",
                            "name": "schedules",
                            "nameLocation": "8896:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2488,
                            "src": "8870:35:13",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                              "typeString": "struct ChainSphereTokenICO.LockingSchedule[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2420,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2419,
                                  "name": "LockingSchedule",
                                  "nameLocations": [
                                    "8870:15:13"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1648,
                                  "src": "8870:15:13"
                                },
                                "referencedDeclaration": 1648,
                                "src": "8870:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LockingSchedule_$1648_storage_ptr",
                                  "typeString": "struct ChainSphereTokenICO.LockingSchedule"
                                }
                              },
                              "id": 2421,
                              "nodeType": "ArrayTypeName",
                              "src": "8870:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.LockingSchedule[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2427,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2423,
                            "name": "lockingBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1654,
                            "src": "8908:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct ChainSphereTokenICO.LockingSchedule storage ref[] storage ref)"
                            }
                          },
                          "id": 2426,
                          "indexExpression": {
                            "expression": {
                              "id": 2424,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8924:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8928:6:13",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8924:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8908:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage",
                            "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8870:65:13"
                      },
                      {
                        "assignments": [
                          2429
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2429,
                            "mutability": "mutable",
                            "name": "totalClaimable",
                            "nameLocation": "8953:14:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2488,
                            "src": "8945:22:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2428,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8945:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2431,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8970:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8945:26:13"
                      },
                      {
                        "body": {
                          "id": 2473,
                          "nodeType": "Block",
                          "src": "9028:284:13",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2456,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2443,
                                        "name": "schedules",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2422,
                                        "src": "9063:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                          "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 2445,
                                      "indexExpression": {
                                        "id": 2444,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2433,
                                        "src": "9073:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9063:12:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockingSchedule_$1648_storage",
                                        "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref"
                                      }
                                    },
                                    "id": 2446,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9076:6:13",
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1640,
                                    "src": "9063:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 2447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9085:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9063:23:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2449,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "9106:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2450,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9112:9:13",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "9106:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2451,
                                        "name": "schedules",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2422,
                                        "src": "9125:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                          "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 2453,
                                      "indexExpression": {
                                        "id": 2452,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2433,
                                        "src": "9135:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9125:12:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockingSchedule_$1648_storage",
                                        "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref"
                                      }
                                    },
                                    "id": 2454,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9138:10:13",
                                    "memberName": "unlockTime",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1647,
                                    "src": "9125:23:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9106:42:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "9063:85:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2472,
                              "nodeType": "IfStatement",
                              "src": "9042:260:13",
                              "trueBody": {
                                "id": 2471,
                                "nodeType": "Block",
                                "src": "9163:139:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2462,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2457,
                                        "name": "totalClaimable",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2429,
                                        "src": "9181:14:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 2458,
                                            "name": "schedules",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2422,
                                            "src": "9199:9:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                              "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage pointer"
                                            }
                                          },
                                          "id": 2460,
                                          "indexExpression": {
                                            "id": 2459,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2433,
                                            "src": "9209:1:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9199:12:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockingSchedule_$1648_storage",
                                            "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref"
                                          }
                                        },
                                        "id": 2461,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "9212:6:13",
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1640,
                                        "src": "9199:19:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9181:37:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2463,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9181:37:13"
                                  },
                                  {
                                    "expression": {
                                      "id": 2469,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 2464,
                                            "name": "schedules",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2422,
                                            "src": "9236:9:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                              "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage pointer"
                                            }
                                          },
                                          "id": 2466,
                                          "indexExpression": {
                                            "id": 2465,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2433,
                                            "src": "9246:1:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9236:12:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockingSchedule_$1648_storage",
                                            "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref"
                                          }
                                        },
                                        "id": 2467,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "9249:6:13",
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1640,
                                        "src": "9236:19:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 2468,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9258:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "9236:23:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2470,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9236:23:13"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2436,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2433,
                            "src": "9001:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2437,
                              "name": "schedules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2422,
                              "src": "9005:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage pointer"
                              }
                            },
                            "id": 2438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9015:6:13",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9005:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9001:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2474,
                        "initializationExpression": {
                          "assignments": [
                            2433
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2433,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8994:1:13",
                              "nodeType": "VariableDeclaration",
                              "scope": 2474,
                              "src": "8986:9:13",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2432,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8986:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2435,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8998:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8986:13:13"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9023:3:13",
                            "subExpression": {
                              "id": 2440,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2433,
                              "src": "9023:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2442,
                          "nodeType": "ExpressionStatement",
                          "src": "9023:3:13"
                        },
                        "nodeType": "ForStatement",
                        "src": "8981:331:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2476,
                                "name": "totalClaimable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2429,
                                "src": "9329:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9346:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9329:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20756e6c6f636b656420746f6b656e7320746f20636c61696d",
                              "id": 2479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9349:29:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d2031e01077560c7c3f8251f9b5d50b56f6a572bd8358d09eb6dc8dfddf4ea42",
                                "typeString": "literal_string \"No unlocked tokens to claim\""
                              },
                              "value": "No unlocked tokens to claim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d2031e01077560c7c3f8251f9b5d50b56f6a572bd8358d09eb6dc8dfddf4ea42",
                                "typeString": "literal_string \"No unlocked tokens to claim\""
                              }
                            ],
                            "id": 2475,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9321:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9321:58:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2481,
                        "nodeType": "ExpressionStatement",
                        "src": "9321:58:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2483,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9408:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9412:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9408:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2485,
                              "name": "totalClaimable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2429,
                              "src": "9420:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2482,
                            "name": "TokensClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1676,
                            "src": "9394:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9394:41:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2487,
                        "nodeType": "EmitStatement",
                        "src": "9389:46:13"
                      }
                    ]
                  },
                  "functionSelector": "48c54b9d",
                  "id": 2489,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2416,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2415,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "8847:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1511,
                        "src": "8847:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8847:12:13"
                    }
                  ],
                  "name": "claimTokens",
                  "nameLocation": "8824:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2414,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8835:2:13"
                  },
                  "returnParameters": {
                    "id": 2417,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8860:0:13"
                  },
                  "scope": 3077,
                  "src": "8815:627:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2543,
                    "nodeType": "Block",
                    "src": "9521:351:13",
                    "statements": [
                      {
                        "assignments": [
                          2497
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2497,
                            "mutability": "mutable",
                            "name": "locked",
                            "nameLocation": "9539:6:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2543,
                            "src": "9531:14:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2496,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9531:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2499,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9548:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9531:18:13"
                      },
                      {
                        "assignments": [
                          2504
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2504,
                            "mutability": "mutable",
                            "name": "schedules",
                            "nameLocation": "9584:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2543,
                            "src": "9559:34:13",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ChainSphereTokenICO.LockingSchedule[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2502,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2501,
                                  "name": "LockingSchedule",
                                  "nameLocations": [
                                    "9559:15:13"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1648,
                                  "src": "9559:15:13"
                                },
                                "referencedDeclaration": 1648,
                                "src": "9559:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LockingSchedule_$1648_storage_ptr",
                                  "typeString": "struct ChainSphereTokenICO.LockingSchedule"
                                }
                              },
                              "id": 2503,
                              "nodeType": "ArrayTypeName",
                              "src": "9559:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.LockingSchedule[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2508,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2505,
                            "name": "lockingBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1654,
                            "src": "9596:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct ChainSphereTokenICO.LockingSchedule storage ref[] storage ref)"
                            }
                          },
                          "id": 2507,
                          "indexExpression": {
                            "id": 2506,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2491,
                            "src": "9612:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9596:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage",
                            "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9559:61:13"
                      },
                      {
                        "body": {
                          "id": 2535,
                          "nodeType": "Block",
                          "src": "9677:145:13",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2520,
                                      "name": "schedules",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2504,
                                      "src": "9712:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct ChainSphereTokenICO.LockingSchedule memory[] memory"
                                      }
                                    },
                                    "id": 2522,
                                    "indexExpression": {
                                      "id": 2521,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2510,
                                      "src": "9722:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9712:12:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_LockingSchedule_$1648_memory_ptr",
                                      "typeString": "struct ChainSphereTokenICO.LockingSchedule memory"
                                    }
                                  },
                                  "id": 2523,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9725:6:13",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1640,
                                  "src": "9712:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2524,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9734:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9712:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2534,
                              "nodeType": "IfStatement",
                              "src": "9691:121:13",
                              "trueBody": {
                                "id": 2533,
                                "nodeType": "Block",
                                "src": "9750:62:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2531,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2526,
                                        "name": "locked",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2497,
                                        "src": "9768:6:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 2527,
                                            "name": "schedules",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2504,
                                            "src": "9778:9:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct ChainSphereTokenICO.LockingSchedule memory[] memory"
                                            }
                                          },
                                          "id": 2529,
                                          "indexExpression": {
                                            "id": 2528,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2510,
                                            "src": "9788:1:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9778:12:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockingSchedule_$1648_memory_ptr",
                                            "typeString": "struct ChainSphereTokenICO.LockingSchedule memory"
                                          }
                                        },
                                        "id": 2530,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "9791:6:13",
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1640,
                                        "src": "9778:19:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9768:29:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2532,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9768:29:13"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2513,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2510,
                            "src": "9650:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2514,
                              "name": "schedules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2504,
                              "src": "9654:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ChainSphereTokenICO.LockingSchedule memory[] memory"
                              }
                            },
                            "id": 2515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9664:6:13",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9654:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9650:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2536,
                        "initializationExpression": {
                          "assignments": [
                            2510
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2510,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9643:1:13",
                              "nodeType": "VariableDeclaration",
                              "scope": 2536,
                              "src": "9635:9:13",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2509,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9635:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2512,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9647:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9635:13:13"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9672:3:13",
                            "subExpression": {
                              "id": 2517,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2510,
                              "src": "9672:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2519,
                          "nodeType": "ExpressionStatement",
                          "src": "9672:3:13"
                        },
                        "nodeType": "ForStatement",
                        "src": "9630:192:13"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2538,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2491,
                                "src": "9848:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2537,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                2796
                              ],
                              "referencedDeclaration": 2796,
                              "src": "9838:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 2539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9838:18:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2540,
                            "name": "locked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2497,
                            "src": "9859:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9838:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2495,
                        "id": 2542,
                        "nodeType": "Return",
                        "src": "9831:34:13"
                      }
                    ]
                  },
                  "functionSelector": "a0821be3",
                  "id": 2544,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "availableBalance",
                  "nameLocation": "9457:16:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2492,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2491,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "9482:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2544,
                        "src": "9474:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2490,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9474:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9473:17:13"
                  },
                  "returnParameters": {
                    "id": 2495,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2494,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2544,
                        "src": "9512:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2493,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9512:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9511:9:13"
                  },
                  "scope": 3077,
                  "src": "9448:424:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2584,
                    "nodeType": "Block",
                    "src": "9939:360:13",
                    "statements": [
                      {
                        "condition": {
                          "id": 2549,
                          "name": "manualPause",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1590,
                          "src": "9953:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2552,
                        "nodeType": "IfStatement",
                        "src": "9949:57:13",
                        "trueBody": {
                          "expression": {
                            "hexValue": "49434f206973206d616e75616c6c7920706175736564206279206f776e6572",
                            "id": 2550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9973:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0fa6aa1d9a55a7c91bdc015513eccadb0f0a697efa3068bc9ce3f90528edd852",
                              "typeString": "literal_string \"ICO is manually paused by owner\""
                            },
                            "value": "ICO is manually paused by owner"
                          },
                          "functionReturnParameters": 2548,
                          "id": 2551,
                          "nodeType": "Return",
                          "src": "9966:40:13"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2553,
                              "name": "icoStart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1586,
                              "src": "10020:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10032:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10020:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2556,
                              "name": "icoEnd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1588,
                              "src": "10037:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10047:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10037:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10020:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2562,
                        "nodeType": "IfStatement",
                        "src": "10016:66:13",
                        "trueBody": {
                          "expression": {
                            "hexValue": "49434f20686173206e6f74207374617274656420796574",
                            "id": 2560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10057:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_91ccb575b310c942c944d0a15b71a61adc54aea9144215afa2a67fcf2187578d",
                              "typeString": "literal_string \"ICO has not started yet\""
                            },
                            "value": "ICO has not started yet"
                          },
                          "functionReturnParameters": 2548,
                          "id": 2561,
                          "nodeType": "Return",
                          "src": "10050:32:13"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2563,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10096:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10102:9:13",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "10096:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 2565,
                              "name": "icoStart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1586,
                              "src": "10115:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10096:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2567,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10127:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10133:9:13",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "10127:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "id": 2569,
                              "name": "icoEnd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1588,
                              "src": "10146:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10127:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10096:56:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2574,
                        "nodeType": "IfStatement",
                        "src": "10092:96:13",
                        "trueBody": {
                          "expression": {
                            "hexValue": "49434f20697320616374697665",
                            "id": 2572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10173:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ab38cccec5b233db2209289d07d41d3c2ca87fab98ad553c6cc1d675875b44cd",
                              "typeString": "literal_string \"ICO is active\""
                            },
                            "value": "ICO is active"
                          },
                          "functionReturnParameters": 2548,
                          "id": 2573,
                          "nodeType": "Return",
                          "src": "10166:22:13"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2575,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10202:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10208:9:13",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10202:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 2577,
                            "name": "icoEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1588,
                            "src": "10220:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10202:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2581,
                        "nodeType": "IfStatement",
                        "src": "10198:52:13",
                        "trueBody": {
                          "expression": {
                            "hexValue": "49434f2068617320656e646564",
                            "id": 2579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10235:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4",
                              "typeString": "literal_string \"ICO has ended\""
                            },
                            "value": "ICO has ended"
                          },
                          "functionReturnParameters": 2548,
                          "id": 2580,
                          "nodeType": "Return",
                          "src": "10228:22:13"
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "49434f20686173206e6f74207374617274656420796574",
                          "id": 2582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10267:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_91ccb575b310c942c944d0a15b71a61adc54aea9144215afa2a67fcf2187578d",
                            "typeString": "literal_string \"ICO has not started yet\""
                          },
                          "value": "ICO has not started yet"
                        },
                        "functionReturnParameters": 2548,
                        "id": 2583,
                        "nodeType": "Return",
                        "src": "10260:32:13"
                      }
                    ]
                  },
                  "functionSelector": "3b7104f2",
                  "id": 2585,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkStatus",
                  "nameLocation": "9887:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2545,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9898:2:13"
                  },
                  "returnParameters": {
                    "id": 2548,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2547,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2585,
                        "src": "9924:13:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2546,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9924:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9923:15:13"
                  },
                  "scope": 3077,
                  "src": "9878:421:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    499
                  ],
                  "body": {
                    "id": 2611,
                    "nodeType": "Block",
                    "src": "10489:214:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2597,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "10537:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2598,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10541:6:13",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "10537:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2596,
                                  "name": "availableBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2544,
                                  "src": "10520:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 2599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10520:28:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2600,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2589,
                                "src": "10552:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10520:38:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420756e6c6f636b65642062616c616e6365206265636175736520796f752068617665206e6f7420636c61696d656420796574",
                              "id": 2602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10572:64:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0b5de0afe3600c43409089133cfebbebd4d6d840fb9939fea08da2303f15c8a6",
                                "typeString": "literal_string \"Insufficient unlocked balance because you have not claimed yet\""
                              },
                              "value": "Insufficient unlocked balance because you have not claimed yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0b5de0afe3600c43409089133cfebbebd4d6d840fb9939fea08da2303f15c8a6",
                                "typeString": "literal_string \"Insufficient unlocked balance because you have not claimed yet\""
                              }
                            ],
                            "id": 2595,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10499:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10499:147:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2604,
                        "nodeType": "ExpressionStatement",
                        "src": "10499:147:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2607,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2587,
                              "src": "10678:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2608,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2589,
                              "src": "10689:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2605,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "10663:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ChainSphereTokenICO_$3077_$",
                                "typeString": "type(contract super ChainSphereTokenICO)"
                              }
                            },
                            "id": 2606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10669:8:13",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 499,
                            "src": "10663:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 2609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10663:33:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2594,
                        "id": 2610,
                        "nodeType": "Return",
                        "src": "10656:40:13"
                      }
                    ]
                  },
                  "functionSelector": "a9059cbb",
                  "id": 2612,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "10386:8:13",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2591,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "10453:8:13"
                  },
                  "parameters": {
                    "id": 2590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2587,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "10403:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2612,
                        "src": "10395:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2586,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10395:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2589,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "10422:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2612,
                        "src": "10414:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2588,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10414:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10394:35:13"
                  },
                  "returnParameters": {
                    "id": 2594,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2593,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2612,
                        "src": "10479:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2592,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10479:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10478:6:13"
                  },
                  "scope": 3077,
                  "src": "10377:326:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    572
                  ],
                  "body": {
                    "id": 2640,
                    "nodeType": "Block",
                    "src": "10843:214:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 2626,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2614,
                                    "src": "10891:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2625,
                                  "name": "availableBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2544,
                                  "src": "10874:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 2627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10874:24:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2628,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2618,
                                "src": "10902:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10874:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f7520746f6b656e7320617265207374696c6c206c6f636b6564206f7220796f7520686176656e277420636c61696d656420796574",
                              "id": 2630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10922:56:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5be6e900a668d818c08842d09113ee42643fa0167a40063488b360fc70d17796",
                                "typeString": "literal_string \"You tokens are still locked or you haven't claimed yet\""
                              },
                              "value": "You tokens are still locked or you haven't claimed yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5be6e900a668d818c08842d09113ee42643fa0167a40063488b360fc70d17796",
                                "typeString": "literal_string \"You tokens are still locked or you haven't claimed yet\""
                              }
                            ],
                            "id": 2624,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10853:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10853:135:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2632,
                        "nodeType": "ExpressionStatement",
                        "src": "10853:135:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2635,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2614,
                              "src": "11024:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2636,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2616,
                              "src": "11032:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2637,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2618,
                              "src": "11043:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2633,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "11005:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ChainSphereTokenICO_$3077_$",
                                "typeString": "type(contract super ChainSphereTokenICO)"
                              }
                            },
                            "id": 2634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11011:12:13",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 572,
                            "src": "11005:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 2638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11005:45:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2623,
                        "id": 2639,
                        "nodeType": "Return",
                        "src": "10998:52:13"
                      }
                    ]
                  },
                  "functionSelector": "23b872dd",
                  "id": 2641,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "10718:12:13",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2620,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "10819:8:13"
                  },
                  "parameters": {
                    "id": 2619,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2614,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "10748:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2641,
                        "src": "10740:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2613,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10740:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2616,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "10772:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2641,
                        "src": "10764:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2615,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10764:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2618,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "10799:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2641,
                        "src": "10791:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2617,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10791:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10730:81:13"
                  },
                  "returnParameters": {
                    "id": 2623,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2622,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2641,
                        "src": "10837:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2621,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10837:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10836:6:13"
                  },
                  "scope": 3077,
                  "src": "10709:348:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2689,
                    "nodeType": "Block",
                    "src": "11163:363:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 2652,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67,
                                      "src": "11191:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 2653,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11191:7:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2651,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    2796
                                  ],
                                  "referencedDeclaration": 2796,
                                  "src": "11181:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 2654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11181:18:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2655,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2645,
                                "src": "11203:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11181:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f75676820746f6b656e73",
                              "id": 2657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11211:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                                "typeString": "literal_string \"Not enough tokens\""
                              },
                              "value": "Not enough tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                                "typeString": "literal_string \"Not enough tokens\""
                              }
                            ],
                            "id": 2650,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11173:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11173:58:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2659,
                        "nodeType": "ExpressionStatement",
                        "src": "11173:58:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2661,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "11251:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11251:7:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2665,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "11268:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                    "typeString": "contract ChainSphereTokenICO"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                    "typeString": "contract ChainSphereTokenICO"
                                  }
                                ],
                                "id": 2664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11260:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2663,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11260:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11260:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2667,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2645,
                              "src": "11275:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2660,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "11241:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11241:41:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2669,
                        "nodeType": "ExpressionStatement",
                        "src": "11241:41:13"
                      },
                      {
                        "expression": {
                          "id": 2687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2670,
                              "name": "vestingSchedules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1614,
                              "src": "11293:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1609_storage_$",
                                "typeString": "mapping(address => struct ChainSphereTokenICO.VestingSchedule storage ref)"
                              }
                            },
                            "id": 2672,
                            "indexExpression": {
                              "id": 2671,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2643,
                              "src": "11310:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11293:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage",
                              "typeString": "struct ChainSphereTokenICO.VestingSchedule storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2674,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2645,
                                "src": "11366:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11401:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2676,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "11429:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2677,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11435:9:13",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "11429:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2678,
                                  "name": "lockDuration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1597,
                                  "src": "11447:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11429:30:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2682,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2680,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2645,
                                        "src": "11490:6:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "3230",
                                        "id": 2681,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11499:2:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_20_by_1",
                                          "typeString": "int_const 20"
                                        },
                                        "value": "20"
                                      },
                                      "src": "11490:11:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2683,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "11489:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 2684,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11505:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "11489:19:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2673,
                              "name": "VestingSchedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1609,
                              "src": "11323:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_VestingSchedule_$1609_storage_ptr_$",
                                "typeString": "type(struct ChainSphereTokenICO.VestingSchedule storage pointer)"
                              }
                            },
                            "id": 2686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "11353:11:13",
                              "11386:13:13",
                              "11416:11:13",
                              "11473:14:13"
                            ],
                            "names": [
                              "totalAmount",
                              "claimedAmount",
                              "lockEndTime",
                              "unlockPerBatch"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "11323:196:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$1609_memory_ptr",
                              "typeString": "struct ChainSphereTokenICO.VestingSchedule memory"
                            }
                          },
                          "src": "11293:226:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage",
                            "typeString": "struct ChainSphereTokenICO.VestingSchedule storage ref"
                          }
                        },
                        "id": 2688,
                        "nodeType": "ExpressionStatement",
                        "src": "11293:226:13"
                      }
                    ]
                  },
                  "functionSelector": "bfdc33a8",
                  "id": 2690,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2648,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2647,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "11149:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "11149:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11149:9:13"
                    }
                  ],
                  "name": "transferWithLock",
                  "nameLocation": "11072:16:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2643,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "11097:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2690,
                        "src": "11089:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11089:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2645,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "11116:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2690,
                        "src": "11108:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2644,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11108:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11088:35:13"
                  },
                  "returnParameters": {
                    "id": 2649,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11163:0:13"
                  },
                  "scope": 3077,
                  "src": "11063:463:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2750,
                    "nodeType": "Block",
                    "src": "11583:511:13",
                    "statements": [
                      {
                        "assignments": [
                          2697
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2697,
                            "mutability": "mutable",
                            "name": "schedule",
                            "nameLocation": "11617:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2750,
                            "src": "11593:32:13",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                              "typeString": "struct ChainSphereTokenICO.VestingSchedule"
                            },
                            "typeName": {
                              "id": 2696,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2695,
                                "name": "VestingSchedule",
                                "nameLocations": [
                                  "11593:15:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1609,
                                "src": "11593:15:13"
                              },
                              "referencedDeclaration": 1609,
                              "src": "11593:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2702,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2698,
                            "name": "vestingSchedules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1614,
                            "src": "11628:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1609_storage_$",
                              "typeString": "mapping(address => struct ChainSphereTokenICO.VestingSchedule storage ref)"
                            }
                          },
                          "id": 2701,
                          "indexExpression": {
                            "expression": {
                              "id": 2699,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11645:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11649:6:13",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11645:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11628:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage",
                            "typeString": "struct ChainSphereTokenICO.VestingSchedule storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11593:63:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2704,
                                  "name": "schedule",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2697,
                                  "src": "11674:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                    "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                                  }
                                },
                                "id": 2705,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11683:11:13",
                                "memberName": "totalAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1602,
                                "src": "11674:20:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11697:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11674:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20746f6b656e7320616c6c6f636174656420666f722076657374696e67",
                              "id": 2708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11700:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cb44acdb592e2951a4707cd5973c8b482b2606c64543f421646f9d65c918c5ae",
                                "typeString": "literal_string \"No tokens allocated for vesting\""
                              },
                              "value": "No tokens allocated for vesting"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cb44acdb592e2951a4707cd5973c8b482b2606c64543f421646f9d65c918c5ae",
                                "typeString": "literal_string \"No tokens allocated for vesting\""
                              }
                            ],
                            "id": 2703,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11666:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11666:68:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2710,
                        "nodeType": "ExpressionStatement",
                        "src": "11666:68:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2712,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "11765:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11771:9:13",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "11765:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2714,
                                  "name": "schedule",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2697,
                                  "src": "11784:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                    "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                                  }
                                },
                                "id": 2715,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11793:11:13",
                                "memberName": "lockEndTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1606,
                                "src": "11784:20:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11765:39:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6f636b20706572696f64206973207374696c6c20616374697665",
                              "id": 2717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11818:29:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_597283ea9403c17c9d96d2c5b8574fe9c2901e5760479a1c0ab07f857d01d2a8",
                                "typeString": "literal_string \"Lock period is still active\""
                              },
                              "value": "Lock period is still active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_597283ea9403c17c9d96d2c5b8574fe9c2901e5760479a1c0ab07f857d01d2a8",
                                "typeString": "literal_string \"Lock period is still active\""
                              }
                            ],
                            "id": 2711,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11744:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11744:113:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2719,
                        "nodeType": "ExpressionStatement",
                        "src": "11744:113:13"
                      },
                      {
                        "assignments": [
                          2721
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2721,
                            "mutability": "mutable",
                            "name": "unlocked",
                            "nameLocation": "11876:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2750,
                            "src": "11868:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2720,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11868:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2726,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2723,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11905:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11909:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11905:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2722,
                            "name": "getUnlockedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2913,
                            "src": "11887:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11887:29:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11868:48:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2728,
                                "name": "unlocked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2721,
                                "src": "11934:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11945:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11934:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2076657374656420746f6b656e7320617661696c61626c6520746f20636c61696d",
                              "id": 2731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11948:37:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bbf853973782623a2055c32fcc1908d9f9ae78ac6ddccbb0e4d40a4f2f78f108",
                                "typeString": "literal_string \"No vested tokens available to claim\""
                              },
                              "value": "No vested tokens available to claim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bbf853973782623a2055c32fcc1908d9f9ae78ac6ddccbb0e4d40a4f2f78f108",
                                "typeString": "literal_string \"No vested tokens available to claim\""
                              }
                            ],
                            "id": 2727,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11926:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11926:60:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2733,
                        "nodeType": "ExpressionStatement",
                        "src": "11926:60:13"
                      },
                      {
                        "expression": {
                          "id": 2738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2734,
                              "name": "schedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2697,
                              "src": "11997:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                              }
                            },
                            "id": 2736,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "12006:13:13",
                            "memberName": "claimedAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1604,
                            "src": "11997:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2737,
                            "name": "unlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2721,
                            "src": "12023:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11997:34:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2739,
                        "nodeType": "ExpressionStatement",
                        "src": "11997:34:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2743,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12059:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                    "typeString": "contract ChainSphereTokenICO"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                    "typeString": "contract ChainSphereTokenICO"
                                  }
                                ],
                                "id": 2742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12051:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2741,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12051:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12051:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2745,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12066:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12070:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12066:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2747,
                              "name": "unlocked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2721,
                              "src": "12078:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2740,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "12041:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12041:46:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2749,
                        "nodeType": "ExpressionStatement",
                        "src": "12041:46:13"
                      }
                    ]
                  },
                  "functionSelector": "e74f3fbb",
                  "id": 2751,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2693,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2692,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "11570:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1511,
                        "src": "11570:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11570:12:13"
                    }
                  ],
                  "name": "claimVestedTokens",
                  "nameLocation": "11541:17:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2691,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11558:2:13"
                  },
                  "returnParameters": {
                    "id": 2694,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11583:0:13"
                  },
                  "scope": 3077,
                  "src": "11532:562:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    475
                  ],
                  "body": {
                    "id": 2795,
                    "nodeType": "Block",
                    "src": "12175:412:13",
                    "statements": [
                      {
                        "assignments": [
                          2760
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2760,
                            "mutability": "mutable",
                            "name": "unlockedBalance",
                            "nameLocation": "12193:15:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2795,
                            "src": "12185:23:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2759,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12185:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2765,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2763,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2753,
                              "src": "12227:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2761,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "12211:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ChainSphereTokenICO_$3077_$",
                                "typeString": "type(contract super ChainSphereTokenICO)"
                              }
                            },
                            "id": 2762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12217:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 475,
                            "src": "12211:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12211:24:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12185:50:13"
                      },
                      {
                        "assignments": [
                          2768
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2768,
                            "mutability": "mutable",
                            "name": "schedule",
                            "nameLocation": "12339:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2795,
                            "src": "12315:32:13",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                              "typeString": "struct ChainSphereTokenICO.VestingSchedule"
                            },
                            "typeName": {
                              "id": 2767,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2766,
                                "name": "VestingSchedule",
                                "nameLocations": [
                                  "12315:15:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1609,
                                "src": "12315:15:13"
                              },
                              "referencedDeclaration": 1609,
                              "src": "12315:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2772,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2769,
                            "name": "vestingSchedules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1614,
                            "src": "12350:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1609_storage_$",
                              "typeString": "mapping(address => struct ChainSphereTokenICO.VestingSchedule storage ref)"
                            }
                          },
                          "id": 2771,
                          "indexExpression": {
                            "id": 2770,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2753,
                            "src": "12367:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12350:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage",
                            "typeString": "struct ChainSphereTokenICO.VestingSchedule storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12315:60:13"
                      },
                      {
                        "assignments": [
                          2774
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2774,
                            "mutability": "mutable",
                            "name": "lockedTokens",
                            "nameLocation": "12393:12:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2795,
                            "src": "12385:20:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2773,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12385:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2776,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12408:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12385:24:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2777,
                              "name": "schedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2768,
                              "src": "12423:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                              }
                            },
                            "id": 2778,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12432:11:13",
                            "memberName": "totalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1602,
                            "src": "12423:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12446:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12423:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2790,
                        "nodeType": "IfStatement",
                        "src": "12419:115:13",
                        "trueBody": {
                          "id": 2789,
                          "nodeType": "Block",
                          "src": "12449:85:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 2787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2781,
                                  "name": "lockedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2774,
                                  "src": "12463:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2786,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2782,
                                      "name": "schedule",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2768,
                                      "src": "12478:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                        "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                                      }
                                    },
                                    "id": 2783,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12487:11:13",
                                    "memberName": "totalAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1602,
                                    "src": "12478:20:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 2784,
                                      "name": "schedule",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2768,
                                      "src": "12501:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                        "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                                      }
                                    },
                                    "id": 2785,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12510:13:13",
                                    "memberName": "claimedAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1604,
                                    "src": "12501:22:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12478:45:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12463:60:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2788,
                              "nodeType": "ExpressionStatement",
                              "src": "12463:60:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2791,
                            "name": "unlockedBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2760,
                            "src": "12550:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2792,
                            "name": "lockedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2774,
                            "src": "12568:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12550:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2758,
                        "id": 2794,
                        "nodeType": "Return",
                        "src": "12543:37:13"
                      }
                    ]
                  },
                  "functionSelector": "70a08231",
                  "id": 2796,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "12109:9:13",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2755,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "12148:8:13"
                  },
                  "parameters": {
                    "id": 2754,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2753,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "12127:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2796,
                        "src": "12119:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12119:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12118:17:13"
                  },
                  "returnParameters": {
                    "id": 2758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2757,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2796,
                        "src": "12166:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12166:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12165:9:13"
                  },
                  "scope": 3077,
                  "src": "12100:487:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2854,
                    "nodeType": "Block",
                    "src": "12662:592:13",
                    "statements": [
                      {
                        "assignments": [
                          2805
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2805,
                            "mutability": "mutable",
                            "name": "schedule",
                            "nameLocation": "12696:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2854,
                            "src": "12672:32:13",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                              "typeString": "struct ChainSphereTokenICO.VestingSchedule"
                            },
                            "typeName": {
                              "id": 2804,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2803,
                                "name": "VestingSchedule",
                                "nameLocations": [
                                  "12672:15:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1609,
                                "src": "12672:15:13"
                              },
                              "referencedDeclaration": 1609,
                              "src": "12672:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2809,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2806,
                            "name": "vestingSchedules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1614,
                            "src": "12707:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1609_storage_$",
                              "typeString": "mapping(address => struct ChainSphereTokenICO.VestingSchedule storage ref)"
                            }
                          },
                          "id": 2808,
                          "indexExpression": {
                            "id": 2807,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2798,
                            "src": "12724:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12707:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage",
                            "typeString": "struct ChainSphereTokenICO.VestingSchedule storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12672:57:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2810,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12743:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12749:9:13",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12743:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2812,
                              "name": "schedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2805,
                              "src": "12761:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                              }
                            },
                            "id": 2813,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12770:11:13",
                            "memberName": "lockEndTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1606,
                            "src": "12761:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12743:38:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2819,
                        "nodeType": "IfStatement",
                        "src": "12739:96:13",
                        "trueBody": {
                          "id": 2818,
                          "nodeType": "Block",
                          "src": "12783:52:13",
                          "statements": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 2815,
                                  "name": "schedule",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2805,
                                  "src": "12804:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                    "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                                  }
                                },
                                "id": 2816,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12813:11:13",
                                "memberName": "totalAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1602,
                                "src": "12804:20:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 2802,
                              "id": 2817,
                              "nodeType": "Return",
                              "src": "12797:27:13"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2821
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2821,
                            "mutability": "mutable",
                            "name": "intervalsPassed",
                            "nameLocation": "12931:15:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2854,
                            "src": "12923:23:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2820,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12923:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2830,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2822,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "12950:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12956:9:13",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "12950:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2824,
                                    "name": "schedule",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2805,
                                    "src": "12968:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                      "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                                    }
                                  },
                                  "id": 2825,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12977:11:13",
                                  "memberName": "lockEndTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1606,
                                  "src": "12968:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12950:38:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2827,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12949:40:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2828,
                            "name": "vestingInterval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1600,
                            "src": "12992:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12949:58:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12923:84:13"
                      },
                      {
                        "assignments": [
                          2832
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2832,
                            "mutability": "mutable",
                            "name": "totalUnlocked",
                            "nameLocation": "13025:13:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2854,
                            "src": "13017:21:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2831,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13017:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2837,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2833,
                            "name": "intervalsPassed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2821,
                            "src": "13041:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 2834,
                              "name": "schedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2805,
                              "src": "13059:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                              }
                            },
                            "id": 2835,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13068:14:13",
                            "memberName": "unlockPerBatch",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1608,
                            "src": "13059:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13041:41:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13017:65:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2838,
                            "name": "totalUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2832,
                            "src": "13096:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 2839,
                              "name": "schedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2805,
                              "src": "13112:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                              }
                            },
                            "id": 2840,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13121:11:13",
                            "memberName": "totalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1602,
                            "src": "13112:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13096:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2848,
                        "nodeType": "IfStatement",
                        "src": "13092:103:13",
                        "trueBody": {
                          "id": 2847,
                          "nodeType": "Block",
                          "src": "13134:61:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 2845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2842,
                                  "name": "totalUnlocked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2832,
                                  "src": "13148:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2843,
                                    "name": "schedule",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2805,
                                    "src": "13164:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                      "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                                    }
                                  },
                                  "id": 2844,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13173:11:13",
                                  "memberName": "totalAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1602,
                                  "src": "13164:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13148:36:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2846,
                              "nodeType": "ExpressionStatement",
                              "src": "13148:36:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2849,
                              "name": "schedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2805,
                              "src": "13211:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                              }
                            },
                            "id": 2850,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13220:11:13",
                            "memberName": "totalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1602,
                            "src": "13211:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2851,
                            "name": "totalUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2832,
                            "src": "13234:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13211:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2802,
                        "id": 2853,
                        "nodeType": "Return",
                        "src": "13204:43:13"
                      }
                    ]
                  },
                  "functionSelector": "6b2d95d4",
                  "id": 2855,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLockedTokens",
                  "nameLocation": "12602:15:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2799,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2798,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "12626:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "12618:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2797,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12618:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12617:14:13"
                  },
                  "returnParameters": {
                    "id": 2802,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2801,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "12653:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2800,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12653:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12652:9:13"
                  },
                  "scope": 3077,
                  "src": "12593:661:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2912,
                    "nodeType": "Block",
                    "src": "13331:512:13",
                    "statements": [
                      {
                        "assignments": [
                          2864
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2864,
                            "mutability": "mutable",
                            "name": "schedule",
                            "nameLocation": "13365:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2912,
                            "src": "13341:32:13",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                              "typeString": "struct ChainSphereTokenICO.VestingSchedule"
                            },
                            "typeName": {
                              "id": 2863,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2862,
                                "name": "VestingSchedule",
                                "nameLocations": [
                                  "13341:15:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1609,
                                "src": "13341:15:13"
                              },
                              "referencedDeclaration": 1609,
                              "src": "13341:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2868,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2865,
                            "name": "vestingSchedules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1614,
                            "src": "13376:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1609_storage_$",
                              "typeString": "mapping(address => struct ChainSphereTokenICO.VestingSchedule storage ref)"
                            }
                          },
                          "id": 2867,
                          "indexExpression": {
                            "id": 2866,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2857,
                            "src": "13393:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13376:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage",
                            "typeString": "struct ChainSphereTokenICO.VestingSchedule storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13341:57:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2869,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "13413:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13419:9:13",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "13413:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2871,
                              "name": "schedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2864,
                              "src": "13431:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                              }
                            },
                            "id": 2872,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13440:11:13",
                            "memberName": "lockEndTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1606,
                            "src": "13431:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13413:38:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2877,
                        "nodeType": "IfStatement",
                        "src": "13409:77:13",
                        "trueBody": {
                          "id": 2876,
                          "nodeType": "Block",
                          "src": "13453:33:13",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 2874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13474:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 2861,
                              "id": 2875,
                              "nodeType": "Return",
                              "src": "13467:8:13"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2879
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2879,
                            "mutability": "mutable",
                            "name": "intervalsPassed",
                            "nameLocation": "13504:15:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2912,
                            "src": "13496:23:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2878,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13496:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2888,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2880,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "13523:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2881,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13529:9:13",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "13523:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2882,
                                    "name": "schedule",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2864,
                                    "src": "13541:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                      "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                                    }
                                  },
                                  "id": 2883,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13550:11:13",
                                  "memberName": "lockEndTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1606,
                                  "src": "13541:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13523:38:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2885,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13522:40:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2886,
                            "name": "vestingInterval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1600,
                            "src": "13577:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13522:70:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13496:96:13"
                      },
                      {
                        "assignments": [
                          2890
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2890,
                            "mutability": "mutable",
                            "name": "totalUnlocked",
                            "nameLocation": "13610:13:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2912,
                            "src": "13602:21:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2889,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13602:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2895,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2891,
                            "name": "intervalsPassed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2879,
                            "src": "13626:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 2892,
                              "name": "schedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2864,
                              "src": "13644:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                              }
                            },
                            "id": 2893,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13653:14:13",
                            "memberName": "unlockPerBatch",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1608,
                            "src": "13644:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13626:41:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13602:65:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2896,
                            "name": "totalUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2890,
                            "src": "13682:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 2897,
                              "name": "schedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2864,
                              "src": "13698:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                              }
                            },
                            "id": 2898,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13707:11:13",
                            "memberName": "totalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1602,
                            "src": "13698:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13682:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2906,
                        "nodeType": "IfStatement",
                        "src": "13678:103:13",
                        "trueBody": {
                          "id": 2905,
                          "nodeType": "Block",
                          "src": "13720:61:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 2903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2900,
                                  "name": "totalUnlocked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2890,
                                  "src": "13734:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2901,
                                    "name": "schedule",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2864,
                                    "src": "13750:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                      "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                                    }
                                  },
                                  "id": 2902,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13759:11:13",
                                  "memberName": "totalAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1602,
                                  "src": "13750:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13734:36:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2904,
                              "nodeType": "ExpressionStatement",
                              "src": "13734:36:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2907,
                            "name": "totalUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2890,
                            "src": "13798:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 2908,
                              "name": "schedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2864,
                              "src": "13814:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1609_storage_ptr",
                                "typeString": "struct ChainSphereTokenICO.VestingSchedule storage pointer"
                              }
                            },
                            "id": 2909,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13823:13:13",
                            "memberName": "claimedAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1604,
                            "src": "13814:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13798:38:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2861,
                        "id": 2911,
                        "nodeType": "Return",
                        "src": "13791:45:13"
                      }
                    ]
                  },
                  "functionSelector": "1f803ac3",
                  "id": 2913,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUnlockedTokens",
                  "nameLocation": "13269:17:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2858,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2857,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "13295:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2913,
                        "src": "13287:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13287:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13286:14:13"
                  },
                  "returnParameters": {
                    "id": 2861,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2860,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2913,
                        "src": "13322:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2859,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13322:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13321:9:13"
                  },
                  "scope": 3077,
                  "src": "13260:583:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2928,
                    "nodeType": "Block",
                    "src": "13914:163:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2924,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14064:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                    "typeString": "contract ChainSphereTokenICO"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                    "typeString": "contract ChainSphereTokenICO"
                                  }
                                ],
                                "id": 2923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14056:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2922,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14056:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14056:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2920,
                              "name": "usdtERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1581,
                              "src": "14036:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14046:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 924,
                            "src": "14036:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14036:34:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2919,
                        "id": 2927,
                        "nodeType": "Return",
                        "src": "14029:41:13"
                      }
                    ]
                  },
                  "functionSelector": "ee6d12a6",
                  "id": 2929,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2916,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2915,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "13887:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13887:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13887:9:13"
                    }
                  ],
                  "name": "getUSDTbalance",
                  "nameLocation": "13858:14:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2914,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13872:2:13"
                  },
                  "returnParameters": {
                    "id": 2919,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2918,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2929,
                        "src": "13905:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2917,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13905:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13904:9:13"
                  },
                  "scope": 3077,
                  "src": "13849:228:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2942,
                    "nodeType": "Block",
                    "src": "14147:45:13",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2938,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "14172:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                  "typeString": "contract ChainSphereTokenICO"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                  "typeString": "contract ChainSphereTokenICO"
                                }
                              ],
                              "id": 2937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14164:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2936,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14164:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14164:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14178:7:13",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "14164:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2935,
                        "id": 2941,
                        "nodeType": "Return",
                        "src": "14157:28:13"
                      }
                    ]
                  },
                  "functionSelector": "762687cf",
                  "id": 2943,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2932,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2931,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "14120:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "14120:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14120:9:13"
                    }
                  ],
                  "name": "getBNBbalance",
                  "nameLocation": "14092:13:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2930,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14105:2:13"
                  },
                  "returnParameters": {
                    "id": 2935,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2934,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2943,
                        "src": "14138:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2933,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14138:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14137:9:13"
                  },
                  "scope": 3077,
                  "src": "14083:109:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2975,
                    "nodeType": "Block",
                    "src": "14237:193:13",
                    "statements": [
                      {
                        "assignments": [
                          2949
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2949,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "14255:6:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2975,
                            "src": "14247:14:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2948,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14247:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2957,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2954,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14292:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                    "typeString": "contract ChainSphereTokenICO"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                    "typeString": "contract ChainSphereTokenICO"
                                  }
                                ],
                                "id": 2953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14284:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2952,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14284:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14284:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2950,
                              "name": "usdtERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1581,
                              "src": "14264:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14274:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 924,
                            "src": "14264:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14264:34:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14247:51:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2959,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2949,
                                "src": "14316:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14325:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "14316:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f207573647420746f207769746864726177",
                              "id": 2962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14328:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_74e9a723329a3d6065cc41cb52d814d301a8aaedcc10a6a811b1b5b0e01895c9",
                                "typeString": "literal_string \"No usdt to withdraw\""
                              },
                              "value": "No usdt to withdraw"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_74e9a723329a3d6065cc41cb52d814d301a8aaedcc10a6a811b1b5b0e01895c9",
                                "typeString": "literal_string \"No usdt to withdraw\""
                              }
                            ],
                            "id": 2958,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14308:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14308:42:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2964,
                        "nodeType": "ExpressionStatement",
                        "src": "14308:42:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 2968,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "14387:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 2969,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14387:7:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2970,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2949,
                                  "src": "14396:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2966,
                                  "name": "usdtERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1581,
                                  "src": "14368:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$967",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 2967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14378:8:13",
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 934,
                                "src": "14368:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 2971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14368:35:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7769746864726177206661696c6564",
                              "id": 2972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14405:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe",
                                "typeString": "literal_string \"withdraw failed\""
                              },
                              "value": "withdraw failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe",
                                "typeString": "literal_string \"withdraw failed\""
                              }
                            ],
                            "id": 2965,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14360:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14360:63:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2974,
                        "nodeType": "ExpressionStatement",
                        "src": "14360:63:13"
                      }
                    ]
                  },
                  "functionSelector": "57ea89b6",
                  "id": 2976,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2946,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2945,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "14227:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "14227:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14227:9:13"
                    }
                  ],
                  "name": "Withdraw",
                  "nameLocation": "14207:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2944,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14215:2:13"
                  },
                  "returnParameters": {
                    "id": 2947,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14237:0:13"
                  },
                  "scope": 3077,
                  "src": "14198:232:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3005,
                    "nodeType": "Block",
                    "src": "14478:159:13",
                    "statements": [
                      {
                        "assignments": [
                          2982
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2982,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "14495:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3005,
                            "src": "14487:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2981,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14487:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2988,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2985,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "14513:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                  "typeString": "contract ChainSphereTokenICO"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ChainSphereTokenICO_$3077",
                                  "typeString": "contract ChainSphereTokenICO"
                                }
                              ],
                              "id": 2984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14505:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2983,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14505:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14505:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14519:7:13",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "14505:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14487:39:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2990,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2982,
                                "src": "14543:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14553:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "14543:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20424e4220617661696c61626c6520696e20636f6e7472616374",
                              "id": 2993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14556:30:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_974685248446c459b439c25311f381603dac1d8f1e8e39bc67970840a953473c",
                                "typeString": "literal_string \"No BNB available in contract\""
                              },
                              "value": "No BNB available in contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_974685248446c459b439c25311f381603dac1d8f1e8e39bc67970840a953473c",
                                "typeString": "literal_string \"No BNB available in contract\""
                              }
                            ],
                            "id": 2989,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14535:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14535:52:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2995,
                        "nodeType": "ExpressionStatement",
                        "src": "14535:52:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3002,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2982,
                              "src": "14622:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 2998,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "14604:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 2999,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14604:7:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14596:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 2996,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14596:8:13",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14596:16:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 3001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14613:8:13",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "14596:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14596:34:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3004,
                        "nodeType": "ExpressionStatement",
                        "src": "14596:34:13"
                      }
                    ]
                  },
                  "functionSelector": "1d111d13",
                  "id": 3006,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2979,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2978,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "14468:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "14468:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14468:9:13"
                    }
                  ],
                  "name": "withdrawBNB",
                  "nameLocation": "14445:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2977,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14456:2:13"
                  },
                  "returnParameters": {
                    "id": 2980,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14478:0:13"
                  },
                  "scope": 3077,
                  "src": "14436:201:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3075,
                    "nodeType": "Block",
                    "src": "14787:590:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3018,
                                "name": "recipient_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3008,
                                "src": "14805:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3021,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14827:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14819:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3019,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14819:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3022,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14819:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14805:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "726563697069656e742061646472657373206973206e6f742076616c6964",
                              "id": 3024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14831:32:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_461928b3eca368771ec70524e2535f4615f9ad32ec2e887f6ccf64e8a6993633",
                                "typeString": "literal_string \"recipient address is not valid\""
                              },
                              "value": "recipient address is not valid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_461928b3eca368771ec70524e2535f4615f9ad32ec2e887f6ccf64e8a6993633",
                                "typeString": "literal_string \"recipient address is not valid\""
                              }
                            ],
                            "id": 3017,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14797:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14797:67:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3026,
                        "nodeType": "ExpressionStatement",
                        "src": "14797:67:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3028,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3010,
                                "src": "14882:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14892:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "14882:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "616d6f756e742073686f756c64206265203e2030",
                              "id": 3031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14895:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_28bcfa3c9b3c8db041ce814167a89d2aa287ca649156ecde1f0d9dee24648ea9",
                                "typeString": "literal_string \"amount should be > 0\""
                              },
                              "value": "amount should be > 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_28bcfa3c9b3c8db041ce814167a89d2aa287ca649156ecde1f0d9dee24648ea9",
                                "typeString": "literal_string \"amount should be > 0\""
                              }
                            ],
                            "id": 3027,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14874:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14874:44:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3033,
                        "nodeType": "ExpressionStatement",
                        "src": "14874:44:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3035,
                                "name": "lockTime_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3012,
                                "src": "14936:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14948:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "14936:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6c6f636b2074696d652073686f756c6420696e20667574757265",
                              "id": 3038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14951:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a57d182dcb954cf24ad378e7ceac8c1d55eaf49e3ed38c23d64ec455f3af41be",
                                "typeString": "literal_string \"lock time should in future\""
                              },
                              "value": "lock time should in future"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a57d182dcb954cf24ad378e7ceac8c1d55eaf49e3ed38c23d64ec455f3af41be",
                                "typeString": "literal_string \"lock time should in future\""
                              }
                            ],
                            "id": 3034,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14928:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14928:52:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3040,
                        "nodeType": "ExpressionStatement",
                        "src": "14928:52:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 3043,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67,
                                      "src": "15008:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 3044,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15008:7:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3042,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    2796
                                  ],
                                  "referencedDeclaration": 2796,
                                  "src": "14998:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 3045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14998:18:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3046,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3010,
                                "src": "15020:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14998:29:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6f776e657220646f65736e2774206861766520656e6f75676820746f6b656e73",
                              "id": 3048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15029:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f0de8a66e36e616b3b0614553ab4f2fb98463bd9b30c1407b59d2e3420cccd12",
                                "typeString": "literal_string \"owner doesn't have enough tokens\""
                              },
                              "value": "owner doesn't have enough tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f0de8a66e36e616b3b0614553ab4f2fb98463bd9b30c1407b59d2e3420cccd12",
                                "typeString": "literal_string \"owner doesn't have enough tokens\""
                              }
                            ],
                            "id": 3041,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14990:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14990:74:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3050,
                        "nodeType": "ExpressionStatement",
                        "src": "14990:74:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3052,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15093:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15097:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15093:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3054,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3008,
                              "src": "15105:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3055,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3010,
                              "src": "15117:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3051,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "15083:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15083:42:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3057,
                        "nodeType": "ExpressionStatement",
                        "src": "15083:42:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3063,
                                  "name": "amount_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3010,
                                  "src": "15213:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 3064,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "15247:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3065,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15253:9:13",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "15247:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 3066,
                                    "name": "SalePhase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1629,
                                    "src": "15282:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SalePhase_$1629_$",
                                      "typeString": "type(enum ChainSphereTokenICO.SalePhase)"
                                    }
                                  },
                                  "id": 3067,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "15292:5:13",
                                  "memberName": "Ended",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1628,
                                  "src": "15282:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SalePhase_$1629",
                                    "typeString": "enum ChainSphereTokenICO.SalePhase"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3071,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 3068,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "15322:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 3069,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15328:9:13",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "15322:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 3070,
                                    "name": "lockTime_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3012,
                                    "src": "15340:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15322:27:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_SalePhase_$1629",
                                    "typeString": "enum ChainSphereTokenICO.SalePhase"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3062,
                                "name": "LockingSchedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1648,
                                "src": "15176:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_LockingSchedule_$1648_storage_ptr_$",
                                  "typeString": "type(struct ChainSphereTokenICO.LockingSchedule storage pointer)"
                                }
                              },
                              "id": 3072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "15205:6:13",
                                "15233:12:13",
                                "15275:5:13",
                                "15310:10:13"
                              ],
                              "names": [
                                "amount",
                                "purchaseTime",
                                "phase",
                                "unlockTime"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "15176:185:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LockingSchedule_$1648_memory_ptr",
                                "typeString": "struct ChainSphereTokenICO.LockingSchedule memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_LockingSchedule_$1648_memory_ptr",
                                "typeString": "struct ChainSphereTokenICO.LockingSchedule memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 3058,
                                "name": "lockingBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1654,
                                "src": "15142:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct ChainSphereTokenICO.LockingSchedule storage ref[] storage ref)"
                                }
                              },
                              "id": 3060,
                              "indexExpression": {
                                "id": 3059,
                                "name": "recipient_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3008,
                                "src": "15158:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15142:27:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage",
                                "typeString": "struct ChainSphereTokenICO.LockingSchedule storage ref[] storage ref"
                              }
                            },
                            "id": 3061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15170:4:13",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "15142:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr_$_t_struct$_LockingSchedule_$1648_storage_$returns$__$attached_to$_t_array$_t_struct$_LockingSchedule_$1648_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ChainSphereTokenICO.LockingSchedule storage ref[] storage pointer,struct ChainSphereTokenICO.LockingSchedule storage ref)"
                            }
                          },
                          "id": 3073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15142:228:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3074,
                        "nodeType": "ExpressionStatement",
                        "src": "15142:228:13"
                      }
                    ]
                  },
                  "functionSelector": "ba91778f",
                  "id": 3076,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3015,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3014,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "14777:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "14777:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14777:9:13"
                    }
                  ],
                  "name": "TransferRewards",
                  "nameLocation": "14698:15:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3013,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3008,
                        "mutability": "mutable",
                        "name": "recipient_",
                        "nameLocation": "14722:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3076,
                        "src": "14714:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3007,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14714:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3010,
                        "mutability": "mutable",
                        "name": "amount_",
                        "nameLocation": "14742:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3076,
                        "src": "14734:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3009,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14734:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3012,
                        "mutability": "mutable",
                        "name": "lockTime_",
                        "nameLocation": "14759:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3076,
                        "src": "14751:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3011,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14751:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14713:56:13"
                  },
                  "returnParameters": {
                    "id": 3016,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14787:0:13"
                  },
                  "scope": 3077,
                  "src": "14689:688:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 3078,
              "src": "369:15010:13",
              "usedErrors": [
                13,
                18,
                249,
                254,
                259,
                268,
                273,
                278,
                1051,
                1492
              ],
              "usedEvents": [
                24,
                901,
                910,
                1670,
                1676
              ]
            }
          ],
          "src": "32:15348:13"
        },
        "id": 13
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "IERC1363": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "approveAndCall(address,uint256)": "3177029f",
              "approveAndCall(address,uint256,bytes)": "cae9ca51",
              "balanceOf(address)": "70a08231",
              "supportsInterface(bytes4)": "01ffc9a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferAndCall(address,uint256)": "1296ee62",
              "transferAndCall(address,uint256,bytes)": "4000aea0",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferFromAndCall(address,address,uint256)": "d8fbe994",
              "transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ERC20Burnable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "SafeERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "currentAllowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "requestedDecrease",
                  "type": "uint256"
                }
              ],
              "name": "SafeERC20FailedDecreaseAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c634300081c000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ",
              "sourceMap": "698:8692:9:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea164736f6c634300081c000a",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ",
              "sourceMap": "698:8692:9:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"
        }
      },
      "contracts/ICO.sol": {
        "ChainSphereTokenICO": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_usdtERC20",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_usdtBEP20",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "buyer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "usdtAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tokenAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "unlockTime",
                  "type": "uint256"
                }
              ],
              "name": "TokenBought",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "buyer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "PauseResume",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient_",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount_",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lockTime_",
                  "type": "uint256"
                }
              ],
              "name": "TransferRewards",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "Withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "availableBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "usdtAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bnbPrice_",
                  "type": "uint256"
                },
                {
                  "internalType": "enum ChainSphereTokenICO.TokenStandard",
                  "name": "tokenStandard",
                  "type": "uint8"
                }
              ],
              "name": "buyToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "checkStatus",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimVestedTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBNBbalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getLockedTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getUSDTbalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getUnlockedTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "icoEnd",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "icoStart",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lockDuration",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "lockingBalances",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "purchaseTime",
                  "type": "uint256"
                },
                {
                  "internalType": "enum ChainSphereTokenICO.SalePhase",
                  "name": "phase",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "unlockTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "manualPause",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum ChainSphereTokenICO.SalePhase",
                  "name": "",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "phaseBuyers",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "salePhase",
              "outputs": [
                {
                  "internalType": "enum ChainSphereTokenICO.SalePhase",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum ChainSphereTokenICO.SalePhase",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "name": "salePhases",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "allocatedSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lockingPeriod",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_usdtBEP20",
                  "type": "address"
                }
              ],
              "name": "setBEP20USDT",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_usdtERC20",
                  "type": "address"
                }
              ],
              "name": "setERC20USDT",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "endTime_",
                  "type": "uint256"
                }
              ],
              "name": "setEndTime",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum ChainSphereTokenICO.SalePhase",
                  "name": "phase",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "period",
                  "type": "uint256"
                }
              ],
              "name": "setLockingPeriod",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum ChainSphereTokenICO.SalePhase",
                  "name": "phase",
                  "type": "uint8"
                }
              ],
              "name": "setSalePhase",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "startTime_",
                  "type": "uint256"
                }
              ],
              "name": "setStartTime",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "soldTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tokenPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferWithLock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "usdtBEP20",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "usdtERC20",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "userDetails",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "saleType",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalTokens",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "vestingInterval",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "vestingSchedules",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lockEndTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "unlockPerBatch",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawBNB",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 2001,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 1964,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_6998": {
                  "entryPoint": 1933,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461078857612f0a6040813803918261001c816107ac565b9384928339810103126107885761003e6020610037836107d1565b92016107d1565b9061004960406107ac565b91601083526f21b430b4b729b83432b932aa37b5b2b760811b602084015261007160406107ac565b600381526204353560ec1b602082015283519092906001600160401b03811161069157600354600181811c9116801561077e575b602082101461067157601f8111610719575b50602094601f82116001146106b2579481929394956000926106a7575b50508160011b916000199060031b1c1916176003555b82516001600160401b03811161069157600454600181811c91168015610687575b602082101461067157601f811161060c575b506020601f82116001146105a5578192939460009261059a575b50508160011b916000199060031b1c1916176004555b33156105845760058054336001600160a01b0319821681179092556040519291906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360016006556078600e55603c600f556001600160a01b03169081151580610572575b15610530575060018060a01b0319600754161760075560018060a01b031660018060a01b0319600854161760085560006002546b1128543ccb7ea8f17e000000810180911161051c576002555033600052600060205260406000206b1128543ccb7ea8f17e00000081540190556040516b1128543ccb7ea8f17e000000815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a361026d61078d565b6b01b73b9fadf310e4f3000000815266b1a2bc2ec5000060208083019182526303c26700604084019081526001600052601290915291517f71a67924699a20698523213e55fe499d539379d7769cd5567e2c45d583f815a355517f71a67924699a20698523213e55fe499d539379d7769cd5567e2c45d583f815a455517f71a67924699a20698523213e55fe499d539379d7769cd5567e2c45d583f815a55561031461078d565b6b01b73b9fadf310e4f3000000815266f8b0a10e47000060208083019182526303c26700604084019081526002600052601290915291517f8e1fee8c88a9e04123b21e90cae2727a7715bf522a1e46eb5934ccd05203a6b255517f8e1fee8c88a9e04123b21e90cae2727a7715bf522a1e46eb5934ccd05203a6b355517f8e1fee8c88a9e04123b21e90cae2727a7715bf522a1e46eb5934ccd05203a6b4556103bb61078d565b6b01b73b9fadf310e4f3000000815267013fbe85edc9000060208083019182526303c26700604084019081526003600052601290915291517f0f36ad39aee03e7108cc48f54934702a5f0d4066f10344cebf8198978d86976a55517f0f36ad39aee03e7108cc48f54934702a5f0d4066f10344cebf8198978d86976b55517f0f36ad39aee03e7108cc48f54934702a5f0d4066f10344cebf8198978d86976c5561046361078d565b6adb9dcfd6f988727980000081526701aa535d3d0c000060208083019182526303c2670060408085019182526004600052601290925292517fb4fcd034df3d20faa1c133b66d862ce92732727d40916b48ffb4020cb00fe0535590517fb4fcd034df3d20faa1c133b66d862ce92732727d40916b48ffb4020cb00fe0545590517fb4fcd034df3d20faa1c133b66d862ce92732727d40916b48ffb4020cb00fe055556011805460ff191690555161272490816107e68239f35b634e487b7160e01b82526011600452602482fd5b62461bcd60e51b815260206004820152601660248201527f496e76616c6964205553445420616464726573736573000000000000000000006044820152606490fd5b506001600160a01b03831615156101be565b631e4fbdf760e01b600052600060045260246000fd5b015190503880610137565b601f198216906004600052806000209160005b8181106105f4575095836001959697106105db575b505050811b0160045561014d565b015160001960f88460031b161c191690553880806105cd565b9192602060018192868b0151815501940192016105b8565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410610667575b601f0160051c01905b81811061065b575061011d565b6000815560010161064e565b9091508190610645565b634e487b7160e01b600052602260045260246000fd5b90607f169061010b565b634e487b7160e01b600052604160045260246000fd5b0151905038806100d4565b601f198216956003600052806000209160005b888110610701575083600195969798106106e8575b505050811b016003556100ea565b015160001960f88460031b161c191690553880806106da565b919260206001819286850151815501940192016106c5565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c81019160208410610774575b601f0160051c01905b81811061076857506100b7565b6000815560010161075b565b9091508190610752565b90607f16906100a5565b600080fd5b60405190606082016001600160401b0381118382101761069157604052565b6040519190601f01601f191682016001600160401b0381118382101761069157604052565b51906001600160a01b03821682036107885756fe608080604052600436101561001357600080fd5b60003560e01c9081630455444314611e6a575080630563451a14611e4c57806306fdde0314611d8d578063095ea7b314611cdb57806318160ddd14611cbd5780631d111d1314611c3a5780631f803ac314611c1757806323b872dd14611b6b5780632b3935a614611b19578063313ce56714611afd578063388727bc14611abb5780633b7104f214611a9f5780633e0a322d14611a3257806342966c6814611a1557806348c54b9d146118f857806348dec2a7146118b557806357ea89b61461172e5780635ed9ebfc1461171057806368819f7a146116be5780636b2d95d41461169b57806370a0823114611678578063715018a61461161b578063762687cf146115f757806379cc6790146115c757806379fbe635146114875780637ad59431146112875780637ff9b59614611269578063827037db1461124b5780638da5cb5b146112225780638e58e76e146111d057806395d89b41146110c8578063a0821be31461109d578063a0ce943314611057578063a9059cbb14610fac578063ae3218bc14610f2b578063b8e50cab14610f0d578063ba91778f14610d57578063bfdc33a814610c59578063ccb98ffc14610bdf578063cd94b54b14610bbc578063cf26d53614610b93578063dd62ed3e14610b42578063e4f2487a14610b1a578063e74f3fbb146109d5578063ed65af74146109ac578063ee6d12a61461090f578063f2fde38b14610885578063f5e34ac01461029b5763fdb20ccb1461023a57600080fd5b34610296576020366003190112610296576001600160a01b0361025b611ece565b166000526010602052608060406000208054906001810154906003600282015491015491604051938452602084015260408301526060820152f35b600080fd5b60603660031901126102965760443560043560243560028310156102965760095442101580610879575b15610840576102d2612501565b60ff601154166007811015806104c5578115159081610832575b81610821575b50156107e55761030190611f19565b926103106002850154426121f3565b913415918261066057508361061b5780156105e257670de0b6b3a7640000340291348304670de0b6b3a76400001417156105cc5761034d91611fed565b925b83156105875783815410610542576005548490610374906001600160a01b031661224e565b106104f1573360005260136020526103be604060002060ff60115416906103b3604051926103a184611fa2565b8884524260208501526040840161229b565b8460608301526123cd565b6103cc60ff60115416611f32565b8054600160401b8110156104db576103e991600182018155611f4b565b81549060031b9033821b9160018060a01b03901b191617905561040e84600c546121f3565b600c5561041c848254611fe0565b905560055461043790849033906001600160a01b03166125ce565b60ff601154169160078310156104c5577f884543c08d36fb5c9b3b688dd0453c9f287199124bdbddb3b7f9ca885a4d34a09233600052601560205260406000205533600052601560205260016040600020016104948582546121f3565b905580156104bd57925b6040805194855260208501919091528301523391606090a26001600655005b50349261049e565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4e6f7420656e6f75676820746f6b656e7320696e206f776e657227732062616c604482015263616e636560e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420616c6c6f636174656420746f6b656e730000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f546f6b656e20616d6f756e74206d757374206265203e203000000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c696420424e4220707269636560781b6044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f742073656e6420626f746820424e4220616e6420555344540000006044820152606490fd5b9491505082156107a057670de0b6b3a76400008302838104670de0b6b3a7640000036105cc57600182015461069491611fed565b93806106fa57506007546001600160a01b031680156106c057836106bb913090339061267d565b61034f565b60405162461bcd60e51b8152602060048201526012602482015271115490cc8c081554d115081b9bdd081cd95d60721b6044820152606490fd5b60010361075b576008546001600160a01b0316801561072157836106bb913090339061267d565b60405162461bcd60e51b81526020600482015260126024820152711091540c8c081554d115081b9bdd081cd95d60721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f556e737570706f7274656420746f6b656e207374616e646172640000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f5553445420616d6f756e74206d757374206265203e20300000000000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e6f206163746976652073616c6520706861736560601b6044820152606490fd5b90506104c5576006811415856102f2565b5050600581141560006102ec565b60405162461bcd60e51b815260206004820152601160248201527049434f206973206e6f742061637469766560781b6044820152606490fd5b50600a544211156102c5565b346102965760203660031901126102965761089e611ece565b6108a6612441565b6001600160a01b031680156108f957600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461029657600036600319011261029657610928612441565b6007546040516370a0823160e01b815230600482015290602090829060249082906001600160a01b03165afa80156109a05760009061096d575b602090604051908152f35b506020813d602011610998575b8161098760209383611fbe565b810103126102965760209051610962565b3d915061097a565b6040513d6000823e3d90fd5b34610296576000366003190112610296576007546040516001600160a01b039091168152602090f35b34610296576000366003190112610296576109ee612501565b3360005260106020526040600020805415610ad55760028101544210610a9057610a1733612020565b8015610a3f576001610a389201610a2f8282546121f3565b905533306125ce565b6001600655005b60405162461bcd60e51b815260206004820152602360248201527f4e6f2076657374656420746f6b656e7320617661696c61626c6520746f20636c60448201526261696d60e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601b60248201527f4c6f636b20706572696f64206973207374696c6c2061637469766500000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4e6f20746f6b656e7320616c6c6f636174656420666f722076657374696e67006044820152606490fd5b3461029657600036600319011261029657602060ff60115416610b406040518092611f95565bf35b3461029657604036600319011261029657610b5b611ece565b610b63611ee4565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b34610296576000366003190112610296576008546040516001600160a01b039091168152602090f35b3461029657600036600319011261029657602060ff600b54166040519015158152f35b3461029657602036600319011261029657600435610bfb612441565b600954811115610c0a57600a55005b60405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608490fd5b3461029657604036600319011261029657610c72611ece565b60243590610c7e612441565b6005546001600160a01b031682610c948261224e565b10610d1e5782610ca59130906125ce565b610cb1600e54426121f3565b6014830290838204601414841517156105cc5760039260405194610cd486611fa2565b8552602085019060008252604086019283526064606087019404845260018060a01b0316600052601060205260406000209451855551600185015551600284015551910155600080f35b60405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b6044820152606490fd5b3461029657606036600319011261029657610d70611ece565b602435604435610d7e612441565b6001600160a01b0383168015610ec8578215610e8c578115610e47576005548390610db1906001600160a01b031661224e565b10610e0357610dc483610e0195336125ce565b6000526013602052610ddb604060002091426121f3565b60405192610de884611fa2565b83524260208401526006604084015260608301526123cd565b005b606460405162461bcd60e51b815260206004820152602060248201527f6f776e657220646f65736e2774206861766520656e6f75676820746f6b656e736044820152fd5b60405162461bcd60e51b815260206004820152601a60248201527f6c6f636b2074696d652073686f756c6420696e206675747572650000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152730616d6f756e742073686f756c64206265203e20360641b6044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f726563697069656e742061646472657373206973206e6f742076616c696400006044820152606490fd5b34610296576000366003190112610296576020600f54604051908152f35b3461029657604036600319011261029657610f44611ece565b6001600160a01b031660009081526013602052604090208054602435919082101561029657608091610f7591611f79565b50805490610fa5600182015491600360ff6002830154169101549260405194855260208501526040840190611f95565b6060820152f35b3461029657604036600319011261029657610fc5611ece565b60243580610fd2336122bb565b10610fec57610fe191336125ce565b602060405160018152f35b60405162461bcd60e51b815260206004820152603e60248201527f496e73756666696369656e7420756e6c6f636b65642062616c616e636520626560448201527f636175736520796f752068617665206e6f7420636c61696d65642079657400006064820152608490fd5b346102965761106f61106836611efa565b9190611f32565b80548210156102965760209161108491611f4b565b905460405160039290921b1c6001600160a01b03168152f35b346102965760203660031901126102965760206110c06110bb611ece565b6122bb565b604051908152f35b346102965760003660031901126102965760405160006004548060011c906001811680156111c6575b6020831081146111b25782855290811561118e575060011461112e575b61112a8361111e81850382611fbe565b60405191829182611e85565b0390f35b91905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b916000905b8082106111745750909150810160200161111e61110e565b91926001816020925483858801015201910190929161115c565b60ff191660208086019190915291151560051b8401909101915061111e905061110e565b634e487b7160e01b84526022600452602484fd5b91607f16916110f1565b34610296576020366003190112610296576004356007811015610296576111f690611f19565b805461112a60026001840154930154604051938493846040919493926060820195825260208201520152565b34610296576000366003190112610296576005546040516001600160a01b039091168152602090f35b34610296576000366003190112610296576020600954604051908152f35b34610296576000366003190112610296576020600d54604051908152f35b3461029657602036600319011261029657600435600781108015610296576112ad612441565b60ff600b54166114325760018214600081611406575b81156113dc575b81156113ad575b811561137e575b8115611350575b501561130b57156104c55761130460019160ff196011541660ff821617601155611f19565b0154600d55005b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642073616c65207068617365207472616e736974696f6e2100006044820152606490fd5b90506104c5576006821480611366575b836112df565b5060ff6011541660078110156104c557600414611360565b8091506104c5576004831480611395575b906112d8565b5060ff6011541660078110156104c55760031461138f565b8091506104c55760038314806113c4575b906112d1565b5060ff6011541660078110156104c5576002146113be565b905060028314806113ee575b906112ca565b5060ff6011541660078110156104c5576001146113e8565b905060ff60115416600781101561141e5715906112c3565b634e487b7160e01b82526021600452602482fd5b60405162461bcd60e51b815260206004820152602760248201527f43616e6e6f74206368616e6765207068617365207768696c652049434f206973604482015266081c185d5cd95960ca1b6064820152608490fd5b346102965761149536611efa565b61149d612441565b6114a682611f19565b541561158d578060026114b884611f19565b01556114c382611f32565b6000915b8154831015610e01576114da8383611f4b565b60018060a01b0391549060031b1c16600052601360205260406000209160005b835481101561157f5761150d8185611f79565b5054151580611551575b90600191611526575b016114fa565b61153d84836115358489611f79565b5001546121f3565b60036115498388611f79565b500155611520565b5060ff60026115608387611f79565b500154169060078710156104c55760078210156104c557908614611517565b5060019093019291506114c7565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c69642073616c6520706861736560701b6044820152606490fd5b3461029657604036600319011261029657610e016115e3611ece565b602435906115f2823383612523565b61246a565b3461029657600036600319011261029657611610612441565b602047604051908152f35b3461029657600036600319011261029657611634612441565b600580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102965760203660031901126102965760206110c0611696611ece565b61224e565b346102965760203660031901126102965760206110c06116b9611ece565b612200565b34610296576020366003190112610296576116d7611ece565b6116df612441565b6001600160a01b03166116f3811515612094565b6bffffffffffffffffffffffff60a01b6008541617600855600080f35b34610296576000366003190112610296576020600c54604051908152f35b3461029657600036600319011261029657611747612441565b6007546040516370a0823160e01b81523060048201526001600160a01b0390911690602081602481855afa9081156109a057600091611883575b50801561184857602090604460018060a01b03600554166000604051958694859363a9059cbb60e01b8552600485015260248401525af19081156109a057600091611806575b50156117cf57005b60405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b6044820152606490fd5b6020813d602011611840575b8161181f60209383611fbe565b8101031261183c57519081151582036118395750816117c7565b80fd5b5080fd5b3d9150611812565b60405162461bcd60e51b81526020600482015260136024820152724e6f207573647420746f20776974686472617760681b6044820152606490fd5b906020823d6020116118ad575b8161189d60209383611fbe565b8101031261183957505182611781565b3d9150611890565b34610296576020366003190112610296576001600160a01b036118d6611ece565b1660005260156020526040806000206001815491015482519182526020820152f35b3461029657600036600319011261029657611911612501565b336000526013602052604060002060009060005b8154811015611996576119388183611f79565b505415158061197e575b61194f575b600101611925565b916119686001916119608585611f79565b5054906121f3565b9260006119758285611f79565b50559050611947565b50600361198b8284611f79565b500154421015611942565b8280156119d0576040519081527f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43060203392a26001600655005b60405162461bcd60e51b815260206004820152601b60248201527f4e6f20756e6c6f636b656420746f6b656e7320746f20636c61696d00000000006044820152606490fd5b3461029657602036600319011261029657610e016004353361246a565b3461029657602036600319011261029657600435611a4e612441565b42811115611a5b57600955005b606460405162461bcd60e51b815260206004820152602060248201527f53746172742074696d65206d75737420626520696e20746865206675747572656044820152fd5b346102965760003660031901126102965761112a61111e6120d2565b3461029657600036600319011261029657611ad4612441565b600b5460ff8082161516809160ff191617600b55611aee57005b6011805460ff19166005179055005b3461029657600036600319011261029657602060405160128152f35b3461029657602036600319011261029657611b32611ece565b611b3a612441565b6001600160a01b0316611b4e811515612094565b6bffffffffffffffffffffffff60a01b6007541617600755600080f35b3461029657606036600319011261029657611b84611ece565b611b8c611ee4565b6044359081611b9a846122bb565b10611bb357610fe192611bae833383612523565b6125ce565b60405162461bcd60e51b815260206004820152603660248201527f596f7520746f6b656e7320617265207374696c6c206c6f636b6564206f7220796044820152751bdd481a185d995b89dd0818db185a5b5959081e595d60521b6064820152608490fd5b346102965760203660031901126102965760206110c0611c35611ece565b612020565b3461029657600036600319011261029657611c53612441565b478015611c78576005546000918291829182916001600160a01b031682f1156109a057005b60405162461bcd60e51b815260206004820152601c60248201527f4e6f20424e4220617661696c61626c6520696e20636f6e7472616374000000006044820152606490fd5b34610296576000366003190112610296576020600254604051908152f35b3461029657604036600319011261029657611cf4611ece565b602435903315611d77576001600160a01b0316908115611d6157336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b346102965760003660031901126102965760405160006003548060011c90600181168015611e42575b6020831081146111b25782855290811561118e5750600114611de25761112a8361111e81850382611fbe565b91905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b916000905b808210611e285750909150810160200161111e61110e565b919260018160209254838588010152019101909291611e10565b91607f1691611db6565b34610296576000366003190112610296576020600a54604051908152f35b3461029657600036600319011261029657602090600e548152f35b91909160208152825180602083015260005b818110611eb8575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201611e97565b600435906001600160a01b038216820361029657565b602435906001600160a01b038216820361029657565b6040906003190112610296576004356007811015610296579060243590565b60078110156104c5576000526012602052604060002090565b60078110156104c5576000526014602052604060002090565b8054821015611f635760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015611f635760005260206000209060021b0190600090565b9060078210156104c55752565b6080810190811067ffffffffffffffff8211176104db57604052565b90601f8019910116810190811067ffffffffffffffff8211176104db57604052565b919082039182116105cc57565b8115611ff7570490565b634e487b7160e01b600052601260045260246000fd5b818102929181159184041417156105cc57565b6001600160a01b0316600090815260106020526040902060028101549042821161208d5761206b6120606120576120819442611fe0565b600f5490611fed565b60038301549061200d565b908054808311612084575b506001015490611fe0565b90565b91506001612076565b5050600090565b1561209b57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b60ff600b54166121b857600954801580156121ae575b61219f5742101580612193575b61216857600a54421161213d57604051612110604082611fbe565b601781527f49434f20686173206e6f74207374617274656420796574000000000000000000602082015290565b60405161214b604082611fbe565b600d81526c1250d3c81a185cc8195b991959609a1b602082015290565b604051612176604082611fbe565b600d81526c49434f2069732061637469766560981b602082015290565b50600a544211156120f5565b50604051612110604082611fbe565b50600a54156120e8565b6040516121c6604082611fbe565b601f81527f49434f206973206d616e75616c6c7920706175736564206279206f776e657200602082015290565b919082018092116105cc57565b6001600160a01b03166000908152601060205260409020600281015442811161224957906122376120606120576120819442611fe0565b905480821115611fe057905080611fe0565b505490565b6001600160a01b03166000908152602081815260408083205460109092528220805461208193929181612283575b50506121f3565b6122939293506001015490611fe0565b90388061227c565b60078210156104c55752565b8051821015611f635760209160051b010190565b6001600160a01b0381166000908152601360205260408120805490939067ffffffffffffffff81116123b957604051946122fb60208360051b0187611fbe565b81865283526020808420849187015b83831061236e5750505050815b845181101561235a5761232a81866122a7565b5151612339575b600101612317565b9161235260019161234a85886122a7565b5151906121f3565b929050612331565b5092506123696120819261224e565b611fe0565b6004602060019260405161238181611fa2565b8554815284860154838201526123a160ff6002880154166040830161229b565b6003860154606082015281520192019201919061230a565b634e487b7160e01b83526041600452602483fd5b8054600160401b8110156104db576123ea91600182018155611f79565b91909161242b5780518255602081015160018301556040810151600283019160078210156104c55760039260609260ff801983541691161790550151910155565b634e487b7160e01b600052600060045260246000fd5b6005546001600160a01b0316330361245557565b63118cdaa760e01b6000523360045260246000fd5b6001600160a01b031680156124eb576000918183528260205260408320548181106124d257817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b6064939263391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b600260065414612512576002600655565b633ee5aeb560e01b60005260046000fd5b6001600160a01b03908116600081815260016020908152604080832094861683529390529190912054929190600019841061255f575b50505050565b8284106125a9578015611d77576001600160a01b03821615611d6157600052600160205260406000209060018060a01b031660005260205260406000209103905538808080612559565b508290637dc7a0d960e11b60005260018060a01b031660045260245260445260646000fd5b6001600160a01b03169081156124eb576001600160a01b031691821561266757600082815280602052604081205482811061264d5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b63ec442f0560e01b600052600060045260246000fd5b6040516323b872dd60e01b60208083019182526001600160a01b03948516602484015294909316604482015260648082019590955293845292600091906126c5608482611fbe565b519082855af1156109a0576000513d61270e57506001600160a01b0381163b155b6126ed5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b600114156126e656fea164736f6c634300081c000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x788 JUMPI PUSH2 0x2F0A PUSH1 0x40 DUP2 CODESIZE SUB SWAP2 DUP3 PUSH2 0x1C DUP2 PUSH2 0x7AC JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x788 JUMPI PUSH2 0x3E PUSH1 0x20 PUSH2 0x37 DUP4 PUSH2 0x7D1 JUMP JUMPDEST SWAP3 ADD PUSH2 0x7D1 JUMP JUMPDEST SWAP1 PUSH2 0x49 PUSH1 0x40 PUSH2 0x7AC JUMP JUMPDEST SWAP2 PUSH1 0x10 DUP4 MSTORE PUSH16 0x21B430B4B729B83432B932AA37B5B2B7 PUSH1 0x81 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x71 PUSH1 0x40 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH3 0x43535 PUSH1 0xEC SHL PUSH1 0x20 DUP3 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x691 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x77E JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x671 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x719 JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x6B2 JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x6A7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x691 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x687 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x671 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x60C JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x5A5 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x59A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST CALLER ISZERO PUSH2 0x584 JUMPI PUSH1 0x5 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x78 PUSH1 0xE SSTORE PUSH1 0x3C PUSH1 0xF SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x572 JUMPI JUMPDEST ISZERO PUSH2 0x530 JUMPI POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x0 PUSH1 0x2 SLOAD PUSH12 0x1128543CCB7EA8F17E000000 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x51C JUMPI PUSH1 0x2 SSTORE POP CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH12 0x1128543CCB7EA8F17E000000 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH12 0x1128543CCB7EA8F17E000000 DUP2 MSTORE PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH2 0x26D PUSH2 0x78D JUMP JUMPDEST PUSH12 0x1B73B9FADF310E4F3000000 DUP2 MSTORE PUSH7 0xB1A2BC2EC50000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH4 0x3C26700 PUSH1 0x40 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH32 0x71A67924699A20698523213E55FE499D539379D7769CD5567E2C45D583F815A3 SSTORE MLOAD PUSH32 0x71A67924699A20698523213E55FE499D539379D7769CD5567E2C45D583F815A4 SSTORE MLOAD PUSH32 0x71A67924699A20698523213E55FE499D539379D7769CD5567E2C45D583F815A5 SSTORE PUSH2 0x314 PUSH2 0x78D JUMP JUMPDEST PUSH12 0x1B73B9FADF310E4F3000000 DUP2 MSTORE PUSH7 0xF8B0A10E470000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH4 0x3C26700 PUSH1 0x40 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH32 0x8E1FEE8C88A9E04123B21E90CAE2727A7715BF522A1E46EB5934CCD05203A6B2 SSTORE MLOAD PUSH32 0x8E1FEE8C88A9E04123B21E90CAE2727A7715BF522A1E46EB5934CCD05203A6B3 SSTORE MLOAD PUSH32 0x8E1FEE8C88A9E04123B21E90CAE2727A7715BF522A1E46EB5934CCD05203A6B4 SSTORE PUSH2 0x3BB PUSH2 0x78D JUMP JUMPDEST PUSH12 0x1B73B9FADF310E4F3000000 DUP2 MSTORE PUSH8 0x13FBE85EDC90000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH4 0x3C26700 PUSH1 0x40 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH32 0xF36AD39AEE03E7108CC48F54934702A5F0D4066F10344CEBF8198978D86976A SSTORE MLOAD PUSH32 0xF36AD39AEE03E7108CC48F54934702A5F0D4066F10344CEBF8198978D86976B SSTORE MLOAD PUSH32 0xF36AD39AEE03E7108CC48F54934702A5F0D4066F10344CEBF8198978D86976C SSTORE PUSH2 0x463 PUSH2 0x78D JUMP JUMPDEST PUSH11 0xDB9DCFD6F9887279800000 DUP2 MSTORE PUSH8 0x1AA535D3D0C0000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH4 0x3C26700 PUSH1 0x40 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 PUSH1 0x0 MSTORE PUSH1 0x12 SWAP1 SWAP3 MSTORE SWAP3 MLOAD PUSH32 0xB4FCD034DF3D20FAA1C133B66D862CE92732727D40916B48FFB4020CB00FE053 SSTORE SWAP1 MLOAD PUSH32 0xB4FCD034DF3D20FAA1C133B66D862CE92732727D40916B48FFB4020CB00FE054 SSTORE SWAP1 MLOAD PUSH32 0xB4FCD034DF3D20FAA1C133B66D862CE92732727D40916B48FFB4020CB00FE055 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH2 0x2724 SWAP1 DUP2 PUSH2 0x7E6 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420555344542061646472657373657300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x1BE JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x137 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5F4 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x5DB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x14D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x5CD JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x667 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x65B JUMPI POP PUSH2 0x11D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x64E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x645 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x10B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH2 0x701 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x6E8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xEA JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x6DA JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x774 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x768 JUMPI POP PUSH2 0xB7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x75B JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x752 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xA5 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x691 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x691 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x788 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4554443 EQ PUSH2 0x1E6A JUMPI POP DUP1 PUSH4 0x563451A EQ PUSH2 0x1E4C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D8D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CDB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CBD JUMPI DUP1 PUSH4 0x1D111D13 EQ PUSH2 0x1C3A JUMPI DUP1 PUSH4 0x1F803AC3 EQ PUSH2 0x1C17 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B6B JUMPI DUP1 PUSH4 0x2B3935A6 EQ PUSH2 0x1B19 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AFD JUMPI DUP1 PUSH4 0x388727BC EQ PUSH2 0x1ABB JUMPI DUP1 PUSH4 0x3B7104F2 EQ PUSH2 0x1A9F JUMPI DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x1A32 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1A15 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x18F8 JUMPI DUP1 PUSH4 0x48DEC2A7 EQ PUSH2 0x18B5 JUMPI DUP1 PUSH4 0x57EA89B6 EQ PUSH2 0x172E JUMPI DUP1 PUSH4 0x5ED9EBFC EQ PUSH2 0x1710 JUMPI DUP1 PUSH4 0x68819F7A EQ PUSH2 0x16BE JUMPI DUP1 PUSH4 0x6B2D95D4 EQ PUSH2 0x169B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1678 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x161B JUMPI DUP1 PUSH4 0x762687CF EQ PUSH2 0x15F7 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x15C7 JUMPI DUP1 PUSH4 0x79FBE635 EQ PUSH2 0x1487 JUMPI DUP1 PUSH4 0x7AD59431 EQ PUSH2 0x1287 JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x1269 JUMPI DUP1 PUSH4 0x827037DB EQ PUSH2 0x124B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1222 JUMPI DUP1 PUSH4 0x8E58E76E EQ PUSH2 0x11D0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x10C8 JUMPI DUP1 PUSH4 0xA0821BE3 EQ PUSH2 0x109D JUMPI DUP1 PUSH4 0xA0CE9433 EQ PUSH2 0x1057 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xFAC JUMPI DUP1 PUSH4 0xAE3218BC EQ PUSH2 0xF2B JUMPI DUP1 PUSH4 0xB8E50CAB EQ PUSH2 0xF0D JUMPI DUP1 PUSH4 0xBA91778F EQ PUSH2 0xD57 JUMPI DUP1 PUSH4 0xBFDC33A8 EQ PUSH2 0xC59 JUMPI DUP1 PUSH4 0xCCB98FFC EQ PUSH2 0xBDF JUMPI DUP1 PUSH4 0xCD94B54B EQ PUSH2 0xBBC JUMPI DUP1 PUSH4 0xCF26D536 EQ PUSH2 0xB93 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xB42 JUMPI DUP1 PUSH4 0xE4F2487A EQ PUSH2 0xB1A JUMPI DUP1 PUSH4 0xE74F3FBB EQ PUSH2 0x9D5 JUMPI DUP1 PUSH4 0xED65AF74 EQ PUSH2 0x9AC JUMPI DUP1 PUSH4 0xEE6D12A6 EQ PUSH2 0x90F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x885 JUMPI DUP1 PUSH4 0xF5E34AC0 EQ PUSH2 0x29B JUMPI PUSH4 0xFDB20CCB EQ PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x25B PUSH2 0x1ECE JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x80 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x2 DUP4 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x879 JUMPI JUMPDEST ISZERO PUSH2 0x840 JUMPI PUSH2 0x2D2 PUSH2 0x2501 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO DUP1 PUSH2 0x4C5 JUMPI DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x832 JUMPI JUMPDEST DUP2 PUSH2 0x821 JUMPI JUMPDEST POP ISZERO PUSH2 0x7E5 JUMPI PUSH2 0x301 SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP3 PUSH2 0x310 PUSH1 0x2 DUP6 ADD SLOAD TIMESTAMP PUSH2 0x21F3 JUMP JUMPDEST SWAP2 CALLVALUE ISZERO SWAP2 DUP3 PUSH2 0x660 JUMPI POP DUP4 PUSH2 0x61B JUMPI DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH8 0xDE0B6B3A7640000 CALLVALUE MUL SWAP2 CALLVALUE DUP4 DIV PUSH8 0xDE0B6B3A7640000 EQ OR ISZERO PUSH2 0x5CC JUMPI PUSH2 0x34D SWAP2 PUSH2 0x1FED JUMP JUMPDEST SWAP3 JUMPDEST DUP4 ISZERO PUSH2 0x587 JUMPI DUP4 DUP2 SLOAD LT PUSH2 0x542 JUMPI PUSH1 0x5 SLOAD DUP5 SWAP1 PUSH2 0x374 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x224E JUMP JUMPDEST LT PUSH2 0x4F1 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH2 0x3BE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x11 SLOAD AND SWAP1 PUSH2 0x3B3 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x3A1 DUP5 PUSH2 0x1FA2 JUMP JUMPDEST DUP9 DUP5 MSTORE TIMESTAMP PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD PUSH2 0x229B JUMP JUMPDEST DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x23CD JUMP JUMPDEST PUSH2 0x3CC PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH2 0x1F32 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x3E9 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1F4B JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 CALLER DUP3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH2 0x40E DUP5 PUSH1 0xC SLOAD PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0x41C DUP5 DUP3 SLOAD PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH2 0x437 SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25CE JUMP JUMPDEST PUSH1 0xFF PUSH1 0x11 SLOAD AND SWAP2 PUSH1 0x7 DUP4 LT ISZERO PUSH2 0x4C5 JUMPI PUSH32 0x884543C08D36FB5C9B3B688DD0453C9F287199124BDBDDB3B7F9CA885A4D34A0 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x494 DUP6 DUP3 SLOAD PUSH2 0x21F3 JUMP JUMPDEST SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4BD JUMPI SWAP3 JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MSTORE CALLER SWAP2 PUSH1 0x60 SWAP1 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST POP CALLVALUE SWAP3 PUSH2 0x49E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E206F776E657227732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F636174656420746F6B656E73000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E74206D757374206265203E20300000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420424E42207072696365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073656E6420626F746820424E4220616E642055534454000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP5 SWAP2 POP POP DUP3 ISZERO PUSH2 0x7A0 JUMPI PUSH8 0xDE0B6B3A7640000 DUP4 MUL DUP4 DUP2 DIV PUSH8 0xDE0B6B3A7640000 SUB PUSH2 0x5CC JUMPI PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x694 SWAP2 PUSH2 0x1FED JUMP JUMPDEST SWAP4 DUP1 PUSH2 0x6FA JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x6C0 JUMPI DUP4 PUSH2 0x6BB SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x267D JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x115490CC8C081554D115081B9BDD081CD95D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 SUB PUSH2 0x75B JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x721 JUMPI DUP4 PUSH2 0x6BB SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x267D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1091540C8C081554D115081B9BDD081CD95D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F7274656420746F6B656E207374616E64617264000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5553445420616D6F756E74206D757374206265203E2030000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F206163746976652073616C65207068617365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x4C5 JUMPI PUSH1 0x6 DUP2 EQ ISZERO DUP6 PUSH2 0x2F2 JUMP JUMPDEST POP POP PUSH1 0x5 DUP2 EQ ISZERO PUSH1 0x0 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x49434F206973206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD TIMESTAMP GT ISZERO PUSH2 0x2C5 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x89E PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x8A6 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x8F9 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x928 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x9A0 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x96D JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x998 JUMPI JUMPDEST DUP2 PUSH2 0x987 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1FBE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x296 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x962 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x9EE PUSH2 0x2501 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x2 DUP2 ADD SLOAD TIMESTAMP LT PUSH2 0xA90 JUMPI PUSH2 0xA17 CALLER PUSH2 0x2020 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA3F JUMPI PUSH1 0x1 PUSH2 0xA38 SWAP3 ADD PUSH2 0xA2F DUP3 DUP3 SLOAD PUSH2 0x21F3 JUMP JUMPDEST SWAP1 SSTORE CALLER ADDRESS PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2076657374656420746F6B656E7320617661696C61626C6520746F20636C PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x61696D PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B20706572696F64206973207374696C6C206163746976650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20746F6B656E7320616C6C6F636174656420666F722076657374696E6700 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH2 0xB40 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1F95 JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xB5B PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0xB63 PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xB SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xBFB PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 GT ISZERO PUSH2 0xC0A JUMPI PUSH1 0xA SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xC72 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xC7E PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0xC94 DUP3 PUSH2 0x224E JUMP JUMPDEST LT PUSH2 0xD1E JUMPI DUP3 PUSH2 0xCA5 SWAP2 ADDRESS SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH2 0xCB1 PUSH1 0xE SLOAD TIMESTAMP PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x14 DUP4 MUL SWAP1 DUP4 DUP3 DIV PUSH1 0x14 EQ DUP5 ISZERO OR ISZERO PUSH2 0x5CC JUMPI PUSH1 0x3 SWAP3 PUSH1 0x40 MLOAD SWAP5 PUSH2 0xCD4 DUP7 PUSH2 0x1FA2 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x64 PUSH1 0x60 DUP8 ADD SWAP5 DIV DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 MLOAD DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7420656E6F75676820746F6B656E73 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xD70 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0xD7E PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 ISZERO PUSH2 0xEC8 JUMPI DUP3 ISZERO PUSH2 0xE8C JUMPI DUP2 ISZERO PUSH2 0xE47 JUMPI PUSH1 0x5 SLOAD DUP4 SWAP1 PUSH2 0xDB1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x224E JUMP JUMPDEST LT PUSH2 0xE03 JUMPI PUSH2 0xDC4 DUP4 PUSH2 0xE01 SWAP6 CALLER PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH2 0xDDB PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 TIMESTAMP PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0xDE8 DUP5 PUSH2 0x1FA2 JUMP JUMPDEST DUP4 MSTORE TIMESTAMP PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x6 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x23CD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E657220646F65736E2774206861766520656E6F75676820746F6B656E73 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F636B2074696D652073686F756C6420696E20667574757265000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x616D6F756E742073686F756C64206265203E203 PUSH1 0x64 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726563697069656E742061646472657373206973206E6F742076616C69640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xF44 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x80 SWAP2 PUSH2 0xF75 SWAP2 PUSH2 0x1F79 JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH2 0xFA5 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x3 PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xFC5 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 PUSH2 0xFD2 CALLER PUSH2 0x22BB JUMP JUMPDEST LT PUSH2 0xFEC JUMPI PUSH2 0xFE1 SWAP2 CALLER PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420756E6C6F636B65642062616C616E6365206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636175736520796F752068617665206E6F7420636C61696D6564207965740000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x106F PUSH2 0x1068 CALLDATASIZE PUSH2 0x1EFA JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1084 SWAP2 PUSH2 0x1F4B JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x10C0 PUSH2 0x10BB PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x22BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x11C6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x11B2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x118E JUMPI POP PUSH1 0x1 EQ PUSH2 0x112E JUMPI JUMPDEST PUSH2 0x112A DUP4 PUSH2 0x111E DUP2 DUP6 SUB DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1E85 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1174 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x111E PUSH2 0x110E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x115C JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x111E SWAP1 POP PUSH2 0x110E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x10F1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x296 JUMPI PUSH2 0x11F6 SWAP1 PUSH2 0x1F19 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x112A PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT DUP1 ISZERO PUSH2 0x296 JUMPI PUSH2 0x12AD PUSH2 0x2441 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xB SLOAD AND PUSH2 0x1432 JUMPI PUSH1 0x1 DUP3 EQ PUSH1 0x0 DUP2 PUSH2 0x1406 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x13DC JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x13AD JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x137E JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1350 JUMPI JUMPDEST POP ISZERO PUSH2 0x130B JUMPI ISZERO PUSH2 0x4C5 JUMPI PUSH2 0x1304 PUSH1 0x1 SWAP2 PUSH1 0xFF NOT PUSH1 0x11 SLOAD AND PUSH1 0xFF DUP3 AND OR PUSH1 0x11 SSTORE PUSH2 0x1F19 JUMP JUMPDEST ADD SLOAD PUSH1 0xD SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073616C65207068617365207472616E736974696F6E210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x4C5 JUMPI PUSH1 0x6 DUP3 EQ DUP1 PUSH2 0x1366 JUMPI JUMPDEST DUP4 PUSH2 0x12DF JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x4 EQ PUSH2 0x1360 JUMP JUMPDEST DUP1 SWAP2 POP PUSH2 0x4C5 JUMPI PUSH1 0x4 DUP4 EQ DUP1 PUSH2 0x1395 JUMPI JUMPDEST SWAP1 PUSH2 0x12D8 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x3 EQ PUSH2 0x138F JUMP JUMPDEST DUP1 SWAP2 POP PUSH2 0x4C5 JUMPI PUSH1 0x3 DUP4 EQ DUP1 PUSH2 0x13C4 JUMPI JUMPDEST SWAP1 PUSH2 0x12D1 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x2 EQ PUSH2 0x13BE JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 EQ DUP1 PUSH2 0x13EE JUMPI JUMPDEST SWAP1 PUSH2 0x12CA JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x1 EQ PUSH2 0x13E8 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x141E JUMPI ISZERO SWAP1 PUSH2 0x12C3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206368616E6765207068617365207768696C652049434F206973 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x81C185D5CD959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x1495 CALLDATASIZE PUSH2 0x1EFA JUMP JUMPDEST PUSH2 0x149D PUSH2 0x2441 JUMP JUMPDEST PUSH2 0x14A6 DUP3 PUSH2 0x1F19 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x158D JUMPI DUP1 PUSH1 0x2 PUSH2 0x14B8 DUP5 PUSH2 0x1F19 JUMP JUMPDEST ADD SSTORE PUSH2 0x14C3 DUP3 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP2 SLOAD DUP4 LT ISZERO PUSH2 0xE01 JUMPI PUSH2 0x14DA DUP4 DUP4 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x157F JUMPI PUSH2 0x150D DUP2 DUP6 PUSH2 0x1F79 JUMP JUMPDEST POP SLOAD ISZERO ISZERO DUP1 PUSH2 0x1551 JUMPI JUMPDEST SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x1526 JUMPI JUMPDEST ADD PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x153D DUP5 DUP4 PUSH2 0x1535 DUP5 DUP10 PUSH2 0x1F79 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x1549 DUP4 DUP9 PUSH2 0x1F79 JUMP JUMPDEST POP ADD SSTORE PUSH2 0x1520 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x2 PUSH2 0x1560 DUP4 DUP8 PUSH2 0x1F79 JUMP JUMPDEST POP ADD SLOAD AND SWAP1 PUSH1 0x7 DUP8 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x4C5 JUMPI SWAP1 DUP7 EQ PUSH2 0x1517 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP2 POP PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642073616C65207068617365 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xE01 PUSH2 0x15E3 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x15F2 DUP3 CALLER DUP4 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x246A JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1610 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x20 SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1634 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x10C0 PUSH2 0x1696 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x224E JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x10C0 PUSH2 0x16B9 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x2200 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x16D7 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x16DF PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16F3 DUP2 ISZERO ISZERO PUSH2 0x2094 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1747 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9A0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1883 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x1848 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x44 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x5 SLOAD AND PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9A0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1806 JUMPI JUMPDEST POP ISZERO PUSH2 0x17CF JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1DDA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1840 JUMPI JUMPDEST DUP2 PUSH2 0x181F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1FBE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x183C JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1839 JUMPI POP DUP2 PUSH2 0x17C7 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207573647420746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x18AD JUMPI JUMPDEST DUP2 PUSH2 0x189D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1FBE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1839 JUMPI POP MLOAD DUP3 PUSH2 0x1781 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1890 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x18D6 PUSH2 0x1ECE JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1911 PUSH2 0x2501 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x1996 JUMPI PUSH2 0x1938 DUP2 DUP4 PUSH2 0x1F79 JUMP JUMPDEST POP SLOAD ISZERO ISZERO DUP1 PUSH2 0x197E JUMPI JUMPDEST PUSH2 0x194F JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1925 JUMP JUMPDEST SWAP2 PUSH2 0x1968 PUSH1 0x1 SWAP2 PUSH2 0x1960 DUP6 DUP6 PUSH2 0x1F79 JUMP JUMPDEST POP SLOAD SWAP1 PUSH2 0x21F3 JUMP JUMPDEST SWAP3 PUSH1 0x0 PUSH2 0x1975 DUP3 DUP6 PUSH2 0x1F79 JUMP JUMPDEST POP SSTORE SWAP1 POP PUSH2 0x1947 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x198B DUP3 DUP5 PUSH2 0x1F79 JUMP JUMPDEST POP ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1942 JUMP JUMPDEST DUP3 DUP1 ISZERO PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20756E6C6F636B656420746F6B656E7320746F20636C61696D0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xE01 PUSH1 0x4 CALLDATALOAD CALLER PUSH2 0x246A JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1A4E PUSH2 0x2441 JUMP JUMPDEST TIMESTAMP DUP2 GT ISZERO PUSH2 0x1A5B JUMPI PUSH1 0x9 SSTORE STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D75737420626520696E2074686520667574757265 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x112A PUSH2 0x111E PUSH2 0x20D2 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1AD4 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO AND DUP1 SWAP2 PUSH1 0xFF NOT AND OR PUSH1 0xB SSTORE PUSH2 0x1AEE JUMPI STOP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1B32 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x1B3A PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B4E DUP2 ISZERO ISZERO PUSH2 0x2094 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1B84 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x1B8C PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 PUSH2 0x1B9A DUP5 PUSH2 0x22BB JUMP JUMPDEST LT PUSH2 0x1BB3 JUMPI PUSH2 0xFE1 SWAP3 PUSH2 0x1BAE DUP4 CALLER DUP4 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520746F6B656E7320617265207374696C6C206C6F636B6564206F722079 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1BDD481A185D995B89DD0818DB185A5B5959081E595D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x10C0 PUSH2 0x1C35 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x2020 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1C53 PUSH2 0x2441 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x1C78 JUMPI PUSH1 0x5 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 CALL ISZERO PUSH2 0x9A0 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20424E4220617661696C61626C6520696E20636F6E747261637400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1CF4 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1D77 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1D61 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1E42 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x11B2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x118E JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DE2 JUMPI PUSH2 0x112A DUP4 PUSH2 0x111E DUP2 DUP6 SUB DUP3 PUSH2 0x1FBE JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1E28 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x111E PUSH2 0x110E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1E10 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1DB6 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xE SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1EB8 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x296 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1F63 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1F63 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x4C5 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4DB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4DB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x5CC JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1FF7 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x5CC JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 TIMESTAMP DUP3 GT PUSH2 0x208D JUMPI PUSH2 0x206B PUSH2 0x2060 PUSH2 0x2057 PUSH2 0x2081 SWAP5 TIMESTAMP PUSH2 0x1FE0 JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD SWAP1 PUSH2 0x200D JUMP JUMPDEST SWAP1 DUP1 SLOAD DUP1 DUP4 GT PUSH2 0x2084 JUMPI JUMPDEST POP PUSH1 0x1 ADD SLOAD SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH2 0x2076 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x209B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0xB SLOAD AND PUSH2 0x21B8 JUMPI PUSH1 0x9 SLOAD DUP1 ISZERO DUP1 ISZERO PUSH2 0x21AE JUMPI JUMPDEST PUSH2 0x219F JUMPI TIMESTAMP LT ISZERO DUP1 PUSH2 0x2193 JUMPI JUMPDEST PUSH2 0x2168 JUMPI PUSH1 0xA SLOAD TIMESTAMP GT PUSH2 0x213D JUMPI PUSH1 0x40 MLOAD PUSH2 0x2110 PUSH1 0x40 DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH32 0x49434F20686173206E6F74207374617274656420796574000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214B PUSH1 0x40 DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0xD DUP2 MSTORE PUSH13 0x1250D3C81A185CC8195B991959 PUSH1 0x9A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2176 PUSH1 0x40 DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0xD DUP2 MSTORE PUSH13 0x49434F20697320616374697665 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0xA SLOAD TIMESTAMP GT ISZERO PUSH2 0x20F5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2110 PUSH1 0x40 DUP3 PUSH2 0x1FBE JUMP JUMPDEST POP PUSH1 0xA SLOAD ISZERO PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C6 PUSH1 0x40 DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x1F DUP2 MSTORE PUSH32 0x49434F206973206D616E75616C6C7920706175736564206279206F776E657200 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5CC JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD TIMESTAMP DUP2 GT PUSH2 0x2249 JUMPI SWAP1 PUSH2 0x2237 PUSH2 0x2060 PUSH2 0x2057 PUSH2 0x2081 SWAP5 TIMESTAMP PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 SLOAD DUP1 DUP3 GT ISZERO PUSH2 0x1FE0 JUMPI SWAP1 POP DUP1 PUSH2 0x1FE0 JUMP JUMPDEST POP SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x10 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH2 0x2081 SWAP4 SWAP3 SWAP2 DUP2 PUSH2 0x2283 JUMPI JUMPDEST POP POP PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x2293 SWAP3 SWAP4 POP PUSH1 0x1 ADD SLOAD SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 CODESIZE DUP1 PUSH2 0x227C JUMP JUMPDEST PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x4C5 JUMPI MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1F63 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x23B9 JUMPI PUSH1 0x40 MLOAD SWAP5 PUSH2 0x22FB PUSH1 0x20 DUP4 PUSH1 0x5 SHL ADD DUP8 PUSH2 0x1FBE JUMP JUMPDEST DUP2 DUP7 MSTORE DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 DUP5 SWAP2 DUP8 ADD JUMPDEST DUP4 DUP4 LT PUSH2 0x236E JUMPI POP POP POP POP DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x235A JUMPI PUSH2 0x232A DUP2 DUP7 PUSH2 0x22A7 JUMP JUMPDEST MLOAD MLOAD PUSH2 0x2339 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2317 JUMP JUMPDEST SWAP2 PUSH2 0x2352 PUSH1 0x1 SWAP2 PUSH2 0x234A DUP6 DUP9 PUSH2 0x22A7 JUMP JUMPDEST MLOAD MLOAD SWAP1 PUSH2 0x21F3 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x2331 JUMP JUMPDEST POP SWAP3 POP PUSH2 0x2369 PUSH2 0x2081 SWAP3 PUSH2 0x224E JUMP JUMPDEST PUSH2 0x1FE0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x2381 DUP2 PUSH2 0x1FA2 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE PUSH2 0x23A1 PUSH1 0xFF PUSH1 0x2 DUP9 ADD SLOAD AND PUSH1 0x40 DUP4 ADD PUSH2 0x229B JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x230A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x23EA SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1F79 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x242B JUMPI DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SWAP2 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x3 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2455 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x24EB JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x24D2 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x2512 JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP3 SWAP2 SWAP1 PUSH1 0x0 NOT DUP5 LT PUSH2 0x255F JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x25A9 JUMPI DUP1 ISZERO PUSH2 0x1D77 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1D61 JUMPI PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2559 JUMP JUMPDEST POP DUP3 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x24EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2667 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x264D JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x26C5 PUSH1 0x84 DUP3 PUSH2 0x1FBE JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x9A0 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x270E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x26ED JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x26E6 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ",
              "sourceMap": "369:15010:13:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;;369:15010:13;;;;;;;:::i;:::-;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;-1:-1:-1;;;;;369:15010:13;;;;;;;;;;;;;;;;-1:-1:-1;369:15010:13;;;;;;;;;;;-1:-1:-1;369:15010:13;;;;;;;;;;;;;;;;-1:-1:-1;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;369:15010:13;;;;1690:17:5;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;369:15010:13;;;;;;;;;;;;;;;;;;;1690:17:5;369:15010:13;;2523:10;1273:26:0;1269:95;;3004:6;369:15010:13;;2523:10;-1:-1:-1;;;;;;369:15010:13;;;;;;;;;;;2523:10;-1:-1:-1;;;;;369:15010:13;3052:40:0;-1:-1:-1;;3052:40:0;369:15010:13;2061:21:11;369:15010:13;907:9;;369:15010;955:9;;369:15010;-1:-1:-1;;;;;369:15010:13;;2557:24;;;;:52;;369:15010;;;;;;;;;;;2646:30;369:15010;;;2646:30;369:15010;;;;;;;;;;;;;2686:30;369:15010;;;2686:30;369:15010;-1:-1:-1;6233:21:5;369:15010:13;;;;;;;;;6233:21:5;369:15010:13;2523:10;;-1:-1:-1;369:15010:13;-1:-1:-1;369:15010:13;;;-1:-1:-1;369:15010:13;;;;;;;;;;;;-1:-1:-1;7083:25:5;369:15010:13;2523:10;7083:25:5;;369:15010:13;;:::i;:::-;;;;3047:10;369:15010;2982:107;;;369:15010;;;3071:8;369:15010;2982:107;;369:15010;;;;-1:-1:-1;369:15010:13;2780:2:5;369:15010:13;;;;;;;;;;;;;;;:::i;:::-;;;;3197:10;369:15010;3132:107;;;369:15010;;;3071:8;369:15010;3132:107;;369:15010;;;6233:21:5;-1:-1:-1;369:15010:13;2780:2:5;369:15010:13;;;;;;;;;;;;;;;:::i;:::-;;;;3347:10;369:15010;3282:107;;;369:15010;;;3071:8;369:15010;3282:107;;369:15010;;;;-1:-1:-1;369:15010:13;2780:2:5;369:15010:13;;;;;;;;;;;;;;;:::i;:::-;;;;3498:11;369:15010;3434:107;;;369:15010;;;3071:8;369:15010;3434:107;;;369:15010;;;1690:17:5;-1:-1:-1;369:15010:13;2780:2:5;369:15010:13;;;;;;;;;;;;;;;3563:32;369:15010;;-1:-1:-1;;369:15010:13;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;1690:17:5;369:15010:13;;;;;-1:-1:-1;;;369:15010:13;;;1690:17:5;369:15010:13;;;;;;;;;;;;;;;;2557:52;-1:-1:-1;;;;;;369:15010:13;;2585:24;;2557:52;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1690:17:5;369:15010:13;;-1:-1:-1;1322:31:0;369:15010:13;;;;-1:-1:-1;369:15010:13;;;;;;;;;;1690:17:5;-1:-1:-1;369:15010:13;;-1:-1:-1;369:15010:13;;-1:-1:-1;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;1690:17:5;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:17:5;-1:-1:-1;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;369:15010:13;;;;;;;;;-1:-1:-1;369:15010:13;;;;;;;;-1:-1:-1;369:15010:13;;1690:17:5;369:15010:13;;-1:-1:-1;369:15010:13;;;;;;;;;;;;-1:-1:-1;369:15010:13;;1690:17:5;369:15010:13;;-1:-1:-1;369:15010:13;;;;;-1:-1:-1;369:15010:13;;;;;;;;;;;-1:-1:-1;369:15010:13;;-1:-1:-1;369:15010:13;;-1:-1:-1;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;369:15010:13;;;;;;;;;-1:-1:-1;369:15010:13;;;;;;;;;;;;-1:-1:-1;369:15010:13;;;;;;;;;-1:-1:-1;;;;;369:15010:13;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;369:15010:13;;;-1:-1:-1;;;;;369:15010:13;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;369:15010:13;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 7886,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_32020": {
                  "entryPoint": 7908,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_enum_SalePhaset_uint256": {
                  "entryPoint": 7930,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "abi_encode_enum_SalePhase": {
                  "entryPoint": 8085,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 7813,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "array_push_from_struct_LockingSchedule_to_array_struct_LockingSchedule_storage_dyn_ptr": {
                  "entryPoint": 9165,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "checked_add_uint256": {
                  "entryPoint": 8691,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 8173,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 8205,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 8160,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 8126,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_32042": {
                  "entryPoint": 8098,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_availableBalance": {
                  "entryPoint": 8891,
                  "id": 2544,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_balanceOf": {
                  "entryPoint": 8782,
                  "id": 2796,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_burn": {
                  "entryPoint": 9322,
                  "id": 762,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 9281,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_checkStatus": {
                  "entryPoint": 8402,
                  "id": 2585,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_getLockedTokens": {
                  "entryPoint": 8704,
                  "id": 2855,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_getUnlockedTokens": {
                  "entryPoint": 8224,
                  "id": 2913,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 9473,
                  "id": 1527,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_safeTransferFrom": {
                  "entryPoint": 9853,
                  "id": 1111,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_spendAllowance": {
                  "entryPoint": 9507,
                  "id": 888,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 9678,
                  "id": 619,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "mapping_index_access_mapping_enum_SalePhase_struct_SalePhaseInfo_storage_of_enum_SalePhase": {
                  "entryPoint": 7961,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_enum_SalePhase_struct_SalePhaseInfo_storage_of_enum_SalePhase_32032": {
                  "entryPoint": 7986,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_struct_LockingSchedule_dyn": {
                  "entryPoint": 8871,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "require_helper_stringliteral": {
                  "entryPoint": 8340,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 8011,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_LockingSchedule__dyn": {
                  "entryPoint": 8057,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "write_to_memory_enum_SalePhase": {
                  "entryPoint": 8859,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c9081630455444314611e6a575080630563451a14611e4c57806306fdde0314611d8d578063095ea7b314611cdb57806318160ddd14611cbd5780631d111d1314611c3a5780631f803ac314611c1757806323b872dd14611b6b5780632b3935a614611b19578063313ce56714611afd578063388727bc14611abb5780633b7104f214611a9f5780633e0a322d14611a3257806342966c6814611a1557806348c54b9d146118f857806348dec2a7146118b557806357ea89b61461172e5780635ed9ebfc1461171057806368819f7a146116be5780636b2d95d41461169b57806370a0823114611678578063715018a61461161b578063762687cf146115f757806379cc6790146115c757806379fbe635146114875780637ad59431146112875780637ff9b59614611269578063827037db1461124b5780638da5cb5b146112225780638e58e76e146111d057806395d89b41146110c8578063a0821be31461109d578063a0ce943314611057578063a9059cbb14610fac578063ae3218bc14610f2b578063b8e50cab14610f0d578063ba91778f14610d57578063bfdc33a814610c59578063ccb98ffc14610bdf578063cd94b54b14610bbc578063cf26d53614610b93578063dd62ed3e14610b42578063e4f2487a14610b1a578063e74f3fbb146109d5578063ed65af74146109ac578063ee6d12a61461090f578063f2fde38b14610885578063f5e34ac01461029b5763fdb20ccb1461023a57600080fd5b34610296576020366003190112610296576001600160a01b0361025b611ece565b166000526010602052608060406000208054906001810154906003600282015491015491604051938452602084015260408301526060820152f35b600080fd5b60603660031901126102965760443560043560243560028310156102965760095442101580610879575b15610840576102d2612501565b60ff601154166007811015806104c5578115159081610832575b81610821575b50156107e55761030190611f19565b926103106002850154426121f3565b913415918261066057508361061b5780156105e257670de0b6b3a7640000340291348304670de0b6b3a76400001417156105cc5761034d91611fed565b925b83156105875783815410610542576005548490610374906001600160a01b031661224e565b106104f1573360005260136020526103be604060002060ff60115416906103b3604051926103a184611fa2565b8884524260208501526040840161229b565b8460608301526123cd565b6103cc60ff60115416611f32565b8054600160401b8110156104db576103e991600182018155611f4b565b81549060031b9033821b9160018060a01b03901b191617905561040e84600c546121f3565b600c5561041c848254611fe0565b905560055461043790849033906001600160a01b03166125ce565b60ff601154169160078310156104c5577f884543c08d36fb5c9b3b688dd0453c9f287199124bdbddb3b7f9ca885a4d34a09233600052601560205260406000205533600052601560205260016040600020016104948582546121f3565b905580156104bd57925b6040805194855260208501919091528301523391606090a26001600655005b50349261049e565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4e6f7420656e6f75676820746f6b656e7320696e206f776e657227732062616c604482015263616e636560e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420616c6c6f636174656420746f6b656e730000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f546f6b656e20616d6f756e74206d757374206265203e203000000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c696420424e4220707269636560781b6044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f742073656e6420626f746820424e4220616e6420555344540000006044820152606490fd5b9491505082156107a057670de0b6b3a76400008302838104670de0b6b3a7640000036105cc57600182015461069491611fed565b93806106fa57506007546001600160a01b031680156106c057836106bb913090339061267d565b61034f565b60405162461bcd60e51b8152602060048201526012602482015271115490cc8c081554d115081b9bdd081cd95d60721b6044820152606490fd5b60010361075b576008546001600160a01b0316801561072157836106bb913090339061267d565b60405162461bcd60e51b81526020600482015260126024820152711091540c8c081554d115081b9bdd081cd95d60721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f556e737570706f7274656420746f6b656e207374616e646172640000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f5553445420616d6f756e74206d757374206265203e20300000000000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e6f206163746976652073616c6520706861736560601b6044820152606490fd5b90506104c5576006811415856102f2565b5050600581141560006102ec565b60405162461bcd60e51b815260206004820152601160248201527049434f206973206e6f742061637469766560781b6044820152606490fd5b50600a544211156102c5565b346102965760203660031901126102965761089e611ece565b6108a6612441565b6001600160a01b031680156108f957600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461029657600036600319011261029657610928612441565b6007546040516370a0823160e01b815230600482015290602090829060249082906001600160a01b03165afa80156109a05760009061096d575b602090604051908152f35b506020813d602011610998575b8161098760209383611fbe565b810103126102965760209051610962565b3d915061097a565b6040513d6000823e3d90fd5b34610296576000366003190112610296576007546040516001600160a01b039091168152602090f35b34610296576000366003190112610296576109ee612501565b3360005260106020526040600020805415610ad55760028101544210610a9057610a1733612020565b8015610a3f576001610a389201610a2f8282546121f3565b905533306125ce565b6001600655005b60405162461bcd60e51b815260206004820152602360248201527f4e6f2076657374656420746f6b656e7320617661696c61626c6520746f20636c60448201526261696d60e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601b60248201527f4c6f636b20706572696f64206973207374696c6c2061637469766500000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4e6f20746f6b656e7320616c6c6f636174656420666f722076657374696e67006044820152606490fd5b3461029657600036600319011261029657602060ff60115416610b406040518092611f95565bf35b3461029657604036600319011261029657610b5b611ece565b610b63611ee4565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b34610296576000366003190112610296576008546040516001600160a01b039091168152602090f35b3461029657600036600319011261029657602060ff600b54166040519015158152f35b3461029657602036600319011261029657600435610bfb612441565b600954811115610c0a57600a55005b60405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608490fd5b3461029657604036600319011261029657610c72611ece565b60243590610c7e612441565b6005546001600160a01b031682610c948261224e565b10610d1e5782610ca59130906125ce565b610cb1600e54426121f3565b6014830290838204601414841517156105cc5760039260405194610cd486611fa2565b8552602085019060008252604086019283526064606087019404845260018060a01b0316600052601060205260406000209451855551600185015551600284015551910155600080f35b60405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b6044820152606490fd5b3461029657606036600319011261029657610d70611ece565b602435604435610d7e612441565b6001600160a01b0383168015610ec8578215610e8c578115610e47576005548390610db1906001600160a01b031661224e565b10610e0357610dc483610e0195336125ce565b6000526013602052610ddb604060002091426121f3565b60405192610de884611fa2565b83524260208401526006604084015260608301526123cd565b005b606460405162461bcd60e51b815260206004820152602060248201527f6f776e657220646f65736e2774206861766520656e6f75676820746f6b656e736044820152fd5b60405162461bcd60e51b815260206004820152601a60248201527f6c6f636b2074696d652073686f756c6420696e206675747572650000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152730616d6f756e742073686f756c64206265203e20360641b6044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f726563697069656e742061646472657373206973206e6f742076616c696400006044820152606490fd5b34610296576000366003190112610296576020600f54604051908152f35b3461029657604036600319011261029657610f44611ece565b6001600160a01b031660009081526013602052604090208054602435919082101561029657608091610f7591611f79565b50805490610fa5600182015491600360ff6002830154169101549260405194855260208501526040840190611f95565b6060820152f35b3461029657604036600319011261029657610fc5611ece565b60243580610fd2336122bb565b10610fec57610fe191336125ce565b602060405160018152f35b60405162461bcd60e51b815260206004820152603e60248201527f496e73756666696369656e7420756e6c6f636b65642062616c616e636520626560448201527f636175736520796f752068617665206e6f7420636c61696d65642079657400006064820152608490fd5b346102965761106f61106836611efa565b9190611f32565b80548210156102965760209161108491611f4b565b905460405160039290921b1c6001600160a01b03168152f35b346102965760203660031901126102965760206110c06110bb611ece565b6122bb565b604051908152f35b346102965760003660031901126102965760405160006004548060011c906001811680156111c6575b6020831081146111b25782855290811561118e575060011461112e575b61112a8361111e81850382611fbe565b60405191829182611e85565b0390f35b91905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b916000905b8082106111745750909150810160200161111e61110e565b91926001816020925483858801015201910190929161115c565b60ff191660208086019190915291151560051b8401909101915061111e905061110e565b634e487b7160e01b84526022600452602484fd5b91607f16916110f1565b34610296576020366003190112610296576004356007811015610296576111f690611f19565b805461112a60026001840154930154604051938493846040919493926060820195825260208201520152565b34610296576000366003190112610296576005546040516001600160a01b039091168152602090f35b34610296576000366003190112610296576020600954604051908152f35b34610296576000366003190112610296576020600d54604051908152f35b3461029657602036600319011261029657600435600781108015610296576112ad612441565b60ff600b54166114325760018214600081611406575b81156113dc575b81156113ad575b811561137e575b8115611350575b501561130b57156104c55761130460019160ff196011541660ff821617601155611f19565b0154600d55005b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642073616c65207068617365207472616e736974696f6e2100006044820152606490fd5b90506104c5576006821480611366575b836112df565b5060ff6011541660078110156104c557600414611360565b8091506104c5576004831480611395575b906112d8565b5060ff6011541660078110156104c55760031461138f565b8091506104c55760038314806113c4575b906112d1565b5060ff6011541660078110156104c5576002146113be565b905060028314806113ee575b906112ca565b5060ff6011541660078110156104c5576001146113e8565b905060ff60115416600781101561141e5715906112c3565b634e487b7160e01b82526021600452602482fd5b60405162461bcd60e51b815260206004820152602760248201527f43616e6e6f74206368616e6765207068617365207768696c652049434f206973604482015266081c185d5cd95960ca1b6064820152608490fd5b346102965761149536611efa565b61149d612441565b6114a682611f19565b541561158d578060026114b884611f19565b01556114c382611f32565b6000915b8154831015610e01576114da8383611f4b565b60018060a01b0391549060031b1c16600052601360205260406000209160005b835481101561157f5761150d8185611f79565b5054151580611551575b90600191611526575b016114fa565b61153d84836115358489611f79565b5001546121f3565b60036115498388611f79565b500155611520565b5060ff60026115608387611f79565b500154169060078710156104c55760078210156104c557908614611517565b5060019093019291506114c7565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c69642073616c6520706861736560701b6044820152606490fd5b3461029657604036600319011261029657610e016115e3611ece565b602435906115f2823383612523565b61246a565b3461029657600036600319011261029657611610612441565b602047604051908152f35b3461029657600036600319011261029657611634612441565b600580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102965760203660031901126102965760206110c0611696611ece565b61224e565b346102965760203660031901126102965760206110c06116b9611ece565b612200565b34610296576020366003190112610296576116d7611ece565b6116df612441565b6001600160a01b03166116f3811515612094565b6bffffffffffffffffffffffff60a01b6008541617600855600080f35b34610296576000366003190112610296576020600c54604051908152f35b3461029657600036600319011261029657611747612441565b6007546040516370a0823160e01b81523060048201526001600160a01b0390911690602081602481855afa9081156109a057600091611883575b50801561184857602090604460018060a01b03600554166000604051958694859363a9059cbb60e01b8552600485015260248401525af19081156109a057600091611806575b50156117cf57005b60405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b6044820152606490fd5b6020813d602011611840575b8161181f60209383611fbe565b8101031261183c57519081151582036118395750816117c7565b80fd5b5080fd5b3d9150611812565b60405162461bcd60e51b81526020600482015260136024820152724e6f207573647420746f20776974686472617760681b6044820152606490fd5b906020823d6020116118ad575b8161189d60209383611fbe565b8101031261183957505182611781565b3d9150611890565b34610296576020366003190112610296576001600160a01b036118d6611ece565b1660005260156020526040806000206001815491015482519182526020820152f35b3461029657600036600319011261029657611911612501565b336000526013602052604060002060009060005b8154811015611996576119388183611f79565b505415158061197e575b61194f575b600101611925565b916119686001916119608585611f79565b5054906121f3565b9260006119758285611f79565b50559050611947565b50600361198b8284611f79565b500154421015611942565b8280156119d0576040519081527f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43060203392a26001600655005b60405162461bcd60e51b815260206004820152601b60248201527f4e6f20756e6c6f636b656420746f6b656e7320746f20636c61696d00000000006044820152606490fd5b3461029657602036600319011261029657610e016004353361246a565b3461029657602036600319011261029657600435611a4e612441565b42811115611a5b57600955005b606460405162461bcd60e51b815260206004820152602060248201527f53746172742074696d65206d75737420626520696e20746865206675747572656044820152fd5b346102965760003660031901126102965761112a61111e6120d2565b3461029657600036600319011261029657611ad4612441565b600b5460ff8082161516809160ff191617600b55611aee57005b6011805460ff19166005179055005b3461029657600036600319011261029657602060405160128152f35b3461029657602036600319011261029657611b32611ece565b611b3a612441565b6001600160a01b0316611b4e811515612094565b6bffffffffffffffffffffffff60a01b6007541617600755600080f35b3461029657606036600319011261029657611b84611ece565b611b8c611ee4565b6044359081611b9a846122bb565b10611bb357610fe192611bae833383612523565b6125ce565b60405162461bcd60e51b815260206004820152603660248201527f596f7520746f6b656e7320617265207374696c6c206c6f636b6564206f7220796044820152751bdd481a185d995b89dd0818db185a5b5959081e595d60521b6064820152608490fd5b346102965760203660031901126102965760206110c0611c35611ece565b612020565b3461029657600036600319011261029657611c53612441565b478015611c78576005546000918291829182916001600160a01b031682f1156109a057005b60405162461bcd60e51b815260206004820152601c60248201527f4e6f20424e4220617661696c61626c6520696e20636f6e7472616374000000006044820152606490fd5b34610296576000366003190112610296576020600254604051908152f35b3461029657604036600319011261029657611cf4611ece565b602435903315611d77576001600160a01b0316908115611d6157336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b346102965760003660031901126102965760405160006003548060011c90600181168015611e42575b6020831081146111b25782855290811561118e5750600114611de25761112a8361111e81850382611fbe565b91905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b916000905b808210611e285750909150810160200161111e61110e565b919260018160209254838588010152019101909291611e10565b91607f1691611db6565b34610296576000366003190112610296576020600a54604051908152f35b3461029657600036600319011261029657602090600e548152f35b91909160208152825180602083015260005b818110611eb8575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201611e97565b600435906001600160a01b038216820361029657565b602435906001600160a01b038216820361029657565b6040906003190112610296576004356007811015610296579060243590565b60078110156104c5576000526012602052604060002090565b60078110156104c5576000526014602052604060002090565b8054821015611f635760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015611f635760005260206000209060021b0190600090565b9060078210156104c55752565b6080810190811067ffffffffffffffff8211176104db57604052565b90601f8019910116810190811067ffffffffffffffff8211176104db57604052565b919082039182116105cc57565b8115611ff7570490565b634e487b7160e01b600052601260045260246000fd5b818102929181159184041417156105cc57565b6001600160a01b0316600090815260106020526040902060028101549042821161208d5761206b6120606120576120819442611fe0565b600f5490611fed565b60038301549061200d565b908054808311612084575b506001015490611fe0565b90565b91506001612076565b5050600090565b1561209b57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b60ff600b54166121b857600954801580156121ae575b61219f5742101580612193575b61216857600a54421161213d57604051612110604082611fbe565b601781527f49434f20686173206e6f74207374617274656420796574000000000000000000602082015290565b60405161214b604082611fbe565b600d81526c1250d3c81a185cc8195b991959609a1b602082015290565b604051612176604082611fbe565b600d81526c49434f2069732061637469766560981b602082015290565b50600a544211156120f5565b50604051612110604082611fbe565b50600a54156120e8565b6040516121c6604082611fbe565b601f81527f49434f206973206d616e75616c6c7920706175736564206279206f776e657200602082015290565b919082018092116105cc57565b6001600160a01b03166000908152601060205260409020600281015442811161224957906122376120606120576120819442611fe0565b905480821115611fe057905080611fe0565b505490565b6001600160a01b03166000908152602081815260408083205460109092528220805461208193929181612283575b50506121f3565b6122939293506001015490611fe0565b90388061227c565b60078210156104c55752565b8051821015611f635760209160051b010190565b6001600160a01b0381166000908152601360205260408120805490939067ffffffffffffffff81116123b957604051946122fb60208360051b0187611fbe565b81865283526020808420849187015b83831061236e5750505050815b845181101561235a5761232a81866122a7565b5151612339575b600101612317565b9161235260019161234a85886122a7565b5151906121f3565b929050612331565b5092506123696120819261224e565b611fe0565b6004602060019260405161238181611fa2565b8554815284860154838201526123a160ff6002880154166040830161229b565b6003860154606082015281520192019201919061230a565b634e487b7160e01b83526041600452602483fd5b8054600160401b8110156104db576123ea91600182018155611f79565b91909161242b5780518255602081015160018301556040810151600283019160078210156104c55760039260609260ff801983541691161790550151910155565b634e487b7160e01b600052600060045260246000fd5b6005546001600160a01b0316330361245557565b63118cdaa760e01b6000523360045260246000fd5b6001600160a01b031680156124eb576000918183528260205260408320548181106124d257817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b6064939263391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b600260065414612512576002600655565b633ee5aeb560e01b60005260046000fd5b6001600160a01b03908116600081815260016020908152604080832094861683529390529190912054929190600019841061255f575b50505050565b8284106125a9578015611d77576001600160a01b03821615611d6157600052600160205260406000209060018060a01b031660005260205260406000209103905538808080612559565b508290637dc7a0d960e11b60005260018060a01b031660045260245260445260646000fd5b6001600160a01b03169081156124eb576001600160a01b031691821561266757600082815280602052604081205482811061264d5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b63ec442f0560e01b600052600060045260246000fd5b6040516323b872dd60e01b60208083019182526001600160a01b03948516602484015294909316604482015260648082019590955293845292600091906126c5608482611fbe565b519082855af1156109a0576000513d61270e57506001600160a01b0381163b155b6126ed5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b600114156126e656fea164736f6c634300081c000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4554443 EQ PUSH2 0x1E6A JUMPI POP DUP1 PUSH4 0x563451A EQ PUSH2 0x1E4C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D8D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CDB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CBD JUMPI DUP1 PUSH4 0x1D111D13 EQ PUSH2 0x1C3A JUMPI DUP1 PUSH4 0x1F803AC3 EQ PUSH2 0x1C17 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B6B JUMPI DUP1 PUSH4 0x2B3935A6 EQ PUSH2 0x1B19 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AFD JUMPI DUP1 PUSH4 0x388727BC EQ PUSH2 0x1ABB JUMPI DUP1 PUSH4 0x3B7104F2 EQ PUSH2 0x1A9F JUMPI DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x1A32 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1A15 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x18F8 JUMPI DUP1 PUSH4 0x48DEC2A7 EQ PUSH2 0x18B5 JUMPI DUP1 PUSH4 0x57EA89B6 EQ PUSH2 0x172E JUMPI DUP1 PUSH4 0x5ED9EBFC EQ PUSH2 0x1710 JUMPI DUP1 PUSH4 0x68819F7A EQ PUSH2 0x16BE JUMPI DUP1 PUSH4 0x6B2D95D4 EQ PUSH2 0x169B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1678 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x161B JUMPI DUP1 PUSH4 0x762687CF EQ PUSH2 0x15F7 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x15C7 JUMPI DUP1 PUSH4 0x79FBE635 EQ PUSH2 0x1487 JUMPI DUP1 PUSH4 0x7AD59431 EQ PUSH2 0x1287 JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x1269 JUMPI DUP1 PUSH4 0x827037DB EQ PUSH2 0x124B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1222 JUMPI DUP1 PUSH4 0x8E58E76E EQ PUSH2 0x11D0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x10C8 JUMPI DUP1 PUSH4 0xA0821BE3 EQ PUSH2 0x109D JUMPI DUP1 PUSH4 0xA0CE9433 EQ PUSH2 0x1057 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xFAC JUMPI DUP1 PUSH4 0xAE3218BC EQ PUSH2 0xF2B JUMPI DUP1 PUSH4 0xB8E50CAB EQ PUSH2 0xF0D JUMPI DUP1 PUSH4 0xBA91778F EQ PUSH2 0xD57 JUMPI DUP1 PUSH4 0xBFDC33A8 EQ PUSH2 0xC59 JUMPI DUP1 PUSH4 0xCCB98FFC EQ PUSH2 0xBDF JUMPI DUP1 PUSH4 0xCD94B54B EQ PUSH2 0xBBC JUMPI DUP1 PUSH4 0xCF26D536 EQ PUSH2 0xB93 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xB42 JUMPI DUP1 PUSH4 0xE4F2487A EQ PUSH2 0xB1A JUMPI DUP1 PUSH4 0xE74F3FBB EQ PUSH2 0x9D5 JUMPI DUP1 PUSH4 0xED65AF74 EQ PUSH2 0x9AC JUMPI DUP1 PUSH4 0xEE6D12A6 EQ PUSH2 0x90F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x885 JUMPI DUP1 PUSH4 0xF5E34AC0 EQ PUSH2 0x29B JUMPI PUSH4 0xFDB20CCB EQ PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x25B PUSH2 0x1ECE JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x80 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x2 DUP4 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x879 JUMPI JUMPDEST ISZERO PUSH2 0x840 JUMPI PUSH2 0x2D2 PUSH2 0x2501 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO DUP1 PUSH2 0x4C5 JUMPI DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x832 JUMPI JUMPDEST DUP2 PUSH2 0x821 JUMPI JUMPDEST POP ISZERO PUSH2 0x7E5 JUMPI PUSH2 0x301 SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP3 PUSH2 0x310 PUSH1 0x2 DUP6 ADD SLOAD TIMESTAMP PUSH2 0x21F3 JUMP JUMPDEST SWAP2 CALLVALUE ISZERO SWAP2 DUP3 PUSH2 0x660 JUMPI POP DUP4 PUSH2 0x61B JUMPI DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH8 0xDE0B6B3A7640000 CALLVALUE MUL SWAP2 CALLVALUE DUP4 DIV PUSH8 0xDE0B6B3A7640000 EQ OR ISZERO PUSH2 0x5CC JUMPI PUSH2 0x34D SWAP2 PUSH2 0x1FED JUMP JUMPDEST SWAP3 JUMPDEST DUP4 ISZERO PUSH2 0x587 JUMPI DUP4 DUP2 SLOAD LT PUSH2 0x542 JUMPI PUSH1 0x5 SLOAD DUP5 SWAP1 PUSH2 0x374 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x224E JUMP JUMPDEST LT PUSH2 0x4F1 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH2 0x3BE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x11 SLOAD AND SWAP1 PUSH2 0x3B3 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x3A1 DUP5 PUSH2 0x1FA2 JUMP JUMPDEST DUP9 DUP5 MSTORE TIMESTAMP PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD PUSH2 0x229B JUMP JUMPDEST DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x23CD JUMP JUMPDEST PUSH2 0x3CC PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH2 0x1F32 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x3E9 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1F4B JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 CALLER DUP3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH2 0x40E DUP5 PUSH1 0xC SLOAD PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0x41C DUP5 DUP3 SLOAD PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH2 0x437 SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25CE JUMP JUMPDEST PUSH1 0xFF PUSH1 0x11 SLOAD AND SWAP2 PUSH1 0x7 DUP4 LT ISZERO PUSH2 0x4C5 JUMPI PUSH32 0x884543C08D36FB5C9B3B688DD0453C9F287199124BDBDDB3B7F9CA885A4D34A0 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x494 DUP6 DUP3 SLOAD PUSH2 0x21F3 JUMP JUMPDEST SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4BD JUMPI SWAP3 JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MSTORE CALLER SWAP2 PUSH1 0x60 SWAP1 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST POP CALLVALUE SWAP3 PUSH2 0x49E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E206F776E657227732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F636174656420746F6B656E73000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E74206D757374206265203E20300000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420424E42207072696365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073656E6420626F746820424E4220616E642055534454000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP5 SWAP2 POP POP DUP3 ISZERO PUSH2 0x7A0 JUMPI PUSH8 0xDE0B6B3A7640000 DUP4 MUL DUP4 DUP2 DIV PUSH8 0xDE0B6B3A7640000 SUB PUSH2 0x5CC JUMPI PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x694 SWAP2 PUSH2 0x1FED JUMP JUMPDEST SWAP4 DUP1 PUSH2 0x6FA JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x6C0 JUMPI DUP4 PUSH2 0x6BB SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x267D JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x115490CC8C081554D115081B9BDD081CD95D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 SUB PUSH2 0x75B JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x721 JUMPI DUP4 PUSH2 0x6BB SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x267D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1091540C8C081554D115081B9BDD081CD95D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F7274656420746F6B656E207374616E64617264000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5553445420616D6F756E74206D757374206265203E2030000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F206163746976652073616C65207068617365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x4C5 JUMPI PUSH1 0x6 DUP2 EQ ISZERO DUP6 PUSH2 0x2F2 JUMP JUMPDEST POP POP PUSH1 0x5 DUP2 EQ ISZERO PUSH1 0x0 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x49434F206973206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD TIMESTAMP GT ISZERO PUSH2 0x2C5 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x89E PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x8A6 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x8F9 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x928 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x9A0 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x96D JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x998 JUMPI JUMPDEST DUP2 PUSH2 0x987 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1FBE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x296 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x962 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x9EE PUSH2 0x2501 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x2 DUP2 ADD SLOAD TIMESTAMP LT PUSH2 0xA90 JUMPI PUSH2 0xA17 CALLER PUSH2 0x2020 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA3F JUMPI PUSH1 0x1 PUSH2 0xA38 SWAP3 ADD PUSH2 0xA2F DUP3 DUP3 SLOAD PUSH2 0x21F3 JUMP JUMPDEST SWAP1 SSTORE CALLER ADDRESS PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2076657374656420746F6B656E7320617661696C61626C6520746F20636C PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x61696D PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B20706572696F64206973207374696C6C206163746976650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20746F6B656E7320616C6C6F636174656420666F722076657374696E6700 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH2 0xB40 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1F95 JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xB5B PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0xB63 PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xB SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xBFB PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 GT ISZERO PUSH2 0xC0A JUMPI PUSH1 0xA SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xC72 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xC7E PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0xC94 DUP3 PUSH2 0x224E JUMP JUMPDEST LT PUSH2 0xD1E JUMPI DUP3 PUSH2 0xCA5 SWAP2 ADDRESS SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH2 0xCB1 PUSH1 0xE SLOAD TIMESTAMP PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x14 DUP4 MUL SWAP1 DUP4 DUP3 DIV PUSH1 0x14 EQ DUP5 ISZERO OR ISZERO PUSH2 0x5CC JUMPI PUSH1 0x3 SWAP3 PUSH1 0x40 MLOAD SWAP5 PUSH2 0xCD4 DUP7 PUSH2 0x1FA2 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x64 PUSH1 0x60 DUP8 ADD SWAP5 DIV DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 MLOAD DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7420656E6F75676820746F6B656E73 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xD70 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0xD7E PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 ISZERO PUSH2 0xEC8 JUMPI DUP3 ISZERO PUSH2 0xE8C JUMPI DUP2 ISZERO PUSH2 0xE47 JUMPI PUSH1 0x5 SLOAD DUP4 SWAP1 PUSH2 0xDB1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x224E JUMP JUMPDEST LT PUSH2 0xE03 JUMPI PUSH2 0xDC4 DUP4 PUSH2 0xE01 SWAP6 CALLER PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH2 0xDDB PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 TIMESTAMP PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0xDE8 DUP5 PUSH2 0x1FA2 JUMP JUMPDEST DUP4 MSTORE TIMESTAMP PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x6 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x23CD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E657220646F65736E2774206861766520656E6F75676820746F6B656E73 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F636B2074696D652073686F756C6420696E20667574757265000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x616D6F756E742073686F756C64206265203E203 PUSH1 0x64 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726563697069656E742061646472657373206973206E6F742076616C69640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xF44 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x80 SWAP2 PUSH2 0xF75 SWAP2 PUSH2 0x1F79 JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH2 0xFA5 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x3 PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xFC5 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 PUSH2 0xFD2 CALLER PUSH2 0x22BB JUMP JUMPDEST LT PUSH2 0xFEC JUMPI PUSH2 0xFE1 SWAP2 CALLER PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420756E6C6F636B65642062616C616E6365206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636175736520796F752068617665206E6F7420636C61696D6564207965740000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x106F PUSH2 0x1068 CALLDATASIZE PUSH2 0x1EFA JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1084 SWAP2 PUSH2 0x1F4B JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x10C0 PUSH2 0x10BB PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x22BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x11C6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x11B2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x118E JUMPI POP PUSH1 0x1 EQ PUSH2 0x112E JUMPI JUMPDEST PUSH2 0x112A DUP4 PUSH2 0x111E DUP2 DUP6 SUB DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1E85 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1174 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x111E PUSH2 0x110E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x115C JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x111E SWAP1 POP PUSH2 0x110E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x10F1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x296 JUMPI PUSH2 0x11F6 SWAP1 PUSH2 0x1F19 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x112A PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT DUP1 ISZERO PUSH2 0x296 JUMPI PUSH2 0x12AD PUSH2 0x2441 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xB SLOAD AND PUSH2 0x1432 JUMPI PUSH1 0x1 DUP3 EQ PUSH1 0x0 DUP2 PUSH2 0x1406 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x13DC JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x13AD JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x137E JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1350 JUMPI JUMPDEST POP ISZERO PUSH2 0x130B JUMPI ISZERO PUSH2 0x4C5 JUMPI PUSH2 0x1304 PUSH1 0x1 SWAP2 PUSH1 0xFF NOT PUSH1 0x11 SLOAD AND PUSH1 0xFF DUP3 AND OR PUSH1 0x11 SSTORE PUSH2 0x1F19 JUMP JUMPDEST ADD SLOAD PUSH1 0xD SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073616C65207068617365207472616E736974696F6E210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x4C5 JUMPI PUSH1 0x6 DUP3 EQ DUP1 PUSH2 0x1366 JUMPI JUMPDEST DUP4 PUSH2 0x12DF JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x4 EQ PUSH2 0x1360 JUMP JUMPDEST DUP1 SWAP2 POP PUSH2 0x4C5 JUMPI PUSH1 0x4 DUP4 EQ DUP1 PUSH2 0x1395 JUMPI JUMPDEST SWAP1 PUSH2 0x12D8 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x3 EQ PUSH2 0x138F JUMP JUMPDEST DUP1 SWAP2 POP PUSH2 0x4C5 JUMPI PUSH1 0x3 DUP4 EQ DUP1 PUSH2 0x13C4 JUMPI JUMPDEST SWAP1 PUSH2 0x12D1 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x2 EQ PUSH2 0x13BE JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 EQ DUP1 PUSH2 0x13EE JUMPI JUMPDEST SWAP1 PUSH2 0x12CA JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x1 EQ PUSH2 0x13E8 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x141E JUMPI ISZERO SWAP1 PUSH2 0x12C3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206368616E6765207068617365207768696C652049434F206973 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x81C185D5CD959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x1495 CALLDATASIZE PUSH2 0x1EFA JUMP JUMPDEST PUSH2 0x149D PUSH2 0x2441 JUMP JUMPDEST PUSH2 0x14A6 DUP3 PUSH2 0x1F19 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x158D JUMPI DUP1 PUSH1 0x2 PUSH2 0x14B8 DUP5 PUSH2 0x1F19 JUMP JUMPDEST ADD SSTORE PUSH2 0x14C3 DUP3 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP2 SLOAD DUP4 LT ISZERO PUSH2 0xE01 JUMPI PUSH2 0x14DA DUP4 DUP4 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x157F JUMPI PUSH2 0x150D DUP2 DUP6 PUSH2 0x1F79 JUMP JUMPDEST POP SLOAD ISZERO ISZERO DUP1 PUSH2 0x1551 JUMPI JUMPDEST SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x1526 JUMPI JUMPDEST ADD PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x153D DUP5 DUP4 PUSH2 0x1535 DUP5 DUP10 PUSH2 0x1F79 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x1549 DUP4 DUP9 PUSH2 0x1F79 JUMP JUMPDEST POP ADD SSTORE PUSH2 0x1520 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x2 PUSH2 0x1560 DUP4 DUP8 PUSH2 0x1F79 JUMP JUMPDEST POP ADD SLOAD AND SWAP1 PUSH1 0x7 DUP8 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x4C5 JUMPI SWAP1 DUP7 EQ PUSH2 0x1517 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP2 POP PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642073616C65207068617365 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xE01 PUSH2 0x15E3 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x15F2 DUP3 CALLER DUP4 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x246A JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1610 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x20 SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1634 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x10C0 PUSH2 0x1696 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x224E JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x10C0 PUSH2 0x16B9 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x2200 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x16D7 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x16DF PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16F3 DUP2 ISZERO ISZERO PUSH2 0x2094 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1747 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9A0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1883 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x1848 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x44 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x5 SLOAD AND PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9A0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1806 JUMPI JUMPDEST POP ISZERO PUSH2 0x17CF JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1DDA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1840 JUMPI JUMPDEST DUP2 PUSH2 0x181F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1FBE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x183C JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1839 JUMPI POP DUP2 PUSH2 0x17C7 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207573647420746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x18AD JUMPI JUMPDEST DUP2 PUSH2 0x189D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1FBE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1839 JUMPI POP MLOAD DUP3 PUSH2 0x1781 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1890 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x18D6 PUSH2 0x1ECE JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1911 PUSH2 0x2501 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x1996 JUMPI PUSH2 0x1938 DUP2 DUP4 PUSH2 0x1F79 JUMP JUMPDEST POP SLOAD ISZERO ISZERO DUP1 PUSH2 0x197E JUMPI JUMPDEST PUSH2 0x194F JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1925 JUMP JUMPDEST SWAP2 PUSH2 0x1968 PUSH1 0x1 SWAP2 PUSH2 0x1960 DUP6 DUP6 PUSH2 0x1F79 JUMP JUMPDEST POP SLOAD SWAP1 PUSH2 0x21F3 JUMP JUMPDEST SWAP3 PUSH1 0x0 PUSH2 0x1975 DUP3 DUP6 PUSH2 0x1F79 JUMP JUMPDEST POP SSTORE SWAP1 POP PUSH2 0x1947 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x198B DUP3 DUP5 PUSH2 0x1F79 JUMP JUMPDEST POP ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1942 JUMP JUMPDEST DUP3 DUP1 ISZERO PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20756E6C6F636B656420746F6B656E7320746F20636C61696D0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0xE01 PUSH1 0x4 CALLDATALOAD CALLER PUSH2 0x246A JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1A4E PUSH2 0x2441 JUMP JUMPDEST TIMESTAMP DUP2 GT ISZERO PUSH2 0x1A5B JUMPI PUSH1 0x9 SSTORE STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D75737420626520696E2074686520667574757265 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x112A PUSH2 0x111E PUSH2 0x20D2 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1AD4 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO AND DUP1 SWAP2 PUSH1 0xFF NOT AND OR PUSH1 0xB SSTORE PUSH2 0x1AEE JUMPI STOP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1B32 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x1B3A PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B4E DUP2 ISZERO ISZERO PUSH2 0x2094 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1B84 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x1B8C PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 PUSH2 0x1B9A DUP5 PUSH2 0x22BB JUMP JUMPDEST LT PUSH2 0x1BB3 JUMPI PUSH2 0xFE1 SWAP3 PUSH2 0x1BAE DUP4 CALLER DUP4 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520746F6B656E7320617265207374696C6C206C6F636B6564206F722079 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1BDD481A185D995B89DD0818DB185A5B5959081E595D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x10C0 PUSH2 0x1C35 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x2020 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1C53 PUSH2 0x2441 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x1C78 JUMPI PUSH1 0x5 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 CALL ISZERO PUSH2 0x9A0 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20424E4220617661696C61626C6520696E20636F6E747261637400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1CF4 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1D77 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1D61 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1E42 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x11B2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x118E JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DE2 JUMPI PUSH2 0x112A DUP4 PUSH2 0x111E DUP2 DUP6 SUB DUP3 PUSH2 0x1FBE JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1E28 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x111E PUSH2 0x110E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1E10 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1DB6 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xE SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1EB8 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x296 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1F63 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1F63 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x4C5 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4DB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4DB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x5CC JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1FF7 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x5CC JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 TIMESTAMP DUP3 GT PUSH2 0x208D JUMPI PUSH2 0x206B PUSH2 0x2060 PUSH2 0x2057 PUSH2 0x2081 SWAP5 TIMESTAMP PUSH2 0x1FE0 JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD SWAP1 PUSH2 0x200D JUMP JUMPDEST SWAP1 DUP1 SLOAD DUP1 DUP4 GT PUSH2 0x2084 JUMPI JUMPDEST POP PUSH1 0x1 ADD SLOAD SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH2 0x2076 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x209B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0xB SLOAD AND PUSH2 0x21B8 JUMPI PUSH1 0x9 SLOAD DUP1 ISZERO DUP1 ISZERO PUSH2 0x21AE JUMPI JUMPDEST PUSH2 0x219F JUMPI TIMESTAMP LT ISZERO DUP1 PUSH2 0x2193 JUMPI JUMPDEST PUSH2 0x2168 JUMPI PUSH1 0xA SLOAD TIMESTAMP GT PUSH2 0x213D JUMPI PUSH1 0x40 MLOAD PUSH2 0x2110 PUSH1 0x40 DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH32 0x49434F20686173206E6F74207374617274656420796574000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214B PUSH1 0x40 DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0xD DUP2 MSTORE PUSH13 0x1250D3C81A185CC8195B991959 PUSH1 0x9A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2176 PUSH1 0x40 DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0xD DUP2 MSTORE PUSH13 0x49434F20697320616374697665 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0xA SLOAD TIMESTAMP GT ISZERO PUSH2 0x20F5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2110 PUSH1 0x40 DUP3 PUSH2 0x1FBE JUMP JUMPDEST POP PUSH1 0xA SLOAD ISZERO PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C6 PUSH1 0x40 DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x1F DUP2 MSTORE PUSH32 0x49434F206973206D616E75616C6C7920706175736564206279206F776E657200 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5CC JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD TIMESTAMP DUP2 GT PUSH2 0x2249 JUMPI SWAP1 PUSH2 0x2237 PUSH2 0x2060 PUSH2 0x2057 PUSH2 0x2081 SWAP5 TIMESTAMP PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 SLOAD DUP1 DUP3 GT ISZERO PUSH2 0x1FE0 JUMPI SWAP1 POP DUP1 PUSH2 0x1FE0 JUMP JUMPDEST POP SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x10 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH2 0x2081 SWAP4 SWAP3 SWAP2 DUP2 PUSH2 0x2283 JUMPI JUMPDEST POP POP PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x2293 SWAP3 SWAP4 POP PUSH1 0x1 ADD SLOAD SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 CODESIZE DUP1 PUSH2 0x227C JUMP JUMPDEST PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x4C5 JUMPI MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1F63 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x23B9 JUMPI PUSH1 0x40 MLOAD SWAP5 PUSH2 0x22FB PUSH1 0x20 DUP4 PUSH1 0x5 SHL ADD DUP8 PUSH2 0x1FBE JUMP JUMPDEST DUP2 DUP7 MSTORE DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 DUP5 SWAP2 DUP8 ADD JUMPDEST DUP4 DUP4 LT PUSH2 0x236E JUMPI POP POP POP POP DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x235A JUMPI PUSH2 0x232A DUP2 DUP7 PUSH2 0x22A7 JUMP JUMPDEST MLOAD MLOAD PUSH2 0x2339 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2317 JUMP JUMPDEST SWAP2 PUSH2 0x2352 PUSH1 0x1 SWAP2 PUSH2 0x234A DUP6 DUP9 PUSH2 0x22A7 JUMP JUMPDEST MLOAD MLOAD SWAP1 PUSH2 0x21F3 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x2331 JUMP JUMPDEST POP SWAP3 POP PUSH2 0x2369 PUSH2 0x2081 SWAP3 PUSH2 0x224E JUMP JUMPDEST PUSH2 0x1FE0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x2381 DUP2 PUSH2 0x1FA2 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE PUSH2 0x23A1 PUSH1 0xFF PUSH1 0x2 DUP9 ADD SLOAD AND PUSH1 0x40 DUP4 ADD PUSH2 0x229B JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x230A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x23EA SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1F79 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x242B JUMPI DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SWAP2 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x3 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2455 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x24EB JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x24D2 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x2512 JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP3 SWAP2 SWAP1 PUSH1 0x0 NOT DUP5 LT PUSH2 0x255F JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x25A9 JUMPI DUP1 ISZERO PUSH2 0x1D77 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1D61 JUMPI PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2559 JUMP JUMPDEST POP DUP3 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x24EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2667 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x264D JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x26C5 PUSH1 0x84 DUP3 PUSH2 0x1FBE JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x9A0 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x270E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x26ED JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x26E6 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ",
              "sourceMap": "369:15010:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;-1:-1:-1;;;;;369:15010:13;;:::i;:::-;;;;1127:59;369:15010;;;;;;;;1127:59;;;;369:15010;1127:59;;;;;369:15010;1127:59;;369:15010;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;;;;;;;;;;;4094:8;369:15010;4075:15;:27;;:56;;;369:15010;;;;2466:103:11;;:::i;:::-;369:15010:13;6589:9;369:15010;;;;;;;;;6589:33;;;:73;;;;369:15010;6589:113;;;369:15010;;;;;6785:21;;;:::i;:::-;6812:19;6901:40;369:15010;6915:26;;369:15010;4075:15;6901:40;:::i;:::-;6982:9;;:13;;;;;7046:15;;369:15010;;7113:13;;369:15010;;7185:6;6982:9;369:15010;6982:9;;369:15010;;7185:6;369:15010;;;;;7172:32;;;:::i;:::-;6978:908;;7901:15;;369:15010;;;;;7959:43;369:15010;;1710:6:0;369:15010:13;;;8050:18;;-1:-1:-1;;;;;369:15010:13;8050:18;:::i;:::-;:33;369:15010;;8174:10;369:15010;;8158:15;369:15010;;8158:213;369:15010;;;;6589:9;369:15010;;;8200:165;369:15010;;;;;;:::i;:::-;;;;4075:15;369:15010;8200:165;;369:15010;;8200:165;;;:::i;:::-;;369:15010;8200:165;;369:15010;8158:213;:::i;:::-;8379:22;369:15010;6589:9;369:15010;;8379:22;:::i;:::-;369:15010;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;:::i;:::-;;;;;;8174:10;;369:15010;;;;;;;;;;;;;;;8424:25;369:15010;8424:25;369:15010;8424:25;:::i;:::-;;369:15010;8455:43;369:15010;;;8455:43;:::i;:::-;369:15010;;1710:6:0;369:15010:13;8537:11;;8174:10;;;;-1:-1:-1;;;;;369:15010:13;8537:11;:::i;:::-;369:15010;6589:9;369:15010;;;;;;;;;8679:127;8174:10;;369:15010;;8557:11;369:15010;;;;;;8174:10;369:15010;;8557:11;369:15010;;;;;;8616:35;:50;369:15010;;;8616:50;:::i;:::-;369:15010;;8720:14;;;;:39;;369:15010;;;;;;;;;;;;;;;;8174:10;;369:15010;;8679:127;369:15010;3068:21:11;369:15010:13;;8720:39;6982:9;;8720:39;;;369:15010;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;6589:9;369:15010;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;6589:9;369:15010;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;6978:908;7267:14;;;;;;369:15010;;7349:6;369:15010;;;;;7349:6;369:15010;;;;7359:18;;369:15010;7335:42;;;:::i;:::-;369:15010;7393:36;;;-1:-1:-1;369:15010:13;;-1:-1:-1;;;;;369:15010:13;7453:32;;369:15010;;7569:4;7576:10;7569:4;;7549:10;;7576;;:::i;:::-;6978:908;;369:15010;;;-1:-1:-1;;;369:15010:13;;;;;;;6785:10;369:15010;;;;-1:-1:-1;;;369:15010:13;;;;;;;7389:491;369:15010;7608:36;369:15010;;7676:9;369:15010;-1:-1:-1;;;;;369:15010:13;7668:32;;369:15010;;7784:4;7791:10;7784:4;;7764:10;;7791;;:::i;369:15010::-;;;-1:-1:-1;;;369:15010:13;;;;;;;6785:10;369:15010;;;;-1:-1:-1;;;369:15010:13;;;;;;;7604:276;369:15010;;-1:-1:-1;;;7833:36:13;;369:15010;;7833:36;;369:15010;;;;;;;;;;;7833:36;;;369:15010;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;6589:113;369:15010;;;;6687:15;6674:28;;;6589:113;;;:73;-1:-1:-1;;6647:15:13;6634:28;;;369:15010;6589:73;;369:15010;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;4075:56;369:15010;4125:6;369:15010;4075:15;4106:25;;4075:56;;369:15010;;;;;;-1:-1:-1;;369:15010:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;369:15010:13;2627:22:0;;2623:91;;3004:6;369:15010:13;;-1:-1:-1;;;;;;369:15010:13;;;;;;;-1:-1:-1;;;;;369:15010:13;3052:40:0;-1:-1:-1;;3052:40:0;369:15010:13;2623:91:0;2672:31;;;369:15010:13;2672:31:0;369:15010:13;;;;;2672:31:0;369:15010:13;;;;;;-1:-1:-1;;369:15010:13;;;;1500:62:0;;:::i;:::-;14036:9:13;369:15010;;;-1:-1:-1;;;14036:34:13;;14064:4;369:15010;14036:34;;369:15010;;;;;;14036:34;;369:15010;;-1:-1:-1;;;;;369:15010:13;14036:34;;;;;;369:15010;14036:34;;;369:15010;;;;;;;;;14036:34;;369:15010;14036:34;;369:15010;14036:34;;;;;;369:15010;14036:34;;;:::i;:::-;;;369:15010;;;;;;;14036:34;;;;;-1:-1:-1;14036:34:13;;;369:15010;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;546:23;369:15010;;;-1:-1:-1;;;;;369:15010:13;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;2466:103:11;;:::i;:::-;11645:10:13;369:15010;;11628:16;369:15010;;;;;;;11674:24;369:15010;;11784:20;;;369:15010;11765:15;:39;369:15010;;11887:29;11645:10;11887:29;:::i;:::-;11934:12;;369:15010;;11997:22;12078:8;11997:22;;:34;369:15010;;;11997:34;:::i;:::-;369:15010;;11645:10;12059:4;12078:8;:::i;:::-;11997:22;3068:21:11;369:15010:13;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;1467:26;369:15010;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;575:23;369:15010;;;-1:-1:-1;;;;;369:15010:13;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;765:23;369:15010;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;1500:62:0;;:::i;:::-;4506:8:13;369:15010;4495:19;;369:15010;;;4562:17;369:15010;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;:::i;:::-;;;1500:62:0;;;:::i;:::-;1710:6;369:15010:13;-1:-1:-1;;;;;369:15010:13;11181:18;;369:15010;11181:18;:::i;:::-;:28;369:15010;;11268:4;11275:6;11268:4;;11275:6;;:::i;:::-;11429:30;11447:12;369:15010;11429:15;:30;:::i;:::-;11499:2;369:15010;;;;;;11499:2;369:15010;;;;;;;;;;;;;;;:::i;:::-;;;;11323:196;;369:15010;;;;;11323:196;;369:15010;;;11505:3;11323:196;;;369:15010;;;;;;;;;;;;11293:16;369:15010;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;:::i;:::-;;;;;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;369:15010:13;;14805:24;;369:15010;;14882:11;;369:15010;;14936:13;;369:15010;;1710:6:0;369:15010:13;;;14998:18;;-1:-1:-1;;;;;369:15010:13;14998:18;:::i;:::-;:29;369:15010;;15117:7;15093:10;15142:228;15093:10;;15117:7;:::i;:::-;369:15010;;15142:15;369:15010;;15322:27;369:15010;;;15247:15;;15322:27;:::i;:::-;369:15010;;;;;;:::i;:::-;;;15247:15;369:15010;15176:185;;369:15010;15282:15;369:15010;15176:185;;369:15010;;15176:185;;369:15010;15142:228;:::i;:::-;369:15010;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;922:42;369:15010;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;:::i;:::-;-1:-1:-1;;;;;369:15010:13;;;;;1701:60;369:15010;;;;;;;;;;;1701:60;;;;;369:15010;1701:60;;;;:::i;:::-;369:15010;;;1701:60;369:15010;;1701:60;;369:15010;1701:60;;369:15010;1701:60;;;369:15010;;1701:60;;369:15010;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;:::i;:::-;;;10537:10;10520:28;10537:10;10520:28;:::i;:::-;:38;369:15010;;3459:5:5;10537:10:13;;3459:5:5;:::i;:::-;369:15010:13;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:50;369:15010;;;:::i;:::-;1767:50;;;:::i;:::-;369:15010;;1767:50;;;;;369:15010;1767:50;;;;:::i;:::-;369:15010;;;;;;;;;;-1:-1:-1;;;;;369:15010:13;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;369:15010:13;;-1:-1:-1;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;;;;;;;;;;;;;;;-1:-1:-1;369:15010:13;;-1:-1:-1;369:15010:13;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;;;;;;;1499:53;;;:::i;:::-;369:15010;;;1499:53;;;;369:15010;1499:53;;369:15010;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;1710:6:0;369:15010:13;;;-1:-1:-1;;;;;369:15010:13;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;709:23;369:15010;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;825:25;369:15010;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;;;;;;;;1500:62:0;;:::i;:::-;369:15010:13;5576:11;369:15010;;;;5672:21;5663:30;;369:15010;5663:30;:83;;369:15010;5662:192;;;;369:15010;5662:296;;;;369:15010;5662:402;;;;369:15010;5662:485;;;;369:15010;;;;;;;;6253:17;5672:21;369:15010;;;6213:17;369:15010;;;;;;6213:17;369:15010;6253:17;:::i;:::-;:23;369:15010;6240:36;369:15010;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;5662:485;369:15010;;;;6094:15;6085:24;;:61;;;5662:485;;;;6085:61;369:15010;;6113:9;369:15010;;;;;;;;;6113:33;6085:61;;5662:402;369:15010;;;;;;5979:29;;:84;;;5662:402;;;;5979:84;369:15010;;6032:9;369:15010;;;;;;;;6045:18;6032:31;5979:84;;5662:296;369:15010;;;;;5884:18;5875:27;;:82;;;5662:296;;;;5875:82;369:15010;;5926:9;369:15010;;;;;;;;5939:18;5926:31;5875:82;;5662:192;369:15010;;5777:18;5768:27;;:85;;;5662:192;;;;5768:85;369:15010;;5819:9;369:15010;;;;;;;;5672:21;5819:34;5768:85;;5663:83;369:15010;;;5713:9;369:15010;;;;;;;;5713:33;5663:83;;;369:15010;-1:-1:-1;;;369:15010:13;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;4877:17:13;;;:::i;:::-;369:15010;4877:37;369:15010;;4947:17;:31;:17;;;:::i;:::-;:31;369:15010;5025:18;;;:::i;:::-;369:15010;5053:434;5092:3;369:15010;;5073:17;;;;;5165:9;;;;:::i;:::-;369:15010;;;;;;;;;;;;;;5149:15;369:15010;;;;;5194:13;369:15010;5231:3;369:15010;;5209:20;;;;;5258:12;;;;:::i;:::-;369:15010;;5258:23;;:54;;;5231:3;5254:209;369:15010;5254:209;;;5231:3;369:15010;5194:13;;5254:209;5386:58;:12;;;;;;:::i;:::-;:25;;369:15010;5386:58;:::i;:::-;369:15010;5336:12;;;;:::i;:::-;:23;;369:15010;5254:209;;5258:54;5285:12;369:15010;4947:31;5285:12;;;;:::i;:::-;:18;;369:15010;;;;;;;;;;;;;;;5258:54;5285:27;;5258:54;;5209:20;-1:-1:-1;369:15010:13;;;;;5209:20;-1:-1:-1;5058:13:13;;369:15010;;;-1:-1:-1;;;369:15010:13;;;;;;;4877:10;369:15010;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;1166:5:7;369:15010:13;;:::i;:::-;;;735:10:10;1135:5:7;735:10:10;;1135:5:7;;:::i;:::-;1166;:::i;369:15010:13:-;;;;;;-1:-1:-1;;369:15010:13;;;;1500:62:0;;:::i;:::-;369:15010:13;14164:21;369:15010;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;1500:62:0;;:::i;:::-;3004:6;369:15010:13;;-1:-1:-1;;;;;;369:15010:13;;;;;;;-1:-1:-1;;;;;369:15010:13;3052:40:0;369:15010:13;;3052:40:0;369:15010:13;;;;;;;-1:-1:-1;;369:15010:13;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;369:15010:13;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;369:15010:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;369:15010:13;3914:52;3922:24;;;3914:52;:::i;:::-;369:15010;;;3976:30;369:15010;;;3976:30;369:15010;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;794:25;369:15010;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;1500:62:0;;:::i;:::-;14264:9:13;369:15010;;;-1:-1:-1;;;14264:34:13;;14292:4;369:15010;14264:34;;369:15010;-1:-1:-1;;;;;369:15010:13;;;;;;14264:34;369:15010;;14264:34;;;;;;;369:15010;14264:34;;;369:15010;14316:10;;;369:15010;;;;14368:35;369:15010;;;;;1710:6:0;369:15010:13;;;;;;;;;;;;;14368:35;;369:15010;14368:35;;369:15010;14264:34;369:15010;;;14368:35;;;;;;;369:15010;14368:35;;;369:15010;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;14264:34;369:15010;;;-1:-1:-1;;;14368:35:13;369:15010;;;;;;14368:35;369:15010;14368:35;;369:15010;14368:35;;;;;;369:15010;14368:35;;;:::i;:::-;;;369:15010;;;;;;;;;;;;;14368:35;;;;369:15010;;;;;;;14368:35;;;-1:-1:-1;14368:35:13;;369:15010;;;-1:-1:-1;;;369:15010:13;;;;;;;;14264:34;369:15010;;;-1:-1:-1;;;369:15010:13;;;;;;;14264:34;;369:15010;14264:34;;369:15010;14264:34;;;;;;369:15010;14264:34;;;:::i;:::-;;;369:15010;;;;;;14264:34;;;;;;-1:-1:-1;14264:34:13;;369:15010;;;;;;-1:-1:-1;;369:15010:13;;;;-1:-1:-1;;;;;369:15010:13;;:::i;:::-;;;;2123:54;369:15010;;;;;;2123:54;369:15010;;2123:54;;369:15010;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;2466:103:11;;:::i;:::-;8924:10:13;369:15010;;8908:15;369:15010;;;;;;8986:13;369:15010;9023:3;369:15010;;9001:20;;;;;9063:12;;;;:::i;:::-;369:15010;;9063:23;;:85;;;9023:3;9042:260;;9023:3;369:15010;;8986:13;;9042:260;9199:12;9181:37;369:15010;9199:12;;;;;:::i;:::-;369:15010;;9181:37;;:::i;:::-;9236:12;369:15010;9236:12;;;;:::i;:::-;369:15010;;9042:260;;;;9063:85;9125:12;:23;:12;;;;:::i;:::-;:23;;369:15010;9106:15;:42;;9063:85;;9001:20;;9329:18;;369:15010;;;;;;;9394:41;369:15010;8924:10;9394:41;;369:15010;3068:21:11;369:15010:13;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;692:5:7;369:15010:13;;735:10:10;692:5:7;:::i;369:15010:13:-;;;;;;-1:-1:-1;;369:15010:13;;;;;;1500:62:0;;:::i;:::-;4303:15:13;4290:28;;369:15010;;;4386:21;369:15010;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;369:15010:13;;;;1500:62:0;;:::i;:::-;4659:11:13;369:15010;;;;;4658:12;369:15010;;;;;;;4659:11;369:15010;4680:69;;369:15010;4680:69;4711:27;369:15010;;-1:-1:-1;;369:15010:13;4723:15;369:15010;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;;2780:2:5;369:15010:13;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;369:15010:13;3734:52;3742:24;;;3734:52;:::i;:::-;369:15010;;;3796:30;369:15010;;;3796:30;369:15010;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;:::i;:::-;;;:::i;:::-;;;10874:24;;;;;:::i;:::-;:34;369:15010;;4986:5:5;735:10:10;4950:5:5;735:10:10;;4950:5:5;;:::i;:::-;4986;:::i;369:15010:13:-;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;369:15010:13;;;;1500:62:0;;:::i;:::-;14505:21:13;14543:11;;369:15010;;1710:6:0;369:15010:13;;;;;;;;;-1:-1:-1;;;;;369:15010:13;;14596:34;;;;369:15010;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;2927:12:5;369:15010:13;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;:::i;:::-;;;735:10:10;;9813:19:5;9809:89;;-1:-1:-1;;;;;369:15010:13;;9911:21:5;;9907:90;;735:10:10;369:15010:13;;;;;;;;;-1:-1:-1;369:15010:13;;;;;-1:-1:-1;369:15010:13;;;;;;;10085:31:5;369:15010:13;735:10:10;10085:31:5;;369:15010:13;;;;;;;9907:90:5;9955:31;;;369:15010:13;9955:31:5;369:15010:13;;;;;9955:31:5;9809:89;9855:32;;;369:15010:13;9855:32:5;369:15010:13;;;;;9855:32:5;369:15010:13;;;;;;-1:-1:-1;;369:15010:13;;;;;;;1856:5:5;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1856:5:5;369:15010:13;;;;;;;;;;;;-1:-1:-1;369:15010:13;;-1:-1:-1;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;738:21;369:15010;;;;;;;;;;;;;-1:-1:-1;;369:15010:13;;;;;;877:39;369:15010;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;369:15010:13;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;369:15010:13;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;369:15010:13;4877:10;369:15010;;;-1:-1:-1;369:15010:13;;:::o;:::-;;;;;;;-1:-1:-1;369:15010:13;5025:11;369:15010;;;-1:-1:-1;369:15010:13;;:::o;:::-;;;;;;;;-1:-1:-1;369:15010:13;;-1:-1:-1;369:15010:13;;;-1:-1:-1;369:15010:13;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;369:15010:13;;-1:-1:-1;369:15010:13;;;;;;-1:-1:-1;369:15010:13;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13260:583::-;-1:-1:-1;;;;;369:15010:13;;;;;13376:16;369:15010;;;;;13431:20;;;369:15010;;13413:15;:38;-1:-1:-1;13409:77:13;;13626:41;13522:70;13523:38;13798;13413:15;;13523:38;:::i;:::-;13577:15;369:15010;13522:70;;:::i;:::-;13644:23;;;369:15010;13626:41;;:::i;:::-;369:15010;;;13682:36;;;13678:103;;13260:583;13814:22;;;369:15010;13798:38;;:::i;:::-;13260:583;:::o;13678:103::-;;-1:-1:-1;13814:22:13;13678:103;;13409:77;13467:8;;369:15010;13467:8;:::o;369:15010::-;;;;:::o;:::-;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;9878:421;369:15010;9953:11;369:15010;;9949:57;;10020:8;369:15010;10020:13;;:28;;;;9878:421;10016:66;;10096:15;:27;;:56;;;9878:421;10092:96;;10220:6;369:15010;10096:15;10202:24;10198:52;;369:15010;;;;;;:::i;:::-;;;;;;;;;9878:421;:::o;10198:52::-;369:15010;;;;;;:::i;:::-;;;;-1:-1:-1;;;369:15010:13;;;;10228:22;:::o;10092:96::-;369:15010;;;;;;:::i;:::-;;;;-1:-1:-1;;;369:15010:13;;;;10166:22;:::o;10096:56::-;369:15010;10146:6;369:15010;10096:15;10127:25;;10096:56;;10016:66;369:15010;;;;;;;:::i;10020:28::-;369:15010;10037:6;369:15010;10037:11;10020:28;;9949:57;369:15010;;;;;;:::i;:::-;;;;;;;;;9966:40;:::o;369:15010::-;;;;;;;;;;:::o;12593:661::-;-1:-1:-1;;;;;369:15010:13;;;;;12707:16;369:15010;;;;;12761:20;;;369:15010;12743:15;:38;-1:-1:-1;12739:96:13;;12743:15;13041:41;12949:58;12950:38;13211:36;12743:15;;12950:38;:::i;13041:41::-;369:15010;;13096:36;;;13092:103;13211:36;13092:103;13148:36;-1:-1:-1;13148:36:13;13211;:::i;12739:96::-;369:15010;;12797:27;:::o;12100:487::-;-1:-1:-1;;;;;369:15010:13;3095:9:5;369:15010:13;;;;;;;;;;;;12350:16;369:15010;;;;;;;12550:30;;3095:9:5;369:15010:13;;12419:115;;12100:487;12550:30;;;:::i;12419:115::-;12478:45;12501:22;;;;;369:15010;12478:45;;:::i;:::-;12419:115;;;;;369:15010;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;9448:424::-;-1:-1:-1;;;;;369:15010:13;;9548:1;369:15010;;;9596:15;369:15010;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;9635:13;;;;;9672:3;369:15010;;9650:20;;;;;9712:12;;;;:::i;:::-;;369:15010;9691:121;;9672:3;369:15010;;9635:13;;9691:121;9778:12;9768:29;369:15010;9778:12;;;;;:::i;:::-;;369:15010;9768:29;;:::i;:::-;9691:121;;;;;9650:20;;;;9838:18;:27;9650:20;9838:18;:::i;:::-;:27;:::i;369:15010::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;-1:-1:-1;;;369:15010:13;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;1796:162:0;1710:6;369:15010:13;-1:-1:-1;;;;;369:15010:13;735:10:10;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:10;1901:40:0;369:15010:13;;-1:-1:-1;1901:40:0;7984:206:5;-1:-1:-1;;;;;369:15010:13;8054:21:5;;8050:89;;8073:1;369:15010:13;;;;;;;;;;;6340:19:5;;;6336:115;;369:15010:13;7083:25:5;369:15010:13;;;;;;;;;;;;;;;6810:21:5;369:15010:13;;6810:21:5;369:15010:13;;;;;;7083:25:5;7984:206::o;6336:115::-;369:15010:13;6386:50:5;;;;;;;;369:15010:13;;;;;6386:50:5;8050:89;8098:30;;;8073:1;8098:30;8073:1;8098:30;369:15010:13;;8073:1:5;8098:30;2575:307:11;1899:1;2702:7;369:15010:13;2702:18:11;2698:86;;1899:1;2702:7;369:15010:13;2575:307:11:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:11;;-1:-1:-1;2743:30:11;10415:476:5;-1:-1:-1;;;;;369:15010:13;;;-1:-1:-1;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;10415:476:5;;-1:-1:-1;;10580:36:5;;10576:309;;10415:476;;;;;:::o;10576:309::-;10636:24;;;10632:130;;9813:19;;9809:89;;-1:-1:-1;;;;;369:15010:13;;9911:21:5;9907:90;;-1:-1:-1;369:15010:13;3657:11:5;369:15010:13;;;-1:-1:-1;369:15010:13;10006:27:5;369:15010:13;;;;;;-1:-1:-1;369:15010:13;;;;-1:-1:-1;369:15010:13;;;;;10576:309:5;;;;;;10632:130;10687:60;;;;;;-1:-1:-1;10687:60:5;369:15010:13;;;;;;10687:60:5;369:15010:13;;;;;;-1:-1:-1;10687:60:5;5393:300;-1:-1:-1;;;;;369:15010:13;;5476:18:5;;5472:86;;-1:-1:-1;;;;;369:15010:13;;5571:16:5;;5567:86;;5492:1;369:15010:13;;;;;;;;;;6340:19:5;;;6336:115;;369:15010:13;;;;7083:25:5;369:15010:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:25:5;5393:300::o;6336:115::-;6386:50;369:15010:13;6386:50:5;;;;;;;;369:15010:13;;;;;6386:50:5;5567:86;5610:32;;;5492:1;5610:32;5492:1;5610:32;369:15010:13;;5492:1:5;5610:32;1618:188:9;369:15010:13;;-1:-1:-1;;;1745:53:9;;;;;;;-1:-1:-1;;;;;369:15010:13;;;1745:53:9;;;369:15010:13;;;;;;;;;;;;;;;;;1745:53:9;;;1618:188;-1:-1:-1;;1745:53:9;;;369:15010:13;1745:53:9;:::i;:::-;7823:421;;;;;;;;;-1:-1:-1;7823:421:9;;8258:15;;-1:-1:-1;;;;;;369:15010:13;;8276:26:9;:31;8258:68;8254:146;;1618:188;:::o;8254:146::-;-1:-1:-1;;;;8349:40:9;;;-1:-1:-1;;;;;369:15010:13;;;;8349:40:9;369:15010:13;1745:53:9;;8349:40;8258:68;8325:1;8310:16;;8258:68;"
            },
            "methodIdentifiers": {
              "PauseResume()": "388727bc",
              "TransferRewards(address,uint256,uint256)": "ba91778f",
              "Withdraw()": "57ea89b6",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "availableBalance(address)": "a0821be3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "buyToken(uint256,uint256,uint8)": "f5e34ac0",
              "checkStatus()": "3b7104f2",
              "claimTokens()": "48c54b9d",
              "claimVestedTokens()": "e74f3fbb",
              "decimals()": "313ce567",
              "getBNBbalance()": "762687cf",
              "getLockedTokens(address)": "6b2d95d4",
              "getUSDTbalance()": "ee6d12a6",
              "getUnlockedTokens(address)": "1f803ac3",
              "icoEnd()": "0563451a",
              "icoStart()": "827037db",
              "lockDuration()": "04554443",
              "lockingBalances(address,uint256)": "ae3218bc",
              "manualPause()": "cd94b54b",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "phaseBuyers(uint8,uint256)": "a0ce9433",
              "renounceOwnership()": "715018a6",
              "salePhase()": "e4f2487a",
              "salePhases(uint8)": "8e58e76e",
              "setBEP20USDT(address)": "68819f7a",
              "setERC20USDT(address)": "2b3935a6",
              "setEndTime(uint256)": "ccb98ffc",
              "setLockingPeriod(uint8,uint256)": "79fbe635",
              "setSalePhase(uint8)": "7ad59431",
              "setStartTime(uint256)": "3e0a322d",
              "soldTokens()": "5ed9ebfc",
              "symbol()": "95d89b41",
              "tokenPrice()": "7ff9b596",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "transferWithLock(address,uint256)": "bfdc33a8",
              "usdtBEP20()": "cf26d536",
              "usdtERC20()": "ed65af74",
              "userDetails(address)": "48dec2a7",
              "vestingInterval()": "b8e50cab",
              "vestingSchedules(address)": "fdb20ccb",
              "withdrawBNB()": "1d111d13"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtERC20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdtBEP20\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"TokenBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PauseResume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime_\",\"type\":\"uint256\"}],\"name\":\"TransferRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bnbPrice_\",\"type\":\"uint256\"},{\"internalType\":\"enum ChainSphereTokenICO.TokenStandard\",\"name\":\"tokenStandard\",\"type\":\"uint8\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkStatus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimVestedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBNBbalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getLockedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDTbalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUnlockedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockingBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchaseTime\",\"type\":\"uint256\"},{\"internalType\":\"enum ChainSphereTokenICO.SalePhase\",\"name\":\"phase\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ChainSphereTokenICO.SalePhase\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"phaseBuyers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salePhase\",\"outputs\":[{\"internalType\":\"enum ChainSphereTokenICO.SalePhase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ChainSphereTokenICO.SalePhase\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"salePhases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allocatedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockingPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtBEP20\",\"type\":\"address\"}],\"name\":\"setBEP20USDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtERC20\",\"type\":\"address\"}],\"name\":\"setERC20USDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"endTime_\",\"type\":\"uint256\"}],\"name\":\"setEndTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ChainSphereTokenICO.SalePhase\",\"name\":\"phase\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"setLockingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ChainSphereTokenICO.SalePhase\",\"name\":\"phase\",\"type\":\"uint8\"}],\"name\":\"setSalePhase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime_\",\"type\":\"uint256\"}],\"name\":\"setStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferWithLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtBEP20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtERC20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"saleType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingSchedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockPerBatch\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ICO.sol\":\"ChainSphereTokenICO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ICO.sol\":{\"keccak256\":\"0xec20e82eebd2478b10a8c9399ca0ab9d05e4ea293e31837338a131b4f2631f28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8226b77025001aec52baeea2e6f9ce7f7eac5370265c8a855958302daea4e26\",\"dweb:/ipfs/QmeYT6bTSr6xffaY3GZq7vr3vky8rzGKwVHEWRMvtd5NTB\"]}},\"version\":1}"
        }
      }
    }
  }
}